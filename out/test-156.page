<div id="pf9c" class="pf w0 h0" data-page-no="9c"><div class="pc pc9c w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg9c.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">132</div><div class="t m0 xb9 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 x16 h2c y1d0 ffb fs19 fcb sc0 lsf6 ws0">HAPTER</div><div class="t m0 x68 h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 7</div><div class="t m0 x1f h2d y80 ffa fs7 fcb sc0 ls6 ws0">Extensibility and f<span class="_ _e"></span>lexibility</div><div class="t m0 x44 h15 y40 ff4 fsb fc3 sc0 ls31 ws376">the business logic—some<span class="ws58e">thing like the following listing<span class="ls6c ws7df">. This version is<span class="_ _0"></span> difficult to</span></span></div><div class="t m0 x44 h15 y41 ff4 fsb fc3 sc0 ls44 wsd1">read, in part because of its physical layout (note the deep nesting) and also because so</div><div class="t m0 x44 h15 y42 ff4 fsb fc3 sc0 ls192 ws7e0">much is happenin<span class="_ _0"></span>g in one glob of code<span class="_ _0"></span>.</div><div class="t m0 x44 h3b y534 ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>__name__<span class="_"> </span>==<span class="_"> </span>&apos;__main__&apos;:</div><div class="t m0 xae h3b y8dc ffd fs18 fc3 sc0 lsb2 ws0">options<span class="_"> </span>=<span class="_"> </span>[...]</div><div class="t m0 xae h3b y670 ffd fs18 fc3 sc0 lsb2 ws0">while<span class="_"> </span>True:</div><div class="t m0 x97 h3b y671 ffd fs18 fc3 sc0 lsb2 ws0">for<span class="_"> </span>option<span class="_"> </span>in<span class="_"> </span>options:</div><div class="t m0 xc3 h3b y536 ffd fs18 fc3 sc0 lsb2 ws0">print(option)</div><div class="t m0 x97 h3b y538 ffd fs18 fc3 sc0 lsb2 ws0">choice<span class="_"> </span>=<span class="_"> </span>input(&apos;Choose<span class="_"> </span>an<span class="_"> </span>option:<span class="_"> </span>&apos;)</div><div class="t m0 x97 h3b y539 ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>choice<span class="_"> </span>==<span class="_"> </span>&apos;A&apos;:</div><div class="t m0 xc3 h3b y53a ffd fs18 fc3 sc0 lsb2 ws0">...</div><div class="t m0 xc3 h3b y53b ffd fs18 fc3 sc0 lsb2 ws0">sqlite3.connect(...).execute(...)</div><div class="t m0 x97 h3b y673 ffd fs18 fc3 sc0 lsb2 ws0">elif<span class="_"> </span>choice<span class="_"> </span>==<span class="_"> </span>&apos;D&apos;:</div><div class="t m0 xc3 h3b y674 ffd fs18 fc3 sc0 lsb2 ws0">...</div><div class="t m0 xc3 h3b y53d ffd fs18 fc1 sc0 lsb2 ws0">sqlite3.connect(...).execute(...)</div><div class="t m0 x44 h15 y304 ff4 fsb fc3 sc0 ls21 ws63a">This code would work, but consid<span class="_ _0"></span>er trying <span class="ls2f ws36e">to implement a change that affects how <span class="_ _0"></span>you</span></div><div class="t m0 x44 h15 y305 ff4 fsb fc3 sc0 ls5e ws306">connect to the database, <span class="_ _e"></span>or a change to th<span class="ls1c ws1c4">e underlying database altogether. It would</span></div><div class="t m0 x44 h15 y306 ff4 fsb fc3 sc0 ls71 ws4c2">be a major pain. This code has many interd<span class="ls2f ws15f">ependent pieces all talking to each other,</span></div><div class="t m0 x44 h15 y307 ff4 fsb fc3 sc0 ls2e ws4a3">so adding new behavior would mean figuring<span class="_ _0"></span> out the right place to add another </div><div class="t m5 xda h24 y10d5 ffd fsc fc3 sc0 lsa0 ws0">elif</div><div class="t m0 x88 h15 y10d6 ff4 fsb fc3 sc0 ls6 ws0">,</div><div class="t m0 x44 h15 y10d7 ff4 fsb fc3 sc0 ls34 ws2f4">writing some raw SQL, and so on. Because <span class="ls71">you would incur these costs each time you</span></div><div class="t m0 x44 h15 y10d8 ff4 fsb fc3 sc0 ls2d ws31">wanted to add new behavior, this<span class="ls38 ws26"> system would <span class="ls35 ws24">not scale well.</span></span></div><div class="t m0 x32 h15 y309 ff4 fsb fc3 sc0 ls6f ws7e1"> Imagine the atoms in<span class="_ _e"></span> a solid piece of iron—they’re<span class="_ _e"></span> tightly packed, firmly ho<span class="_ _e"></span>lding</div><div class="t m0 x44 h15 y30a ff4 fsb fc3 sc0 ls30 ws7e2">onto each other. That makes iro<span class="_ _e"></span>n <span class="ff3 ls14a ws0">rigid</span><span class="ls2f ws7e3">, and it resists being <span class="ls129 ws7e4">bent or r<span class="_ _0"></span>eshaped. But</span></span></div><div class="t m0 x44 h15 y30b ff4 fsb fc3 sc0 ls48 ws157">blacksmiths figured out how to<span class="ls38 ws3c6"> overcome this by melting the iron, which loosens up</span></div><div class="t m0 x44 h15 y30c ff4 fsb fc3 sc0 ls38 ws9e">the atoms so they can flow around each othe<span class="_ _e"></span><span class="ls5e ws6cd">r freely. Even as it cools, the iron is <span class="ff3 ls20 ws0">mallea-</span></span></div><div class="t m0 x44 h15 y10d9 ff3 fsb fc3 sc0 ls7d ws0">ble<span class="ff4 ls79 wsf6">, or able to<span class="_ _e"></span> move and flex without breaking.</span></div><div class="t m0 x32 h15 y30e ff4 fsb fc3 sc0 ls77 ws0"> T<span class="_ _0"></span>hi<span class="_ _1d"></span>s i<span class="_ _1d"></span>s w<span class="_ _0"></span>h<span class="_ _0"></span>a<span class="_ _0"></span>t<span class="_ _0"></span> y<span class="_ _0"></span>ou<span class="_ _1d"></span> wa<span class="_ _1d"></span>nt<span class="_ _0"></span> f<span class="_ _0"></span>r<span class="_ _0"></span>o<span class="_ _0"></span>m y<span class="_ _1d"></span>ou<span class="_ _0"></span>r<span class="_ _0"></span> c<span class="_ _0"></span>o<span class="_ _0"></span>d<span class="_ _0"></span>e,<span class="_ _1d"></span> as<span class="_ _1d"></span> sh<span class="_ _0"></span>o<span class="_ _0"></span>w<span class="_ _0"></span>n<span class="_ _0"></span> in<span class="_ _1d"></span> fi<span class="_ _1d"></span>gu<span class="_ _0"></span>r<span class="_ _0"></span>e<span class="_ _0"></span> 7<span class="_ _0"></span>.<span class="_ _0"></span>4.<span class="_ _1d"></span> If<span class="_ _1d"></span> ea<span class="_ _0"></span>c<span class="_ _0"></span>h p<span class="_ _1d"></span>ie<span class="_ _1d"></span>ce<span class="_ _1d"></span> is<span class="_ _0"></span> o<span class="_ _0"></span>n<span class="_ _0"></span>ly</div><div class="t m0 x44 h15 y30f ff4 fsb fc3 sc0 lsc5 ws5f1">loosely coupled<span class="_ _0"></span> to any other piece, thos<span class="_ _0"></span>e pi<span class="ls34 ws13b">eces can move around more freely without</span></div><div class="t m0 x44 h15 y310 ff4 fsb fc3 sc0 ls3a ws61b">breaking something unexpectedly. Letting th<span class="ls30 wsb0">e code get too tightly packed to<span class="_ _e"></span>gether,</span></div><div class="t m0 x44 h15 y311 ff4 fsb fc3 sc0 ls2f ws1c1">and permitting it to rely heavily on the c<span class="_ _0"></span>o<span class="ls2d ws780">de around it, will allow your code to settle</span></div><div class="t m0 x44 h15 y312 ff4 fsb fc3 sc0 ls5e ws14a">into a solid form that’s <span class="_ _e"></span>hard to reshape.</div><div class="t m0 x32 h15 y313 ff4 fsb fc3 sc0 ls104 ws0"> T<span class="_ _0"></span>h<span class="_ _0"></span>e<span class="_ _1d"></span> lo<span class="_ _1d"></span>os<span class="_ _1d"></span>e c<span class="_ _1d"></span>o<span class="_ _0"></span>u<span class="_ _0"></span>p<span class="_ _0"></span>l<span class="_ _0"></span>i<span class="_ _1d"></span>ng<span class="_ _1d"></span> yo<span class="_ _1d"></span>u’<span class="_ _1d"></span>ve<span class="_ _1d"></span> us<span class="_ _1d"></span>e<span class="_ _0"></span>d<span class="_ _0"></span> w<span class="_ _0"></span>r<span class="_ _1d"></span>it<span class="_ _1d"></span>in<span class="_ _1d"></span>g B<span class="_ _1d"></span>a<span class="_ _0"></span>r<span class="_ _0"></span>k<span class="_ _0"></span> m<span class="_ _1d"></span>ea<span class="_ _1d"></span>ns<span class="_ _1d"></span> th<span class="_ _1d"></span>at<span class="_ _1d"></span> ne<span class="_ _1d"></span>w<span class="_ _0"></span> d<span class="_ _0"></span>a<span class="_ _0"></span>t<span class="_ _1d"></span>ab<span class="_ _1d"></span>as<span class="_ _1d"></span>e f<span class="_ _1d"></span>un<span class="_ _1d"></span>c<span class="_ _0"></span>t<span class="_ _0"></span>i<span class="_ _0"></span>o<span class="_ _0"></span>n<span class="_ _1d"></span>al<span class="_ _1d"></span>-</div><div class="t m0 x44 h15 y314 ff4 fsb fc3 sc0 ls48 ws3fe">ity can be added with new me<span class="_ _e"></span>thods on the </div><div class="t m5 x10e h24 y10da ffd fsc fc3 sc0 lsa0 ws0">DatabaseManag<span class="_ _e"></span>er</div><div class="t m0 x123 h15 y10db ff4 fsb fc3 sc0 ls31 ws7e5"> class or with focused</div><div class="t m0 x44 h15 y315 ff4 fsb fc3 sc0 ls31 wse8">changes to an existing (centralized) meth<span class="ls25 ws7e6">od. New business logic can be encapsulated</span></div><div class="t m0 x44 h15 y316 ff4 fsb fc3 sc0 ls73 ws95">in new </div><div class="t m5 x4 h24 y10dc ffd fsc fc3 sc0 lsa0 ws0">Command</div><div class="t m0 x38 h15 y316 ff4 fsb fc3 sc0 ls51 ws1e7"> classes, and adding to the menu is<span class="ls3a ws1c6"> a matter of creating a new option</span></div><div class="t m0 x44 h15 y317 ff4 fsb fc3 sc0 lsf8 ws490">in the </div><div class="t m5 x82 h24 y10dd ffd fsc fc3 sc0 lsa0 ws0">options</div><div class="t m0 x91 h15 y317 ff4 fsb fc3 sc0 ls2e ws624"> dictionary in the bark module and hooking it up to a command. This</div><div class="t m0 x44 h15 y10de ff4 fsb fc3 sc0 ls71 ws241">sounds a bit like the browser plugin systems <span class="_ _e"></span><span class="lsab ws7e7">I describe<span class="_ _0"></span>d earlier. Bark do<span class="_ _0"></span>esn’t expect to</span></div><div class="t m0 x44 h15 y10df ff4 fsb fc3 sc0 ls31 ws238">handle any <span class="ff3 ls50 ws0">specific</span><span class="ls3a wse4"> new features, but they can be added with a known quantity of effort.</span></div><div class="t m0 x37 h20 y561 ffb fs7 fc4 sc0 ls6 ws0">A procedural approach to Bark<span class="_ _bb"></span>Listing<span class="_"> </span>7.3</div><div class="c x3b y10e0 w28 hf0"><div class="t m0 x12e h14 y10e1 ff12 fs7 fcb sc0 ls125 ws0">Deep <span class="ff13 ls6">n</span><span class="ls117">esti<span class="ff13 ls6">n</span><span class="ls19d ws7e8">g is a<span class="_ _e"></span> st</span><span class="ff13 ls6">r<span class="ff12">o</span>n</span><span class="ls102 ws3cd">g hi</span><span class="ff13 ls6">n</span><span class="ls10f ws35d">t that<span class="_ _0"></span> </span></span></div><div class="t m0 x12e h14 y65d ff12 fs7 fcb sc0 ls6 ws0">co<span class="ff13">n</span>ce<span class="ff13 ls103">rn</span><span class="ls10e">s </span><span class="ff13">n</span><span class="ls88 ws2d0">eed fu</span><span class="ff13">r</span><span class="ls12f">the</span><span class="ff13">r</span><span class="ls10a ws339"> sepa</span><span class="ff13">r</span><span class="ls198">atio</span><span class="ff13">n</span>.</div></div><div class="c x46 y10e2 w88 hf1"><div class="t m0 x127 h14 yb4a ff12 fs7 fcb sc0 ls6 ws3a5">if/elif/else a<span class="ff13 ws0">r</span><span class="ls106 ws45d">e difficult to </span><span class="ff13 ws0">r<span class="ff12 ls124">easo</span>n</span><span class="ls181 ws7e9"> about.</span></div></div><div class="c x52 y10e3 w2c h43"><div class="t m0 xc8 h14 y430 ff12 fs7 fcb sc0 ls88 ws2d0">Database behavio<span class="ff13 ls6 ws0">r</span><span class="ls127 ws505"> is <span class="ff13 ls6 ws0">r<span class="ff12 lsff">epetitive </span></span></span></div><div class="t m0 xc8 h14 y431 ff12 fs7 fcb sc0 ls6 ws0">a<span class="ff13">n</span><span class="lsec">d </span><span class="ff13">m</span><span class="lsda ws311">ixed with use</span><span class="ff13">r</span><span class="lsdd"> i</span><span class="ff13">n</span><span class="lsd2">te</span><span class="ff13">r</span><span class="ls172">ac<span class="_ _0"></span>tio<span class="ff13 ls6">n<span class="ff12">.</span></span></span></div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
