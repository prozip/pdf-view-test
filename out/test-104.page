<div id="pf68" class="pf w0 h0" data-page-no="68"><div class="pc pc68 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bgf0.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">80</div><div class="t m0 xbe h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 xa8 h2c y1d0 ffb fs19 fcb sc0 ls185 ws0">HAPTER</div><div class="t m0 x93 h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 5</div><div class="t m0 x5d h2d y80 ffa fs7 fcb sc0 ls6 ws0">Testing your software</div><div class="t m0 x44 h26 y1e4 ffc fs15 fc2 sc0 ls110 ws42b">M<span class="_ _e"></span>an<span class="_ _e"></span>u<span class="_ _e"></span>a<span class="_ _e"></span>l t<span class="_ _e"></span>e<span class="_ _e"></span>s<span class="_ _e"></span>ti<span class="_ _e"></span>n<span class="_ _e"></span>g<span class="_ _8f"></span>5.2.1</div><div class="t m0 x44 h15 y140 ff3 fsb fc3 sc0 ls2d ws4f5">Manual testing<span class="ff4 ls1f wse1"> is the practice of runni<span class="_ _0"></span>ng your appl<span class="ls31 ws1fd">ication, givin<span class="_ _0"></span>g it some inputs, and</span></span></div><div class="t m0 x44 h15 y141 ff4 fsb fc3 sc0 ls2f ws303">checking whether it does what<span class="ls1f ws4ac"> you expect. For example, if<span class="_ _0"></span><span class="ls51 ws37f"> you’re writing a registra-</span></span></div><div class="t m0 x44 h15 y142 ff4 fsb fc3 sc0 ls5e ws14a">tion workflow for a website, you wo<span class="_ _e"></span>uld en<span class="ls31 ws25">ter a username and password and make sure</span></div><div class="t m0 x44 h15 y143 ff4 fsb fc3 sc0 ls3a ws19f">a new user is created. If you have password requirements, you would want to check</div><div class="t m0 x44 h15 y144 ff4 fsb fc3 sc0 ls3b ws578">that using an invalid password does <span class="ff3 ls20 ws0">not</span><span class="ls30 wsf9"> create a new user. Similarly, you’d <span class="_ _e"></span>test for the</span></div><div class="t m0 x44 h15 y145 ff4 fsb fc3 sc0 ls7a ws2c3">case where a user wi<span class="_ _0"></span>th the username yo<span class="_ _0"></span>u choose already ex<span class="_ _0"></span>ists.</div><div class="t m0 x32 h15 y146 ff4 fsb fc3 sc0 ls51 ws229"> Registering on a website is generally a <span class="ls2f ws3b0">small (and one-time) part of the product</span></div><div class="t m0 x44 h15 y24e ff4 fsb fc3 sc0 ls2f ws1f4">experience for most users, but,<span class="ls2d ws1d"> as you can see, you already have to verify several cases.</span></div><div class="t m0 x44 h15 yb6 ff4 fsb fc3 sc0 lsb3 ws0">I<span class="_ _1c"></span>f<span class="_ _25"></span> a<span class="_ _1c"></span>n<span class="_ _1c"></span>y<span class="_ _1c"></span> o<span class="_ _1c"></span>f<span class="_ _1c"></span> t<span class="_ _1c"></span>h<span class="_ _1c"></span>e<span class="_ _1c"></span>s<span class="_ _1c"></span>e<span class="_ _1c"></span> t<span class="_ _1c"></span>h<span class="_ _1c"></span>i<span class="_ _1c"></span>n<span class="_ _1c"></span>g<span class="_ _1c"></span>s<span class="_ _1c"></span> g<span class="_ _1c"></span>o<span class="_ _1c"></span> w<span class="_ _1c"></span>r<span class="_ _1c"></span>o<span class="_ _1c"></span>n<span class="_ _1c"></span>g<span class="_ _1c"></span>,<span class="_ _1c"></span> y<span class="_ _1c"></span>o<span class="_ _1c"></span>u<span class="_ _1c"></span>r<span class="_ _1c"></span> u<span class="_ _1c"></span>s<span class="_ _1c"></span>e<span class="_ _1c"></span>r<span class="_ _1c"></span><span class="ls42 ws38f">s either can’t register or might have their</span></div><div class="t m0 x44 h15 y8b ff4 fsb fc3 sc0 ls42 wsb1">account information overwritten. With this <span class="ls51 ws108">code being so important, relying on man-</span></div><div class="t m0 x44 h15 y26c ff4 fsb fc3 sc0 ls25 ws307">ual testing for too long will even<span class="_ _0"></span>tually ca<span class="ls44 ws3ac">use you to miss something. Manually explor-</span></div><div class="t m0 x44 h15 y26d ff4 fsb fc3 sc0 ls2f ws1ed">ing the application for new bugs or new things <span class="ls2d ws344">to test <span class="_ _0"></span>is still a valuable activity, but it</span></div><div class="t m0 x44 h15 y26e ff4 fsb fc3 sc0 ls31 ws25">should be viewed as a supplement to other types of testing. </div><div class="t m0 x44 h26 yaaa ffc fs15 fc2 sc0 ls110 ws42b">A<span class="_ _e"></span>ut<span class="_ _e"></span>o<span class="_ _e"></span>m<span class="_ _e"></span>at<span class="_ _e"></span>e<span class="_ _e"></span>d<span class="_ _e"></span> te<span class="_ _e"></span>s<span class="_ _e"></span>t<span class="_ _e"></span>in<span class="_ _e"></span>g<span class="_ _90"></span>5.2.2</div><div class="t m0 x44 h15 y417 ff4 fsb fc3 sc0 ls38 ws3c6">In contrast to manual testing, <span class="ff3 ls1e ws11a">automated testing</span><span class="lsc5 ws5ea"> allows you to wr<span class="_ _0"></span>ite a great number of</span></div><div class="t m0 x44 h15 y418 ff4 fsb fc3 sc0 ls20 ws1ca">tests that can then be executed as many ti<span class="ls5f wsd7">mes as you like, withou<span class="_ _0"></span>t the risk that you’l<span class="_ _0"></span>l</span></div><div class="t m0 x44 h15 yc2 ff4 fsb fc3 sc0 ls3a wse4">miss a check when you’re trying to leave the o<span class="ls6c ws5eb">ffice the Friday of a long weekend. If th<span class="_ _0"></span>is</span></div><div class="t m0 x44 h15 y419 ff4 fsb fc3 sc0 ls47 ws298">hypothetical situation <span class="ls34 ws42d">seems overly specific, that’s because it’s not hypothetical. I’ve</span></div><div class="t m0 x44 h15 y41a ff4 fsb fc3 sc0 ls78 ws0">lived it.</div><div class="t m0 x32 h15 yf3 ff4 fsb fc3 sc0 ls34 ws2f4"> Automated testing tightens the feedback loop so that you can see q<span class="_ _e"></span>uickly whether</div><div class="t m0 x44 h15 y34f ff4 fsb fc3 sc0 ls2d ws7c">a change you’ve made has broken an expe<span class="ls2f ws135">cted behavior. The time you’ll save com-</span></div><div class="t m0 x44 h15 y350 ff4 fsb fc3 sc0 ls42 ws27b">pared to manual testing will free you up to do more creat<span class="_ _e"></span>ive exploratory testing of the</div><div class="t m0 x44 h15 y351 ff4 fsb fc3 sc0 ls36 ws20b">application. As you uncover things to fix, <span class="_ _0"></span><span class="ls38 ws1a3">you should incorporate <span class="ls9e ws5ec">them into your auto-</span></span></div><div class="t m0 x44 h15 y4fc ff4 fsb fc3 sc0 ls3d ws377">mated tests. You can think of this as lockin<span class="ls42 ws3af">g in a verification that will make sure the</span></div><div class="t m0 x44 h15 y41e ff4 fsb fc3 sc0 ls7d ws5ed">particular bug does<span class="_ _e"></span>n’t happen again. Most of<span class="ls38 ws424"> the testing you’ll see in the rest of this</span></div><div class="t m0 x44 h15 yaab ff4 fsb fc3 sc0 ls5e ws14a">chapter can be, and o<span class="_ _e"></span>ften is, automated. </div><div class="t m0 x44 h26 yaac ffc fs15 fc2 sc0 ls12f ws223">Acceptance testing<span class="_ _91"></span>5<span class="_ _0"></span>.<span class="_ _1d"></span>2.<span class="_ _0"></span>3</div><div class="t m0 x44 h15 y422 ff4 fsb fc3 sc0 ls3b ws265">Closest in nature to the Add to Cart workflow te<span class="_ _e"></span>st, <span class="ff3 ls38 ws3dd">acceptance testing</span><span class="ls42 ws19d"> verifies the high-</span></div><div class="t m0 x44 h15 y9a5 ff4 fsb fc3 sc0 ls1e ws2a1">level requirements of a system. So<span class="ls71 ws302">ftware that passes these tests is <span class="ff3 ls44 ws0">acceptable</span><span class="ls4e ws5ee"> based on</span></span></div><div class="t m0 x44 h15 y9a7 ff4 fsb fc3 sc0 ls2d ws211">the specified requirements. As shown in<span class="_ _0"></span> figu<span class="ls36 ws25d">re 5.2, acceptance te<span class="ls42 ws1ba">sts answer questions</span></span></div><div class="t m0 x44 h15 y424 ff4 fsb fc3 sc0 ls34 wsbe">like, “Can the user successfully go thro<span class="ls25 ws5ef">ugh the purchase wor<span class="_ _0"></span>kflow and buy the prod-</span></div><div class="t m0 x44 h15 y425 ff4 fsb fc3 sc0 ls30 ws220">uct they want?” These are the mission-cri<span class="ls34 ws58e">tical checks for the b<span class="_ _e"></span>usiness—things that</span></div><div class="t m0 x44 h15 y427 ff4 fsb fc3 sc0 ls3b ws70">keep the lights on.</div><div class="t m0 x32 h15 y428 ff4 fsb fc3 sc0 ls44 ws6e"> Acceptance tests are often carried out manu<span class="_ _0"></span><span class="ls20 ws134">ally by a business stakeholder, b<span class="_ _e"></span>ut they</span></div><div class="t m0 x44 h15 y429 ff4 fsb fc3 sc0 ls20 ws217">can also be automated to a degre<span class="_ _e"></span>e with <span class="ff3 ls1e ws5f0">end-to-end test<span class="_ _0"></span>ing<span class="ff4 ls30 ws49b">. End-to-end testing makes</span></span></div><div class="t m0 x44 h15 y42a ff4 fsb fc3 sc0 lsc5 ws5f1">sure a set of actions can<span class="_ _0"></span> be carried out (fr<span class="_ _0"></span>om one end to the other) wit<span class="_ _0"></span>h the appropri-</div><div class="t m0 x44 h15 yaad ff4 fsb fc3 sc0 ls3a ws296">ate data flowing through where needed. If <span class="ws20a">the workflow is expressed from the view-</span></div><div class="t m0 x44 h15 yaae ff4 fsb fc3 sc0 ls3b ws70">point of the use<span class="_ _e"></span>r, it begins to look almost exactly like the Add <span class="_ _e"></span>to Cart workflow.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
