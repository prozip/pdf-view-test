<div id="pf3e" class="pf w0 h0" data-page-no="3e"><div class="pc pc3e w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg3e.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">38</div><div class="t m0 x3 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 x29 h2c y1d0 ffb fs19 fcb sc0 lsf6 ws0">HAPTER</div><div class="t m0 x47 h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 2</div><div class="t m0 xca h2d y80 ffa fs7 fcb sc0 ls6 ws0">Separation of concerns</div><div class="t m0 x44 h3b y395 ffd fs18 fc3 sc0 ls6 ws0">.</div><div class="t m0 xae h3b y396 ffd fs18 fc3 sc0 lsb2 ws0">query.py</div><div class="t m0 xae h3b y397 ffd fs18 fc1 sc0 lsb2 ws0">record.py</div><div class="t m0 x44 h15 y464 ff4 fsb fc3 sc0 ls1c ws402">Now you need to write a module for creating<span class="ls31 ws403"> search queries. What do you call it?</span></div><div class="t m0 x44 h15 y465 ff4 fsb fc3 sc0 ls71 ws404">search_query.py might be an okay name, <span class="ls2c ws405">but then<span class="_ _0"></span> it would mak<span class="_ _0"></span>e sense to rename</span></div><div class="t m0 x44 h15 y466 ff4 fsb fc3 sc0 ls3a ws1e0">query.py to databas<span class="ls2f ws23">e_query.py for clarity:</span></div><div class="t m0 x44 h3b y467 ffd fs18 fc3 sc0 ls6 ws0">.</div><div class="t m0 xae h3b y468 ffd fs18 fc3 sc0 lsb2 ws0">database_query.py</div><div class="t m0 xae h3b y469 ffd fs18 fc3 sc0 lsb2 ws0">record.py</div><div class="t m0 xae h3b y46a ffd fs18 fc1 sc0 lsb2 ws0">search_query.py</div><div class="t m0 x44 h15 y5ab ff4 fsb fc3 sc0 ls4b ws406">When two mo<span class="_ _e"></span>dules are conflic<span class="_ _e"></span>ting in name or <span class="_ _e"></span>concept like this, you<span class="_ _e"></span>’ve outgrown the</div><div class="t m0 x44 h15 y14b ff4 fsb fc3 sc0 ls42 ws1f7">structure you have in place. <span class="ff3 ws0">Packages</span><span class="ls34 ws3d5"> add further structure by splitting modules up</span></div><div class="t m0 x44 h15 y4d ff4 fsb fc3 sc0 ls3e ws407">into related groups. In Python, a package is<span class="ls2d ws408"> nothing more than a directory that con-</span></div><div class="t m0 x44 h15 y4e ff4 fsb fc3 sc0 ls71 ws160">tains modules (.py files) and a <span class="ls3d ws2c0">special file that <span class="_ _e"></span>tells Python to treat the directory as a</span></div><div class="t m0 x44 h15 y4f ff4 fsb fc3 sc0 ls80 ws409">package (</div><div class="t m5 x90 h24 y433 ffd fsc fc3 sc0 lsa0 ws0">__init__.py</div><div class="t m0 xb9 h15 y4f ff4 fsb fc3 sc0 ls81 ws26f">). This file <span class="_ _e"></span>is often empty, but it can b<span class="_ _e"></span>e used for more comp<span class="_ _e"></span>lex</div><div class="t m0 x44 h15 y2b2 ff4 fsb fc3 sc0 ls38 ws30c">management of imports. Like a sales_tax.py<span class="ls3a ws1cf"> file becomes “the sales_tax module,” an</span></div><div class="t m0 x44 h15 yed ff4 fsb fc3 sc0 ls3a ws28">ecommerce/ directory becomes “the ecommerce package.”</div><div class="t m0 x32 h49 y25b ffb fs17 fc2 sc0 ls108 ws0">WARNING</div><div class="t m0 xc3 h15 y1a5 ff4 fsb fc3 sc0 ls36 wsb2">The term “packages” also refers <span class="_ _0"></span>to third-party Python libraries you</div><div class="t m0 x32 h15 y5b1 ff4 fsb fc3 sc0 ls71 ws15e">can install from the Pyth<span class="_ _e"></span>on Package Index (PyPI). I will do my best to disam-</div><div class="t m0 x32 h15 y154 ff4 fsb fc3 sc0 ls42 wsc4">biguate where needed in th<span class="ls20 ws40a">is book, but be warned th<span class="_ _e"></span><span class="ls31 wse8">at some resources won’t</span></span></div><div class="t m0 x32 h15 y98 ff4 fsb fc3 sc0 ls31 ws25">make the distinction.</div><div class="t m0 x44 h15 y41c ff4 fsb fc3 sc0 ls31 ws185">For the database and search modules, a da<span class="ls2d ws3eb">tabase package and a search package would</span></div><div class="t m0 x44 h15 y158 ff4 fsb fc3 sc0 ls1e ws299">make good sense. Then the </div><div class="t m5 x24 h24 y158 ffd fsc fc3 sc0 lsa0 ws0">database_</div><div class="t m0 x84 h15 y158 ff4 fsb fc3 sc0 ls5f wsd7"> and </div><div class="t m5 x2b h24 y158 ffd fsc fc3 sc0 lsa0 ws0">search_</div><div class="t m0 x14 h15 y158 ff4 fsb fc3 sc0 ls5e ws231"> prefixes for the modules will be</div><div class="t m0 x44 h15 y159 ff4 fsb fc3 sc0 ls1f ws14">redundant and can be removed.</div><div class="t m0 x32 h15 y5b2 ff4 fsb fc3 sc0 ls3e ws40b"> You can expand your code hierarchy into a pack<span class="_ _0"></span>age, which ultimately creates a</div><div class="t m0 x44 h15 ycf ff4 fsb fc3 sc0 ls2e ws40c">nice structure that you can read and navi<span class="ls71 ws40d">gate. Each package addresses a <span class="_ _0"></span>high-level</span></div><div class="t m0 x44 h15 y5b3 ff4 fsb fc3 sc0 ls71 wsa7">area of concern, and each module in a <span class="ls2f ws40e">package manages a smaller concern. Within</span></div><div class="t m0 x44 h15 y5b4 ff4 fsb fc3 sc0 ls2d ws103">each module, classes, method<span class="ls3d ws40f">s, and functions further clarify the different pie<span class="_ _e"></span>ces of</span></div><div class="t m0 x44 h15 yfd ff4 fsb fc3 sc0 ls42 ws26e">the application.</div><div class="t m0 x44 h3b y5b5 ffd fs18 fc3 sc0 ls6 ws0">.</div><div class="t m0 xae h3b y476 ffd fs18 fc3 sc0 lsb2 ws0">database</div><div class="t m0 x97 h3b y477 ffd fs18 fc3 sc0 lsb2 ws0">__init__.py</div><div class="t m0 x97 h3b y478 ffd fs18 fc3 sc0 lsb2 ws0">query.py</div><div class="t m0 x97 h3b y479 ffd fs18 fc3 sc0 lsb2 ws0">record.py</div><div class="t m0 xae h3b y47a ffd fs18 fc3 sc0 lsb2 ws0">search</div><div class="t m0 x97 h3b y47b ffd fs18 fc3 sc0 lsb2 ws0">__init__.py</div><div class="t m0 x97 h3b y47c ffd fs18 fc1 sc0 lsb2 ws0">query.py</div><div class="t m0 x44 h15 y5b6 ff4 fsb fc3 sc0 ls1f ws410">Where you previously would have written </div><div class="t m5 x80 h24 y5b7 ffd fsc fc3 sc0 lsa0 ws188">import query</div><div class="t m0 xe9 h15 y5b6 ff4 fsb fc3 sc0 ls48 ws3fe"> to use the database query</div><div class="t m0 x44 h15 y5b8 ff3 fsb fc3 sc0 ls3e ws0">module<span class="ff4 ls36 ws93">, you’ll now need to import <span class="_ _0"></span>it from the database <span class="ff3 ls34 ws0">package</span><span class="ls3e ws34d"> instead. You can write</span></span></div><div class="t m5 x44 h24 y5b9 ffd fsc fc3 sc0 lsa0 ws411">import databa<span class="_ _e"></span>se.query</div><div class="t m0 xe2 h15 y5ba ff4 fsb fc3 sc0 ls31 ws412">, which will require you to prefix names from the module</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
