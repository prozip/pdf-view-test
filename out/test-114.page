<div id="pf72" class="pf w0 h0" data-page-no="72"><div class="pc pc72 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg72.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">90</div><div class="t m0 xbe h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 xa8 h2c y1d0 ffb fs19 fcb sc0 ls185 ws0">HAPTER</div><div class="t m0 x93 h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 5</div><div class="t m0 x5d h2d y80 ffa fs7 fcb sc0 ls6 ws0">Testing your software</div><div class="t m0 xae h3b y395 ffd fs18 fc3 sc0 lsb2 ws0">self.assertEqual(expected_value,<span class="_"> </span>actual_value)</div><div class="t m0 x44 h3b y396 ffd fs18 fc3 sc0 lsb2 ws0">AssertionError:<span class="_"> </span>&apos;SHOEZ&apos;<span class="_"> </span>!=<span class="_"> </span>&apos;SHOES&apos;</div><div class="t m0 x44 h3b y397 ffd fs18 fc3 sc0 lsb2 ws0">-<span class="_"> </span>SHOEZ</div><div class="t m0 x44 h3b y40d ffd fs18 fc3 sc0 ls196 ws0">?^</div><div class="t m0 x44 h3b y483 ffd fs18 fc3 sc0 lsb2 ws0">+<span class="_"> </span>SHOES</div><div class="t m0 x44 h3b y484 ffd fs18 fc3 sc0 ls196 ws0">?^</div><div class="t m0 x44 h3b yb9f ffd fs18 fc3 sc0 lsb2 ws0">----------------------------------------------------------------------</div><div class="t m0 x44 h3b yba0 ffd fs18 fc3 sc0 lsb2 ws0">Ran<span class="_"> </span>1<span class="_"> </span>test<span class="_"> </span>in<span class="_"> </span>0.001s</div><div class="t m0 x44 h3b yba1 ffd fs18 fc1 sc0 lsb2 ws0">FAILED<span class="_"> </span>(failures=1)</div><div class="t m0 x44 h15 yba2 ff4 fsb fc3 sc0 ls48 ws423">Confident that the test is keeping an eye over<span class="ls42 ws1f2"> your code, you can change it back to the</span></div><div class="t m0 x44 h15 y251 ff4 fsb fc3 sc0 ls34 ws22">appropriate value and move<span class="ls6 ws72"> on to anothe<span class="_ _e"></span>r test. </span></div><div class="t m0 x44 h26 yba3 ffc fs15 fc2 sc0 lsad ws1be">Writing your first integration test with unittest<span class="_ _9b"></span>5<span class="_ _0"></span>.<span class="_ _0"></span>4<span class="_ _0"></span>.<span class="_ _0"></span>4</div><div class="t m0 x44 h15 yba4 ff4 fsb fc3 sc0 ls20 ws57d">Now that you’ve seen what units are and how they can be tested, it’s time to look at</div><div class="t m0 x44 h15 yba5 ff4 fsb fc3 sc0 ls70 ws651">how the in<span class="_ _e"></span>tegration of multipl<span class="_ _e"></span>e units can be<span class="ls51 wsbf"> tested. Unit tests <span class="_ _e"></span>are meant to examine</span></div><div class="t m0 x44 h15 yba6 ff4 fsb fc3 sc0 ls20 wsd8">the behavior of small pieces of software in is<span class="ls5e ws652">olation, so without <span class="_ _e"></span>integration tests it’s dif-</span></div><div class="t m0 x44 h15 yba7 ff4 fsb fc3 sc0 ls7d ws5e8">ficult to say if these small pieces wo<span class="_ _e"></span>rk toge<span class="ls34 ws9d">ther to produce something useful as a whole</span></div><div class="t m0 x44 h15 yba8 ff4 fsb fc3 sc0 ls25 ws1a">(see figure 5.5).</div><div class="t m0 x44 h15 yba9 ff4 fsb fc3 sc0 ls44 ws8e">Now that you can manage products in yo<span class="ls38 ws653">ur inventory with a SKU system, people</span></div><div class="t m0 x44 h15 ybaa ff4 fsb fc3 sc0 ls20 wsc7">should be able to start buying them. A new </div><div class="t m5 x7b h24 ybab ffd fsc fc3 sc0 lsa0 ws0">ShoppingCart</div><div class="t m0 xe9 h15 ybac ff4 fsb fc3 sc0 ls38 wsc9"> class with the ability to add</div><div class="t m0 x44 h15 ybad ff4 fsb fc3 sc0 ls7d ws654">and remove products woul<span class="_ _e"></span>d be a good first st<span class="ls1c ws94">ep. The cart stores products as a dictio-</span></div><div class="t m0 x44 h15 ybae ff4 fsb fc3 sc0 ls5e ws57">nary that looks like this:</div><div class="t m0 x44 h3b ybaf ffd fs18 fc3 sc0 ls6 ws0">{</div><div class="t m0 xae h3b ybb0 ffd fs18 fc3 sc0 lsb2 ws0">&apos;SHOES-S-BLACK&apos;:<span class="_"> </span>{</div><div class="t m0 x97 h3b ybb1 ffd fs18 fc3 sc0 lsb2 ws0">&apos;quantity&apos;:<span class="_"> </span>2,</div><div class="t m0 x97 h3b ybb2 ffd fs18 fc3 sc0 lsb2 ws0">...</div><div class="c x44 ybb3 w4a hb1"><div class="t m0 xef h36 ybb4 ff11 fs1c fc12 sc0 ls6 ws0">Create record</div><div class="t m0 x20 h36 ybb5 ff11 fs1c fc12 sc0 ls6 ws0">Database client</div><div class="t m0 xd8 h36 ybb6 ff11 fs1c fc12 sc0 ls6 ws0">Read record</div><div class="t m0 x0 h37 ybb7 ff12 fs1d fc12 sc0 ls6 ws0">Unit tests are the </div><div class="t m0 x0 h37 ybb8 ff12 fs1d fc12 sc0 ls6 ws0">detail-oriented checks.</div><div class="t m0 x4b h37 ybb9 ff12 fs1d fc12 sc0 ls6 ws0">Integration tests are </div><div class="t m0 x4b h37 ybba ff12 fs1d fc12 sc0 ls6 ws0">the big picture checks. </div><div class="t m0 xef h36 ybbb ff11 fs1c fc12 sc0 ls6 ws0">Update record</div><div class="t m0 x90 h36 ybbc ff11 fs1c fc12 sc0 ls6 ws0">Delete record</div></div><div class="c x44 ybbd w2 hb2"><div class="t m0 x2 h2b ybbe ffb fs18 fcb sc0 ls6a ws655">Unit tests and integration tes<span class="_ _0"></span>ts<span class="_ _9c"></span>Figure 5.5</div></div><div class="c xb1 y20d w9 h79"><div class="t m0 x43 h14 ybbf ff12 fs7 fcb sc0 ls197 ws656">The keys a<span class="_ _0"></span><span class="ff13 ls6 ws0">r<span class="ff12 lsd2 ws35c">e the p</span>r<span class="ff12 lsff ws38b">oduct SKUs.</span></span></div></div><div class="c x114 y3f w4b hb3"><div class="t m0 x119 h14 ybc0 ff12 fs7 fcb sc0 lsd2 ws0">A <span class="ff13 ls6">n</span><span class="lsd6 ws2a7">ested dictio</span><span class="ff13 ls6">n<span class="ff12">a</span>r</span><span class="ls10c ws3d9">y of </span><span class="ff13 ls6">m</span><span class="ls181">etadata </span></div><div class="t m0 x119 h14 ybc1 ff12 fs7 fcb sc0 ls105 ws327">about the ca<span class="ff13 ls6 ws0">r</span><span class="ls88 ws2d0">t ite<span class="ff13 ls6 ws0">m</span><span class="ls13c ws46f">, like qua<span class="ff13 ls6 ws0">n</span></span><span class="ws0">tity</span></span></div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
