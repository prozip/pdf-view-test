<div id="pf73" class="pf w0 h0" data-page-no="73"><div class="pc pc73 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg73.png"/><div class="t m0 xbf h14 y80 ff7 fs7 fcb sc0 ls6 ws0">91<span class="_ _99"></span><span class="ffa">Unit testing with unittest</span></div><div class="t m0 x87 h3b y395 ffd fs18 fc3 sc0 lsb2 ws0">},</div><div class="t m0 x87 h3b y396 ffd fs18 fc3 sc0 lsb2 ws0">&apos;SHOES-M-BLUE&apos;:<span class="_"> </span>{</div><div class="t m0 x36 h3b y397 ffd fs18 fc3 sc0 lsb2 ws0">&apos;quantity&apos;:<span class="_"> </span>1,</div><div class="t m0 x36 h3b y40d ffd fs18 fc3 sc0 lsb2 ws0">...</div><div class="t m0 x87 h3b y483 ffd fs18 fc3 sc0 lsb2 ws0">},</div><div class="t m0 x35 h3b y484 ffd fs18 fc1 sc0 ls6 ws0">}</div><div class="t m0 x35 h15 y340 ff4 fsb fc3 sc0 ls3a ws0">The </div><div class="t m5 x82 h24 ybc2 ffd fsc fc3 sc0 lsa0 ws0">ShoppingCart</div><div class="t m0 x8e h15 y340 ff4 fsb fc3 sc0 ls31 ws21c"> class contains methods to add <span class="ls25 ws657">and remove a product by managing</span></div><div class="t m0 x35 h15 ya3b ff4 fsb fc3 sc0 ls20 ws17">the data in this dictionary.</div><div class="t m0 x35 h3b ybc3 ffd fs18 fc3 sc0 lsb2 ws0">from<span class="_"> </span>collections<span class="_"> </span>import<span class="_"> </span>defaultdict</div><div class="t m0 x35 h3b ybc4 ffd fs18 fc3 sc0 lsb2 ws0">class<span class="_"> </span>ShoppingCart:</div><div class="t m0 x87 h3b y7ba ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>__init__(self):</div><div class="t m0 x36 h3b y7bb ffd fs18 fc3 sc0 lsb2 ws0">self.products<span class="_"> </span>=<span class="_"> </span>defaultdict(lambda:<span class="_"> </span>defaultdict(int))</div><div class="t m0 x87 h3b y3f9 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>add_product(self,<span class="_"> </span>product,<span class="_"> </span>quantity=1):</div><div class="t m0 x36 h3b ybc5 ffd fs18 fc3 sc0 lsb2 ws0">self.products[product.generate_sku()][&apos;quantity&apos;]<span class="_"> </span>+=<span class="_"> </span>quantity</div><div class="t m0 x87 h3b ybc6 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>remove_product(self,<span class="_"> </span>product,<span class="_"> </span>quantity=1):</div><div class="t m0 x36 h3b ybc7 ffd fs18 fc3 sc0 lsb2 ws0">sku<span class="_"> </span>=<span class="_"> </span>product.generate_sku()</div><div class="t m0 x36 h3b ybc8 ffd fs18 fc3 sc0 lsb2 ws0">self.products[sku][&apos;quantity&apos;]<span class="_"> </span>-=<span class="_"> </span>quantity</div><div class="t m0 x36 h3b ybc9 ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>self.products[sku][&apos;quantity&apos;]<span class="_"> </span>==<span class="_"> </span>0:</div><div class="t m0 xe6 h3b ybca ffd fs18 fc1 sc0 lsb2 ws0">del<span class="_"> </span>self.products[sku]</div><div class="t m0 x35 h15 ybcb ff4 fsb fc3 sc0 ls3a ws0">The </div><div class="t m5 x82 h24 ybcc ffd fsc fc3 sc0 lsa0 ws0">ShoppingCart</div><div class="t m0 x8e h15 ybcb ff4 fsb fc3 sc0 ls71 ws46b"> behavior now presents a couple <span class="ls5e ws4bb">of integration points that should</span></div><div class="t m0 x35 h15 y25e ff4 fsb fc3 sc0 ls80 ws409">be tested:</div><div class="t m0 x8b h29 ybcd ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x48 h15 ybce ff4 fsb fc3 sc0 ls36 ws102">The cart relies on (<span class="ff3 ls25 ws100">integrates with</span><span class="ls159 ws658">) the </span></div><div class="t m5 x89 h24 ybcf ffd fsc fc3 sc0 lsa0 ws0">Product</div><div class="t m0 xf8 h15 ybce ff4 fsb fc3 sc0 ls70 ws659"> instance’s </div><div class="t m5 x2f h24 ybcf ffd fsc fc3 sc0 lsa0 ws0">generate_sku</div><div class="t m0 xfc h15 ybce ff4 fsb fc3 sc0 ls44 ws65a"> method.</div><div class="t m0 x8b h29 ybd0 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x48 h15 y260 ff4 fsb fc3 sc0 ls3e ws49c">Adding and removing products must work in tandem; a produ<span class="_ _0"></span>ct that’s been</div><div class="t m0 x48 h15 y261 ff4 fsb fc3 sc0 ls34 ws22">added must also be able to be removed.</div><div class="t m0 x35 h15 ybd1 ff4 fsb fc3 sc0 ls81 ws65b">Testing these inte<span class="_ _e"></span>grations will look a lot lik<span class="_ _e"></span>e<span class="ls44 ws65a"> unit testing; the differ<span class="_ _0"></span>ence is in how much</span></div><div class="t m0 x35 h15 y292 ff4 fsb fc3 sc0 ls48 ws432">of your software is executed during the te<span class="ls20 ws251">st. Where a unit te<span class="_ _e"></span>st generally only executes</span></div><div class="t m0 x35 h15 y988 ff4 fsb fc3 sc0 ls7d ws1b2">the code in one method and asserts that the <span class="ls5e ws32a">output is as expected,<span class="_ _e"></span> an <span class="_ _0"></span>integration test</span></div><div class="t m0 x35 h15 y294 ff4 fsb fc3 sc0 ls2d ws31">may run many methods and make assertio<span class="ls1c ws10">ns about a few th<span class="_ _e"></span>ings along the way.</span></div><div class="t m0 x83 h15 y989 ff4 fsb fc3 sc0 ls34 ws215"> In the case of </div><div class="t m5 x8e h24 ybd2 ffd fsc fc3 sc0 lsa0 ws0">ShoppingCar<span class="_ _e"></span>t</div><div class="t m0 x12d h15 ybd3 ff4 fsb fc3 sc0 ls25 ws5c1">, a useful test would be to initialize the cart, add a</div><div class="t m0 x35 h15 y98b ff4 fsb fc3 sc0 ls47 ws54">product, remove it, and <span class="_ _e"></span>make <span class="ls36 ws6a">sure the cart is empty, a<span class="_ _0"></span>s shown in the following li<span class="_ _0"></span>sting.</span></div><div class="t m0 x35 h3b ybd4 ffd fs18 fc3 sc0 lsb2 ws0">import<span class="_"> </span>unittest</div><div class="t m0 x35 h3b ybd5 ffd fs18 fc3 sc0 lsb2 ws0">from<span class="_"> </span>cart<span class="_"> </span>import<span class="_"> </span>ShoppingCart</div><div class="t m0 x35 h3b ybd6 ffd fs18 fc3 sc0 lsb2 ws0">from<span class="_"> </span>product<span class="_"> </span>import<span class="_"> </span>Product</div><div class="t m0 x35 h3b ybd7 ffd fs18 fc3 sc0 lsb2 ws0">class<span class="_"> </span>ShoppingCartTestCase(unittest.TestCase):</div><div class="t m0 x87 h3b ybd8 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>test_add_and_remove_product(self):</div><div class="t m0 x36 h3b ybd9 ffd fs18 fc3 sc0 lsb2 ws0">cart<span class="_"> </span>=<span class="_"> </span>ShoppingCart()</div><div class="t m0 x17 h20 ybda ffb fs7 fc4 sc0 ls6 ws0">An integration test for a<span class="_ _52"></span>Listing<span class="_"> </span>5.2</div><div class="t m0 x6b h62 ybdb ff16 fs21 fc4 sc0 ls128 ws0">ShoppingCart</div><div class="t m0 xee h20 ybda ffb fs7 fc4 sc0 ls6 ws0"> class</div><div class="c x5e ybdc w49 hb4"><div class="t m0 x12b h14 ybdd ff12 fs7 fcb sc0 ls170 ws0">Usi<span class="ff13 ls6">n</span><span class="ls198 ws65c">g defaultdict si</span><span class="ff13 ls6">m</span><span class="lsd6 ws3da">plifies the logic</span></div><div class="t m0 xf4 h14 ybde ff12 fs7 fcb sc0 ls103 ws0">fo<span class="ff13 ls6">r</span><span class="lsd2 ws35c"> checki</span><span class="ff13 ls6">n</span><span class="ls199 ws65d">g if a p</span><span class="ff13 ls6">r</span><span class="lsf2 ws65e">oduct is al</span><span class="ff13 ls6">r</span><span class="ls117">eady</span></div><div class="t m0 x12e h14 ybdf ff12 fs7 fcb sc0 ls6 ws0">i<span class="ff13">n</span><span class="lsda ws2aa"> the ca</span><span class="ff13">r</span><span class="ls146 ws4b3">t dict<span class="_ _e"></span>io</span><span class="ff13">n</span>a<span class="ff13">r</span><span class="lsd3">y.</span></div></div><div class="c x12f ybe0 w4c h79"><div class="t m0 x130 h14 ybe1 ff12 fs7 fcb sc0 lsd6 ws3da">Adds qua<span class="ff13 ls6 ws0">n<span class="ff12 lsd3">tity</span></span></div><div class="t m0 x12b h14 ybe2 ff12 fs7 fcb sc0 ls115 ws65f">of a p<span class="ff13 ls6 ws0">r<span class="ff12 lsde">oduct</span></span></div><div class="t m0 xf4 h14 ybe3 ff12 fs7 fcb sc0 ls13c ws46f">to the ca<span class="ff13 ls6 ws0">r<span class="ff12">t</span></span></div></div><div class="c xee ybe4 w4d h46"><div class="t m0 x119 h14 y2ed ff12 fs7 fcb sc0 ls100 ws0">Re<span class="ff13 ls6">m</span><span class="ls10a ws339">oves qua</span><span class="ff13 ls6">n</span><span class="lsee ws30e">tity of a </span></div><div class="t m0 x119 h14 y2ee ff12 fs7 fcb sc0 ls6 ws0">p<span class="ff13">r</span><span class="lsfc ws5a7">oduct f</span><span class="ff13">r</span>o<span class="ff13">m</span><span class="lsed ws4ed"> the ca</span><span class="ff13">r</span>t</div></div><div class="c x2e ybe5 w9 h56"><div class="t m0 x12e h14 y65c ff12 fs7 fcb sc0 lsef ws4fa">The test setup is co<span class="_ _e"></span><span class="ff13 ls6 ws0">m<span class="ff12 lsec">pa</span>r<span class="ff12 ls102">able </span></span></div><div class="t m0 x12e h14 y65d ff12 fs7 fcb sc0 lsd2 ws35c">to the ea<span class="ff13 ls6 ws0">r<span class="ff12 ls140">lie</span>r<span class="ff12 lse1"> u</span>n</span><span class="ls197 ws656">it test.</span></div></div><div class="c x2e y211 w4e hb5"><div class="t m0 x128 h14 ybe6 ff12 fs7 fcb sc0 ls6 ws0">C<span class="ff13">r</span><span class="lse4 ws45a">eates a ca</span><span class="ff13">r</span><span class="lsda ws2aa">t to add p</span><span class="ff13">r</span><span class="lsd2 ws35c">oducts to</span></div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
