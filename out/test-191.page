<div id="pfbf" class="pf w0 h0" data-page-no="bf"><div class="pc pcbf w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bgbf.png"/><div class="t m0 xa0 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">167<span class="_ _f1"></span><span class="ffa">Breaking down complexity</span></div><div class="t m0 x35 h3b y396 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>random_food(request):</div><div class="t m0 x87 h3b y397 ffd fs18 fc3 sc0 lsb2 ws0">food<span class="_"> </span>=<span class="_"> </span>random.choice(FOODS)</div><div class="t m0 x87 h3b y483 ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>request.headers.get(&apos;Accept&apos;)<span class="_"> </span>==<span class="_"> </span>&apos;application/json&apos;:</div><div class="t m0 x36 h3b y484 ffd fs18 fc3 sc0 lsb2 ws0">return<span class="_"> </span>json.dumps({&apos;food&apos;:<span class="_"> </span>food})</div><div class="t m0 x87 h3b y569 ffd fs18 fc3 sc0 lsb2 ws0">else:</div><div class="t m0 x36 h3b y56a ffd fs18 fc3 sc0 lsb2 ws0">return<span class="_"> </span>food</div><div class="t m0 x35 h15 y6ce ff4 fsb fc3 sc0 ls21 ws8cd">Think about this change<span class="_ _0"></span> in terms of cycl<span class="ls4e ws452">omatic complexity; what is the complexity</span></div><div class="t m0 x35 h15 y6cf ff4 fsb fc3 sc0 ls38 ws26">before and after the change?</div><div class="t m0 x8a h3d y14d1 ffb fs1e fca sc0 ls6 ws0">1</div><div class="t m0 x48 h15 y9e7 ff4 fsb fc3 sc0 lsbc ws1ff">1 before, 2 af<span class="_ _e"></span>ter</div><div class="t m0 x8a h3d y14d2 ffb fs1e fca sc0 ls6 ws0">2</div><div class="t m0 x48 h15 y26d ff4 fsb fc3 sc0 lsbc ws1ff">2 before, 2 af<span class="_ _e"></span>ter</div><div class="t m0 x8a h3d y14d3 ffb fs1e fca sc0 ls6 ws0">3</div><div class="t m0 x48 h15 yeb9 ff4 fsb fc3 sc0 lsbc ws1ff">1 before, 3 af<span class="_ _e"></span>ter</div><div class="t m0 x8a h3d y14d4 ffb fs1e fca sc0 ls6 ws0">4</div><div class="t m0 x48 h15 y5c2 ff4 fsb fc3 sc0 lsbc ws1ff">2 before, 1 af<span class="_ _e"></span>ter</div><div class="t m0 x35 h15 y34a ff4 fsb fc3 sc0 ls1e ws236">Your initial function had no conditionals or<span class="ls38 ws30c"> loops, so the complexity was 1. Because</span></div><div class="t m0 x35 h15 y34b ff4 fsb fc3 sc0 ls36 ws87">you’ve added only one new condition (the <span class="ls3d ws73e">case when the user requests JSON), the</span></div><div class="t m0 x35 h15 y276 ff4 fsb fc3 sc0 ls6 ws788">complexity has gone from 1 to 2 (option 1).</div><div class="t m0 x83 h15 y3fd ff4 fsb fc3 sc0 ls89 ws0"> A<span class="_ _1d"></span>n i<span class="_ _1d"></span>n<span class="_ _0"></span>c<span class="_ _1d"></span>re<span class="_ _1d"></span>a<span class="_ _0"></span>s<span class="_ _1d"></span>e o<span class="_ _1d"></span>f<span class="_ _0"></span> c<span class="_ _1d"></span>om<span class="_ _1d"></span>p<span class="_ _0"></span>l<span class="_ _1d"></span>ex<span class="_ _1d"></span>i<span class="_ _1d"></span>ty<span class="_ _1d"></span> b<span class="_ _0"></span>y<span class="_ _1d"></span> 1 t<span class="_ _1d"></span>o<span class="_ _0"></span> h<span class="_ _0"></span>a<span class="_ _1d"></span>nd<span class="_ _1d"></span>l<span class="_ _1d"></span>e<span class="ls48 ws4a5"> a new requirement isn’t terrible to start</span></div><div class="t m0 x35 h15 y3ff ff4 fsb fc3 sc0 ls7d ws8ce">with. But if yo<span class="_ _e"></span>u continue on that trajecto<span class="ls3e ws8cf">ry <span class="_ _e"></span>for long, increasing complexity linearly</span></div><div class="t m0 x35 h15 y699 ff4 fsb fc3 sc0 ls2d ws1d">with each requirement, you’ll soon be deal<span class="_ _0"></span>ing with hairy code:</div><div class="t m0 x35 h3b y14d5 ffd fs18 fc3 sc0 lsb2 ws0">...</div><div class="t m0 x35 h3b y374 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>random_food(request):</div><div class="t m0 x87 h3b y495 ffd fs18 fc3 sc0 lsb2 ws0">food<span class="_"> </span>=<span class="_"> </span>random.choice(FOODS)</div><div class="t m0 x87 h3b y376 ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>request.headers.get(&apos;Accept&apos;)<span class="_"> </span>==<span class="_"> </span>&apos;application/json&apos;:</div><div class="t m0 x36 h3b y377 ffd fs18 fc3 sc0 lsb2 ws0">return<span class="_"> </span>json.dumps({&apos;food&apos;:<span class="_"> </span>food})</div><div class="t m0 x87 h3b y378 ffd fs18 fc3 sc0 lsb2 ws0">elif<span class="_"> </span>request.headers.get(&apos;Accept&apos;)<span class="_"> </span>==<span class="_"> </span>&apos;application/xml&apos;:</div><div class="t m0 x36 h3b y496 ffd fs18 fc3 sc0 lsb2 ws0">return<span class="_"> </span>f&apos;&lt;response&gt;&lt;food&gt;{food}&lt;/food&gt;&lt;/response&gt;&apos;</div><div class="t m0 x87 h3b y379 ffd fs18 fc3 sc0 lsb2 ws0">else:</div><div class="t m0 x36 h3b y497 ffd fs18 fc1 sc0 lsb2 ws0">return<span class="_"> </span>food</div><div class="t m0 x35 h15 y60 ff4 fsb fc3 sc0 ls34 wse8">Do you remember how to<span class="ls3b ws240"> solve this? <span class="_ _e"></span>As a hint, observe <span class="ls51 wsd2">that the conditionals are map-</span></span></div><div class="t m0 x35 h15 y61 ff4 fsb fc3 sc0 ls2f ws63b">ping a value (the value of the </div><div class="t m5 x5d h24 y739 ffd fsc fc3 sc0 lsa0 ws0">Accept</div><div class="t m0 x27 h15 y61 ff4 fsb fc3 sc0 ls31 ws20f"> header) to another value (the response to</div><div class="t m0 x35 h15 y2ad ff4 fsb fc3 sc0 ls38 ws26">return). What data structure makes sense?</div><div class="t m0 x8a h3d y9ab ffb fs1e fca sc0 ls6 ws0">1</div><div class="t m5 x48 h24 y9ab ffd fsc fc3 sc0 lsa0 ws0">list</div><div class="t m0 x8a h3d y14d6 ffb fs1e fca sc0 ls6 ws0">2</div><div class="t m5 x48 h24 y14d7 ffd fsc fc3 sc0 lsa0 ws0">tuple</div><div class="t m0 x8a h3d y14d8 ffb fs1e fca sc0 ls6 ws0">3</div><div class="t m5 x48 h24 y14d9 ffd fsc fc3 sc0 lsa0 ws0">dict</div><div class="t m0 x8a h3d y14da ffb fs1e fca sc0 ls6 ws0">4</div><div class="t m5 x48 h24 y10fc ffd fsc fc3 sc0 lsa0 ws0">set</div><div class="t m0 x35 h15 y14db ff4 fsb fc3 sc0 ls42 ws26e">A Python dictionary (option 3) <span class="_ _e"></span>maps values to other values, so it’s a good fit f<span class="_ _e"></span>or refac-</div><div class="t m0 x35 h15 y14dc ff4 fsb fc3 sc0 ls1c ws151">toring this code. Remodeling the execution <span class="_ _e"></span><span class="ls34 ws2f2">flow as a configuration of header values</span></div><div class="c xe4 y42c w28 h56"><div class="t m0 x12e h14 y68d ff12 fs7 fcb sc0 ls10d ws8d0">Chooses the food at <span class="_ _e"></span><span class="ff13 ls6 ws0">r<span class="ff12">a</span>n<span class="ff12 lsec">do</span>m<span class="ff12 lse1"> a</span>n<span class="ff12 lsec">d </span></span></div><div class="t m0 x12e h14 y68e ff12 fs7 fcb sc0 ls18d ws0">sto<span class="ff13 ls6">r</span><span class="ls140 ws5ad">es it fo</span><span class="ff13 ls6">r</span><span class="lsdc ws2ac"> use </span><span class="ff13 ls6">m<span class="ff12">o</span>m<span class="ff12">e</span>n</span><span class="lsd2">ta<span class="ff13 ls6">r</span><span class="lsf2">ily</span></span></div></div><div class="c x98 y1335 w6e h12e"><div class="t m0 xea h14 y4a7 ff12 fs7 fcb sc0 lsd3 ws0">Retu<span class="ff13 ls123">rn</span><span class="lsfc ws5a7">s {&quot;food&quot;: &quot;pizza&quot;}, fo</span><span class="ff13 ls6">r</span></div><div class="t m0 x2 h14 y14dd ff12 fs7 fcb sc0 lsf2 ws0">exa<span class="ff13 ls6">m</span><span class="lsff ws38b">ple, if the </span><span class="ff13 ls6">r</span><span class="lsfe ws313">equest has the</span></div><div class="t m0 xbd h14 y14de ff12 fs7 fcb sc0 lsff ws38b">Accept: applicatio<span class="ff13 ls6 ws0">n<span class="ff12 ls214">/jso</span>n</span><span class="lsd9 ws2ce"> heade<span class="ff13 ls6 ws0">r</span></span></div></div><div class="c x21 yf2b wb1 h12f"><div class="t m0 xc7 h14 y14df ff12 fs7 fcb sc0 lsd2 ws0">Co<span class="ff13 ls6">n</span>ti<span class="ff13 ls6">n</span><span class="ls88">ues <span class="ff13 ls6">r</span><span class="ls105">etu<span class="ff13 ls103">rn</span><span class="ls6">i<span class="ff13">n</span><span class="lse1">g “pizza”,</span></span></span></span></div><div class="t m0 xfd h14 y14e0 ff12 fs7 fcb sc0 ls123 ws0">fo<span class="ff13 ls6">r</span><span class="lsfd ws310"> exa</span><span class="ff13 ls6">m</span><span class="lsee ws2cf">ple, by default</span></div></div><div class="c x54 y14e1 wb2 h130"><div class="t m0 xc7 h14 y14e2 ff12 fs7 fcb sc0 ls105 ws327">Each additio<span class="ff13 ls6 ws0">n<span class="ff12 ls170">al </span>r<span class="ff12 ls125">equi</span>r<span class="ff12">e</span>m<span class="ff12">e</span>n</span><span class="ls10a ws339">t is a <span class="ff13 ls6 ws0">n<span class="_ _0"></span><span class="ff12">ew</span></span></span></div><div class="t m0 x14b h14 y14e3 ff12 fs7 fcb sc0 ls6 ws0">co<span class="ff13">n</span><span class="lsd5">ditio</span><span class="ff13">n</span><span class="ls127 ws505">, i</span><span class="ff13">n</span>c<span class="ff13">r</span><span class="lsda">easi</span><span class="ff13">n</span><span class="lsef ws3a0">g co</span><span class="ff13">m</span><span class="lsfd">plexity.</span></div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
