<div id="pfb2" class="pf w0 h0" data-page-no="b2"><div class="pc pcb2 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bgb2.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">154</div><div class="t m0 x17 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 xa7 h2c y1d0 ffb fs19 fcb sc0 lsf6 ws0">HAPTER</div><div class="t m0 xba h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 8</div><div class="t m0 xe7 h2d y80 ffa fs7 fcb sc0 ls6 ws0">The rules (and exceptions) of inheritance</div><div class="t m0 x44 h15 ybe ff4 fsb fc3 sc0 ls5e ws14a">How does this look for </div><div class="t m5 x92 h24 y1314 ffd fsc fc3 sc0 lsa0 ws0">Liger</div><div class="t m0 x68 h15 ybe ff4 fsb fc3 sc0 ls2e ws4d">? The full process is shown in figure 8.7.</div><div class="t m0 x32 h15 ybec ff4 fsb fc3 sc0 ls138 ws879"> When you ask for </div><div class="t m5 x8e h24 y12cc ffd fsc fc3 sc0 ls1f8 ws0">super().eats()</div><div class="t m0 x94 h15 ybec ff4 fsb fc3 sc0 ls131 ws5b5">, Python will work its way through the method res-</div><div class="t m0 x44 h15 y259 ff4 fsb fc3 sc0 ls1f9 ws87a">olution order until it finds an </div><div class="t m5 xc9 h24 ya13 ffd fsc fc3 sc0 ls1f8 ws0">eats()</div><div class="t m0 x5d h15 y259 ff4 fsb fc3 sc0 ls1fa ws87b"> method on one of the classes (other than the o<span class="_ _0"></span>ne you</div><div class="t m0 x44 h15 y25a ff4 fsb fc3 sc0 lsa6 ws0">called </div><div class="t m5 x87 h24 ya14 ffd fsc fc3 sc0 ls1f8 ws0">super()</div><div class="t m0 x37 h15 y25a ff4 fsb fc3 sc0 lsbf ws0"> f<span class="_ _0"></span>r<span class="_ _1d"></span>om<span class="_ _1d"></span>).<span class="_ _1d"></span> A<span class="_ _0"></span>s<span class="_ _0"></span> y<span class="_ _1d"></span>ou<span class="_ _1d"></span> ca<span class="_ _1d"></span>n<span class="_ _0"></span> s<span class="_ _1d"></span>ee<span class="_ _1d"></span>, i<span class="_ _1d"></span>t<span class="_ _0"></span> f<span class="_ _1d"></span>in<span class="_ _1d"></span>ds<span class="_ _1d"></span> </div><div class="t m5 x40 h24 ya14 ffd fsc fc3 sc0 ls1f8 ws0">Lion</div><div class="t m0 x51 h15 y25a ff4 fsb fc3 sc0 ls131 ws490"> first, which returns </div><div class="t m5 xb2 h24 ya14 ffd fsc fc3 sc0 ls1f8 ws0">[&apos;wildebeest&apos;]</div><div class="t m0 x88 h15 y25a ff4 fsb fc3 sc0 ls6 ws0">.</div><div class="t m5 x44 h24 yfaf ffd fsc fc3 sc0 ls1f8 ws0">Liger</div><div class="t m0 x8b h15 yfae ff4 fsb fc3 sc0 ls1fb ws44c"> then adds its own list of prey animals, <span class="ws361">resulting in the list you<span class="_ _e"></span> saw in the output.</span></div><div class="c x44 y1315 wa2 h114"><div class="t m0 x76 h5f y1316 ff15 fs1c fc12 sc0 ls6 ws0">object</div><div class="t m0 x76 h5f y1317 ff15 fs1c fc12 sc0 ls6 ws0">BigCat</div><div class="t m0 x0 h37 y1318 ff12 fs1d fc12 sc0 ls6 ws0">A depth-first ordering explores</div><div class="t m0 x0 h37 y1319 ff12 fs1d fc12 sc0 ls6 ws0">the full ancestry of the lef<span class="_ _e"></span>tmost</div><div class="t m0 x0 h37 y131a ff12 fs1d fc12 sc0 ls6 ws0">superclass of </div><div class="t m0 xc1 h115 y131b ff1e fs2c fc12 sc0 ls6 ws0">Liger</div><div class="t m0 xc0 h37 y131a ff12 fs1d fc12 sc0 ls6 ws0"> (</div><div class="t m0 xb h115 y131b ff1e fs2c fc12 sc0 ls6 ws0">Lion</div><div class="t m0 x1a h37 y131a ff12 fs1d fc12 sc0 ls6 ws0">) first.</div><div class="t m0 xac h37 y1318 ff12 fs1d fc12 sc0 ls6 ws0">After finishing with the lef<span class="_ _e"></span>tmost</div><div class="t m0 xac h37 y1319 ff12 fs1d fc12 sc0 ls6 ws0">superclass, the next superclass</div><div class="t m0 xac h37 y131a ff12 fs1d fc12 sc0 ls6 ws0">(</div><div class="t m0 x37 h115 y131b ff1e fs2c fc12 sc0 ls6 ws0">Tiger</div><div class="t m0 xd1 h37 y131a ff12 fs1d fc12 sc0 ls6 ws0">) is explored.</div><div class="t m0 xe5 h5f y131c ff15 fs1c fc12 sc0 ls6 ws0">Lion</div><div class="t m0 x1c h5f y1316 ff15 fs1c fc12 sc0 ls6 ws0">object</div><div class="t m0 x1c h5f y1317 ff15 fs1c fc12 sc0 ls6 ws0">BigCat</div><div class="t m0 xc3 h5f y131c ff15 fs1c fc12 sc0 ls6 ws0">Tiger</div><div class="t m0 x1b h5f y131d ff15 fs1c fc12 sc0 ls6 ws0">Liger</div></div><div class="c x44 y10ef w2 hf3"><div class="t m0 xf h2b y131e ffb fs18 fcb sc0 ls29 ws37b">Figure 8.6<span class="_ _29"> </span>The depth-</div><div class="t m0 xf h2b y131f ffb fs18 fcb sc0 ls143 ws526">first ordering for a class </div><div class="t m0 xf h2b y1320 ffb fs18 fcb sc0 ls12e ws493">inheritance hierarchy</div></div><div class="c x44 y1321 wa3 h116"><div class="t m0 x0 h37 y1322 ff1b fs1d fc12 sc0 ls6 ws0">1<span class="ff12">. First, a depth-first ordering</span></div><div class="t m0 x130 h37 y1323 ff12 fs1d fc12 sc0 ls6 ws0">  of the superclasses is</div><div class="t m0 x130 h37 y1324 ff12 fs1d fc12 sc0 ls6 ws0">  created. (Remember that</div><div class="t m0 xc7 h115 y1325 ff1e fs2c fc12 sc0 ls6 ws0">object</div><div class="t m0 x127 h37 y1326 ff12 fs1d fc12 sc0 ls6 ws0"> is the default</div><div class="t m0 x130 h37 y1327 ff12 fs1d fc12 sc0 ls6 ws0">  superclass in Python.)</div><div class="t m0 x140 h5f y1328 ff15 fs1c fc12 sc0 ls6 ws0">Liger</div><div class="t m0 x102 h5f y1329 ff15 fs1c fc12 sc0 ls6 ws0">Lion</div><div class="t m0 x82 h5f y132a ff15 fs1c fc12 sc0 ls6 ws0">BigCat</div><div class="t m0 x82 h5f y132b ff15 fs1c fc12 sc0 ls6 ws0">object</div><div class="t m0 x140 h5f y132c ff15 fs1c fc12 sc0 ls6 ws0">Tiger</div><div class="t m0 x82 h5f y132d ff15 fs1c fc12 sc0 ls6 ws0">BigCat</div><div class="t m0 x82 h5f y132e ff15 fs1c fc12 sc0 ls6 ws0">object</div><div class="t m0 xd6 h5f y1328 ff15 fs1c fc12 sc0 ls6 ws0">Liger</div><div class="t m0 xf2 h5f y1329 ff15 fs1c fc12 sc0 ls6 ws0">Lion</div><div class="t m0 xb1 h5f y132a ff15 fs1c fc12 sc0 ls6 ws0">BigCat</div><div class="t m0 xb1 h5f y132b ff15 fs1c fc12 sc0 ls6 ws0">object</div><div class="t m0 xd6 h5f y132c ff15 fs1c fc12 sc0 ls6 ws0">Tiger</div><div class="t m0 xb1 h5f y132d ff15 fs1c fc12 sc0 ls6 ws0">BigCat</div><div class="t m0 xb1 h5f y132e ff15 fs1c fc12 sc0 ls6 ws0">object</div><div class="t m0 xd0 h5f y1328 ff15 fs1c fc12 sc0 ls6 ws0">Liger</div><div class="t m0 x94 h5f y1329 ff15 fs1c fc12 sc0 ls6 ws0">Lion</div><div class="t m0 x10b h5f y132a ff15 fs1c fc12 sc0 ls6 ws0">BigCat</div><div class="t m0 x10b h5f y132b ff15 fs1c fc12 sc0 ls6 ws0">object</div><div class="t m0 xd0 h5f y132c ff15 fs1c fc12 sc0 ls6 ws0">Tiger</div><div class="t m0 x5e h5f y1328 ff15 fs1c fc12 sc0 ls6 ws0">Liger</div><div class="t m0 x55 h5f y1329 ff15 fs1c fc12 sc0 ls6 ws0">Lion</div><div class="t m0 x5e h5f y132a ff15 fs1c fc12 sc0 ls6 ws0">Tiger</div><div class="t m0 x113 h5f y132b ff15 fs1c fc12 sc0 ls6 ws0">BigCat</div><div class="t m0 x113 h5f y132c ff15 fs1c fc12 sc0 ls6 ws0">object</div><div class="t m0 x11 h37 y132f ff12 fs1d fc12 sc0 ls6 ws0">2. Then the duplicates</div><div class="t m0 x11 h37 y1330 ff12 fs1d fc12 sc0 ls6 ws0">    are removed.</div><div class="t m0 x31 h37 y1331 ff12 fs1d fc12 sc0 ls6 ws0">3. Lastly<span class="_ _1c"></span>, each class is</div><div class="t m0 x31 h37 y1332 ff12 fs1d fc12 sc0 ls6 ws0">    moved so that itâ€™s after</div><div class="t m0 x31 h37 y1333 ff12 fs1d fc12 sc0 ls6 ws0">    all of its subclasses.</div></div><div class="c x44 y3f w2 h117"><div class="t m0 x2 h2b y95f ffb fs18 fcb sc0 ls17 ws43c">How Python determines the method resolution orde<span class="_ _0"></span>r for a class<span class="_ _cc"></span>Figure 8.7</div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
