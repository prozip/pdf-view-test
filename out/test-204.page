<div id="pfcc" class="pf w0 h0" data-page-no="cc"><div class="pc pccc w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bgcc.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">180</div><div class="t m0 x92 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 xd3 h2c y1d0 ffb fs19 fcb sc0 ls158 ws0">HAPTER</div><div class="t m0 xe4 h2b y1cf ffb fs18 fcb sc0 ls1bb ws730"> 10</div><div class="t m0 x2a h2d y80 ffa fs7 fcb sc0 ls6 ws0">Achieving loose coupling</div><div class="t m0 xae h3b y395 ffd fs18 fc3 sc0 lsb2 ws0">query<span class="_"> </span>=<span class="_"> </span>query.strip()</div><div class="t m0 xae h3b y396 ffd fs18 fc3 sc0 lsb2 ws0">query<span class="_"> </span>=<span class="_"> </span>re.sub(r&apos;\s+&apos;,<span class="_"> </span>&apos;<span class="_"> </span>&apos;,<span class="_"> </span>query)</div><div class="t m0 xae h3b y397 ffd fs18 fc3 sc0 lsb2 ws0">return<span class="_"> </span>query</div><div class="t m0 x44 h3b y484 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>normalize(query):</div><div class="t m0 xae h3b y569 ffd fs18 fc3 sc0 lsb2 ws0">query<span class="_"> </span>=<span class="_"> </span>query.casefold()</div><div class="t m0 xae h3b y56a ffd fs18 fc3 sc0 lsb2 ws0">return<span class="_"> </span>query</div><div class="t m0 x44 h3b y58f ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>__name__<span class="_"> </span>==<span class="_"> </span>&apos;__main__&apos;:</div><div class="t m0 xae h3b y590 ffd fs18 fc3 sc0 lsb2 ws0">search_query<span class="_"> </span>=<span class="_"> </span>input(&apos;Enter<span class="_"> </span>your<span class="_"> </span>search<span class="_"> </span>query:<span class="_"> </span>&apos;)</div><div class="t m0 xae h3b yfe2 ffd fs18 fc3 sc0 lsb2 ws0">search_query<span class="_"> </span>=<span class="_"> </span>remove_spaces(search_query)</div><div class="t m0 xae h3b y591 ffd fs18 fc3 sc0 lsb2 ws0">search_query<span class="_"> </span>=<span class="_"> </span>normalize(search_query)</div><div class="t m0 xae h3b y592 ffd fs18 fc1 sc0 lsb2 ws0">print(f&apos;Running<span class="_"> </span>a<span class="_"> </span>search<span class="_"> </span>for<span class="_"> </span>&quot;{search_query}&quot;&apos;)</div><div class="t m0 x44 h15 yeb9 ff4 fsb fc3 sc0 ls44 ws34">Is the main procedure <span class="ls48 ws2be">tightly coupled to the search module?</span></div><div class="t m0 xbc h3d y1638 ffb fs1e fca sc0 ls6 ws0">1</div><div class="t m0 x87 h15 y1639 ff4 fsb fc3 sc0 ls6 ws72">No, because it could<span class="_ _e"></span> easily do that work itself.</div><div class="t m0 xbc h3d y163a ffb fs1e fca sc0 ls6 ws0">2</div><div class="t m0 x87 h15 yee4 ff4 fsb fc3 sc0 ls71 wsd4">Yes, because it calls some of the <span class="ls38 ws26">functions inside the search module.</span></div><div class="t m0 xbc h3d y163b ffb fs1e fca sc0 ls6 ws0">3</div><div class="t m0 x87 h15 y34b ff4 fsb fc3 sc0 ls7c ws0">Ye<span class="_ _e"></span>s,<span class="_ _e"></span> be<span class="_ _e"></span>ca<span class="_ _e"></span>us<span class="_ _e"></span>e it<span class="_ _e"></span> wo<span class="_ _e"></span>ul<span class="_ _e"></span>d l<span class="_ _e"></span>ik<span class="_ _e"></span>el<span class="_ _e"></span>y ha<span class="_ _e"></span>ve<span class="_ _e"></span> to<span class="_ _e"></span> ch<span class="_ _e"></span>an<span class="_ _e"></span>ge<span class="_ _e"></span> if y<span class="_ _e"></span>ou<span class="_ _e"></span> ch<span class="_ _e"></span>an<span class="_ _e"></span>ge<span class="_ _e"></span>d t<span class="_ _e"></span>he w<span class="_ _e"></span>ay<span class="_ _e"></span> cl<span class="_ _e"></span>ea<span class="_ _e"></span>ni<span class="_ _e"></span>ng<span class="_ _e"></span> que<span class="_ _e"></span>-</div><div class="t m0 x87 h15 y276 ff4 fsb fc3 sc0 ls4b ws3b">ries works.</div><div class="t m0 x44 h15 yc4 ff4 fsb fc3 sc0 ls25 ws1e1">You can effectively identify coupling by a<span class="_ _0"></span><span class="ls2d ws1d">ssessing the likelihood that any given change</span></div><div class="t m0 x44 h15 ydbb ff4 fsb fc3 sc0 ls30 ws219">to a module will require a change to the code that uses it (option 3). Although the</div><div class="t m0 x44 h15 ycf1 ff4 fsb fc3 sc0 ls4e ws913">main procedure <span class="ff3 ls36 ws0">could</span><span class="ls47 ws4aa"> do t<span class="_ _e"></span>he work the cleaning functions do,<span class="_ _e"></span> it’s important to discuss</span></div><div class="t m0 x44 h15 ycf2 ff4 fsb fc3 sc0 ls160 ws0">co<span class="_ _0"></span>up<span class="_ _0"></span>li<span class="_ _0"></span>ng<span class="_ _0"></span> as<span class="_ _0"></span> it<span class="_ _0"></span> cu<span class="_ _0"></span>r<span class="_ _0"></span>re<span class="_ _0"></span>ntl<span class="_ _1d"></span>y exi<span class="_ _1d"></span>sts<span class="_ _0"></span> in<span class="_ _0"></span> yo<span class="_ _0"></span>ur<span class="_ _0"></span> co<span class="_ _0"></span><span class="ls30 ws250">de. Option 1 is hypothetical and doesn’t help</span></div><div class="t m0 x44 h15 y27d ff4 fsb fc3 sc0 ls34 ws185">you achieve this. Calling a few functions from a module (option 2)<span class="ls38 ws256"> is sometimes a sign</span></div><div class="t m0 x44 h15 ycf3 ff4 fsb fc3 sc0 ls7d ws1b2">of coupling, but the more impo<span class="ls34 ws2c6">rtant metric is how likely a change to the search mod-</span></div><div class="t m0 x44 h15 yae7 ff4 fsb fc3 sc0 ls2d ws1d">ule will require changes <span class="ls48 ws2be">to the main procedure.</span></div><div class="t m0 x32 h15 y15b ff4 fsb fc3 sc0 ls2f ws109"> Suppose your users report that they’re <span class="_ _0"></span>st<span class="ls6b ws63">ill getting inconsistent results fr<span class="_ _0"></span>om minor</span></div><div class="t m0 x44 h15 y9e ff4 fsb fc3 sc0 ls2f ws343">changes to their queries. You do some invest<span class="ls3a ws4e7">igation and realize it’s because some users</span></div><div class="t m0 x44 h15 yae9 ff4 fsb fc3 sc0 ls34 ws2f4">like to put quotes around thei<span class="ls2d ws177">r queries, thinking it will <span class="ls42 ws2f3">make them more specific, but</span></span></div><div class="t m0 x44 h15 ycf5 ff4 fsb fc3 sc0 ls42 ws914">your search index treats quotes literally,<span class="ls2d ws915"> matching only records that contain the</span></div><div class="t m0 x44 h15 yd33 ff4 fsb fc3 sc0 ls25 ws1a">quotes as written. You decide to disc<span class="ls31 ws25">ard the quotes before running the query.</span></div><div class="t m0 x32 h15 y11c ff4 fsb fc3 sc0 ls42 ws1ec"> The way things are currently written, th<span class="ls2f ws1ed">is would involve adding a new function to</span></div><div class="t m0 x44 h15 y714 ff4 fsb fc3 sc0 ls2f ws26a">the search module <span class="ff3 ls6 ws0">and</span><span class="ls31 ws25"> updating all the places where <span class="ls48 ws2be">you clean querie<span class="_ _e"></span>s to ensure they</span></span></div><div class="t m0 x44 h15 ycf7 ff4 fsb fc3 sc0 ls42 ws1ec">call the new function, as shown in the followi<span class="ls18b ws0">n<span class="_ _1d"></span>g l<span class="_ _1c"></span>is<span class="_ _1d"></span>t<span class="_ _1d"></span>i<span class="_ _0"></span>n<span class="_ _1d"></span>g<span class="_ _0"></span>.<span class="_ _1d"></span> T<span class="_ _0"></span>h<span class="_ _1d"></span>os<span class="_ _1c"></span>e p<span class="_ _1d"></span>o<span class="_ _1d"></span>i<span class="_ _0"></span>n<span class="_ _1d"></span>t<span class="_ _0"></span>s<span class="_ _1d"></span> i<span class="_ _0"></span>n<span class="_ _1d"></span> t<span class="_ _0"></span>h<span class="_ _1d"></span>e<span class="_ _0"></span> c<span class="_ _1d"></span>o<span class="_ _0"></span>d<span class="_ _1d"></span>e<span class="_ _0"></span> a<span class="_ _1d"></span>re</span></div><div class="t m0 x44 h15 ycf8 ff4 fsb fc3 sc0 ls71 wsd4">all tightly coupled to the search module.</div><div class="t m0 x44 h3b y501 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>remove_quotes(query):</div><div class="t m0 xae h3b y502 ffd fs18 fc3 sc0 lsb2 ws0">query<span class="_"> </span>=<span class="_"> </span>re.sub(r&apos;&quot;&apos;,<span class="_"> </span>&apos;&apos;,<span class="_"> </span>query)</div><div class="t m0 xae h3b y503 ffd fs18 fc3 sc0 lsb2 ws0">return<span class="_"> </span>query</div><div class="t m0 x18 h20 y163c ffb fs7 fc4 sc0 ls6 ws0">Tight coupling causing changes to ripple out<span class="_ _0"></span>ward<span class="_ _103"></span>Listing<span class="_"> </span>10.4</div><div class="c x29 y163d wc3 hf0"><div class="t m0 x12e h14 y10e1 ff12 fs7 fcb sc0 ls122 ws0">Tu<span class="ff13 ls103">rn</span><span class="ls164 ws916">s &apos;U</span><span class="ff13 ls6">n</span><span class="ls17f">ive<span class="ff13 ls6">r</span><span class="lsda">sitätsst<span class="ff13 ls6">r</span><span class="lsd2 ws38c">aße&apos; (“U<span class="_ _0"></span><span class="ff13 ls6 ws0">n<span class="ff12 ls17f">ive</span>r<span class="ff12 ls19d">sity </span></span></span></span></span></div><div class="t m0 x12e h14 y65d ff12 fs7 fcb sc0 ls6 ws0">St<span class="ff13">r</span><span class="ls105 ws325">eet”) i</span><span class="ff13">n</span><span class="ls125 ws3cc">to &apos;u</span><span class="ff13">n</span><span class="ls17f">ive</span><span class="ff13">r</span><span class="ls127">sitätsst</span><span class="ff13">r</span><span class="lsd8">ass<span class="_ _e"></span>e&apos;</span></div></div><div class="c x49 y163e wc4 h13d"><div class="t m0 xe0 h14 y1634 ff12 fs7 fcb sc0 ls10c ws3d9">Gets a que<span class="ff13 ls6 ws0">r<span class="ff12 lsd3">y </span></span></div><div class="t m0 xe0 h14 y1635 ff12 fs7 fcb sc0 ls6 ws0">f<span class="ff13">r</span>o<span class="ff13">m</span><span class="lsff ws38b"> the use</span><span class="ff13">r</span></div></div><div class="c x55 y163f wc5 h56"><div class="t m0 xf5 h14 y10e1 ff12 fs7 fcb sc0 ls14e ws0">Re<span class="ff13 ls6">m</span><span class="lsd9 ws2ce">oves spaces a</span><span class="ff13 ls6">n</span><span class="lsec">d </span></div><div class="t m0 xf5 h14 y65d ff13 fs7 fcb sc0 ls6 ws0">n<span class="ff12">o</span><span class="ls123">rm<span class="ff12 lsd5 ws2a6">alizes casi</span></span>n<span class="ff12">g</span></div></div><div class="c x49 y1640 wc6 h43"><div class="t m0 xc8 h14 y430 ff12 fs7 fcb sc0 ls6 ws0">P<span class="ff13">r</span>i<span class="ff13">n</span><span class="lse0 ws389">ts the </span></div><div class="t m0 xc8 h14 y2f7 ff12 fs7 fcb sc0 ls6 ws0">clea<span class="ff13">n</span><span class="lsde ws3cf">ed-up que</span><span class="ff13">r</span>y</div></div><div class="c x6a y15d7 wc7 h46"><div class="t m0 xc8 h14 y2ed ff12 fs7 fcb sc0 lsd2 ws0">A <span class="ff13 ls6">n</span><span class="ls17f ws917">ew fu</span><span class="ff13 ls6">n</span><span class="ls117">ctio<span class="ff13 ls6">n<span class="_ _e"></span></span><span class="ls103 ws31b"> fo</span><span class="ff13 ls6">r<span class="_ _0"></span><span class="ff12"> </span></span></span></div><div class="t m0 xc8 h14 y2ee ff13 fs7 fcb sc0 ls6 ws0">r<span class="ff12">e</span>m<span class="ff12 lsf2">ovi</span>n<span class="ff12 ls140 ws715">g quotes</span></div></div><div class="t m0 x44 h3b y509 ffd fs18 fcd sc0 ls6 ws0">if</div><div class="t m3 x0 h3a y509 ff8 fs18 fcd sc0 ls6 ws0"> </div><div class="t m0 xbc h3b y509 ffd fs18 fcd sc0 ls6 ws0">__name__</div><div class="t m3 x0 h3a y509 ff8 fs18 fcd sc0 ls6 ws0"> </div><div class="t m0 xc3 h3b y509 ffd fs18 fcd sc0 ls6 ws0">==</div><div class="t m3 x0 h3a y509 ff8 fs18 fcd sc0 ls6 ws0"> </div><div class="t m0 x17 h3b y509 ffd fs18 fcd sc0 ls6 ws0">&apos;__main__&apos;:</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
