<div id="pf4a" class="pf w0 h0" data-page-no="4a"><div class="pc pc4a w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg4a.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">50</div><div class="t m0 x8e h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 xf2 h2c y1d0 ffb fs19 fcb sc0 ls12b ws0">HAPTER</div><div class="t m0 xc9 h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 3</div><div class="t m0 x47 h2d y80 ffa fs7 fcb sc0 ls6 ws0">Abstraction and encapsulation</div><div class="t m0 x44 h15 y40 ff4 fsb fc3 sc0 ls3a ws0">The </div><div class="t m5 xae h24 y3eb ffd fsc fc3 sc0 lsa0 ws0">Greeter</div><div class="t m0 x1c h15 y40 ff4 fsb fc3 sc0 ls38 wsaa"> prints the desired message, so everythi<span class="lsc1 ws0">ng<span class="_ _0"></span>’s g<span class="_ _0"></span>rea<span class="_ _0"></span>t, r<span class="_ _0"></span>igh<span class="_ _0"></span>t? I<span class="_ _0"></span>f you<span class="_ _0"></span> lo<span class="_ _0"></span>ok c<span class="_ _0"></span>are-</span></div><div class="t m0 x44 h15 y41 ff4 fsb fc3 sc0 ls5f ws4b6">fully, though,<span class="_ _0"></span> the </div><div class="t m5 xa7 h24 y532 ffd fsc fc3 sc0 lsa0 ws0">Greeter</div><div class="t m0 xa8 h15 y41 ff4 fsb fc3 sc0 ls1c ws17f"> knows how to do too much. The </div><div class="t m5 x104 h24 y532 ffd fsc fc3 sc0 lsa0 ws0">Greeter</div><div class="t m0 x81 h15 y41 ff4 fsb fc3 sc0 ls3a ws4b7"> should only greet</div><div class="t m0 x44 h15 y533 ff4 fsb fc3 sc0 ls48 ws4b8">people; it shouldn’t be<span class="_ _e"></span> responsible for dete<span class="ls20 ws51">rmining the day of the week and what part</span></div><div class="t m0 x44 h15 y43 ff4 fsb fc3 sc0 ls20 ws51">of the day it is! The e<span class="_ _e"></span>ncapsulation isn’t ideal. What are you to do?</div><div class="t m0 x44 h26 y708 ffc fs15 fc2 sc0 ls110 ws0">R<span class="_ _e"></span>ef<span class="_ _e"></span>a<span class="_ _e"></span>c<span class="_ _e"></span>to<span class="_ _e"></span>r<span class="_ _e"></span>i<span class="_ _e"></span>ng<span class="_ _5d"></span>3.3.1</div><div class="t m0 x44 h15 y46 ff4 fsb fc3 sc0 ls31 ws378">Encapsulation and abstraction are often iter<span class="ls47 ws2d5">ative processes. As you write more code<span class="_ _e"></span>,</span></div><div class="t m0 x44 h15 ye3 ff4 fsb fc3 sc0 ls48 ws432">constructs that made sense before may see<span class="_ _e"></span>m<span class="ls2d ws1a8"> awkward or forced. I assure you that this</span></div><div class="t m0 x44 h15 y48 ff4 fsb fc3 sc0 ls34 ws128">is totally natural. The feeling that your code is working against you might mean it’s</div><div class="t m0 x44 h15 y49 ff4 fsb fc3 sc0 ls7d ws4b9">time to <span class="ff3 lsf8 ws0">refactor</span><span class="ls50 ws4ba">. Refactoring code means updating ho<span class="ls1c ws451">w it’s structured to serve your</span></span></div><div class="t m0 x44 h15 y4a ff4 fsb fc3 sc0 ls1e ws6d">needs more effectively. When you refactor, yo<span class="ls34 ws185">u will often need to change the ways you</span></div><div class="t m0 x44 h15 y4b ff4 fsb fc3 sc0 ls1e ws16">represent behaviors and concepts. Moving da<span class="ls71 wsd4">ta and implementations around is a nec-</span></div><div class="t m0 x44 h15 y14b ff4 fsb fc3 sc0 ls147 ws0">e<span class="_ _1d"></span>s<span class="_ _1d"></span>s<span class="_ _0"></span>a<span class="_ _1d"></span>r<span class="_ _1d"></span>y<span class="_ _0"></span> p<span class="_ _1d"></span>a<span class="_ _1d"></span>r<span class="_ _0"></span>t<span class="_ _1d"></span> o<span class="_ _0"></span>f<span class="_ _1d"></span> i<span class="_ _1d"></span>m<span class="_ _0"></span>p<span class="_ _1d"></span>r<span class="_ _1d"></span>o<span class="_ _0"></span>v<span class="_ _1d"></span>i<span class="_ _1d"></span>n<span class="_ _0"></span>g<span class="_ _1d"></span> t<span class="_ _1d"></span>h<span class="_ _0"></span>e<span class="_ _1d"></span> c<span class="_ _1d"></span>o<span class="_ _0"></span>d<span class="_ _1d"></span>e<span class="_ _1d"></span>.<span class="_ _0"></span> I<span class="_ _1d"></span>t<span class="_ _1d"></span>’<span class="_ _0"></span>s<span class="_ _1d"></span> k<span class="_ _0"></span>i<span class="_ _1d"></span>n<span class="_ _1d"></span>d<span class="_ _0"></span> o<span class="_ _1d"></span>f<span class="_ _1d"></span> l<span class="_ _0"></span>i<span class="_ _1d"></span>k<span class="_ _1d"></span>e<span class="_ _0"></span> r<span class="_ _1d"></span>e<span class="_ _1d"></span>a<span class="_ _0"></span>r<span class="_ _1d"></span>r<span class="_ _1d"></span>a<span class="_ _0"></span>n<span class="_ _1d"></span>g<span class="_ _1d"></span>i<span class="_ _0"></span>n<span class="_ _1d"></span>g<span class="_ _1d"></span> t<span class="_ _0"></span>h<span class="_ _1d"></span>e<span class="_ _0"></span> l<span class="_ _1d"></span>i<span class="_ _1d"></span>v<span class="_ _0"></span>i<span class="_ _1d"></span>n<span class="_ _1d"></span>g<span class="_ _0"></span> r<span class="_ _1d"></span>o<span class="_ _1d"></span>o<span class="_ _0"></span>m<span class="_ _1d"></span> e<span class="_ _1d"></span>v<span class="_ _0"></span>e<span class="_ _1d"></span>r<span class="_ _1d"></span>y</div><div class="t m0 x44 h15 y4d ff4 fsb fc3 sc0 lsb1 ws1d3">few years to fi<span class="_ _0"></span>t your current mood.</div><div class="t m0 x32 h15 y4e ff4 fsb fc3 sc0 ls1e ws145"> Refactor your </div><div class="t m5 xa7 h24 y709 ffd fsc fc3 sc0 lsa0 ws0">Greeter</div><div class="t m0 xa8 h15 y4e ff4 fsb fc3 sc0 ls5e ws4bb"> code now by moving the methods for getting information</div><div class="t m0 x44 h15 y4f ff4 fsb fc3 sc0 lsab wsa8">about the day and time out o<span class="_ _0"></span>f the </div><div class="t m5 x4b h24 y433 ffd fsc fc3 sc0 lsa0 ws0">Greeter</div><div class="t m0 x7b h15 y4f ff4 fsb fc3 sc0 ls20 ws9b"> class and making th<span class="ls3d ws27e">em standalone func-</span></div><div class="t m0 x44 h15 y2b2 ff4 fsb fc3 sc0 ls30 wsbd">tions within the module.</div><div class="t m0 x32 h15 yed ff4 fsb fc3 sc0 ls25 ws29f"> The functions never used the </div><div class="t m5 x2a h24 y70a ffd fsc fc3 sc0 lsa0 ws0">self</div><div class="t m0 x6a h15 yed ff4 fsb fc3 sc0 lsaa ws0"> a<span class="_ _1d"></span>r<span class="_ _1d"></span>g<span class="_ _1d"></span>u<span class="_ _1d"></span>m<span class="_ _0"></span>e<span class="_ _1d"></span>n<span class="_ _1d"></span>t<span class="_ _1d"></span> w<span class="_ _1d"></span>h<span class="_ _1d"></span>e<span class="_ _0"></span>n<span class="_ _1d"></span> t<span class="_ _1d"></span>h<span class="_ _1d"></span>e<span class="_ _1d"></span>y<span class="_ _1d"></span> w<span class="_ _1d"></span>e<span class="_ _0"></span>r<span class="_ _1d"></span>e<span class="_ _1d"></span> m<span class="_ _1d"></span>e<span class="_ _1d"></span>t<span class="_ _1d"></span>h<span class="_ _0"></span>o<span class="_ _1d"></span>d<span class="_ _1d"></span>s<span class="_ _1d"></span>,<span class="_ _1d"></span> s<span class="_ _1d"></span>o<span class="_ _0"></span> t<span class="_ _1d"></span>h<span class="_ _1d"></span>e<span class="_ _1d"></span>y<span class="_ _1d"></span>’<span class="_ _1d"></span>l<span class="_ _1d"></span>l</div><div class="t m0 x44 h15 y52 ff4 fsb fc3 sc0 ls3b ws70">look pretty much the same <span class="_ _e"></span><span class="ls20 ws51">but without that argument:</span></div><div class="t m0 x44 h3b y70b ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>day():</div><div class="t m0 xae h3b y70c ffd fs18 fc3 sc0 lsb2 ws0">return<span class="_"> </span>datetime.now().strftime(&apos;%A&apos;)</div><div class="t m0 x44 h3b y70d ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>part_of_day():</div><div class="t m0 xae h3b y70e ffd fs18 fc3 sc0 lsb2 ws0">current_hour<span class="_"> </span>=<span class="_"> </span>datetime.now().hour</div><div class="t m0 xae h3b y70f ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>current_hour<span class="_"> </span>&lt;<span class="_"> </span>12:</div><div class="t m0 x97 h3b y710 ffd fs18 fc3 sc0 lsb2 ws0">part_of_day<span class="_"> </span>=<span class="_"> </span>&apos;morning&apos;</div><div class="t m0 xae h3b y59f ffd fs18 fc3 sc0 lsb2 ws0">elif<span class="_"> </span>12<span class="_"> </span>&lt;=<span class="_"> </span>current_hour<span class="_"> </span>&lt;<span class="_"> </span>17:</div><div class="t m0 x97 h3b y5a0 ffd fs18 fc3 sc0 lsb2 ws0">part_of_day<span class="_"> </span>=<span class="_"> </span>&apos;afternoon&apos;</div><div class="t m0 xae h3b y711 ffd fs18 fc3 sc0 lsb2 ws0">else:</div><div class="t m0 x97 h3b y712 ffd fs18 fc3 sc0 lsb2 ws0">part_of_day<span class="_"> </span>=<span class="_"> </span>&apos;evening&apos;</div><div class="t m0 xae h3b y713 ffd fs18 fc1 sc0 lsb2 ws0">return<span class="_"> </span>part_of_day</div><div class="t m0 x44 h15 y714 ff4 fsb fc3 sc0 ls3a ws0">The </div><div class="t m5 x83 h24 y715 ffd fsc fc3 sc0 lsa0 ws0">Greeter</div><div class="t m0 x1c h15 y714 ff4 fsb fc3 sc0 ls25 ws29f"> class can then call these function<span class="_ _0"></span>s <span class="ls48 ws4bc">by referencing them direct<span class="_ _e"></span>ly instead</span></div><div class="t m0 x44 h15 y11d ff4 fsb fc3 sc0 ls3b ws29">of with the </div><div class="t m5 x79 h24 y716 ffd fsc fc3 sc0 lsa0 ws0">self.</div><div class="t m0 xad h15 y11d ff4 fsb fc3 sc0 ls21 wsf7"> prefix:</div><div class="t m0 x44 h3b y717 ffd fs18 fc3 sc0 lsb2 ws0">class<span class="_"> </span>Greeter:</div><div class="t m0 xae h3b y718 ffd fs18 fc3 sc0 lsb2 ws0">...</div><div class="t m0 xae h3b y719 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>greet(self,<span class="_"> </span>store):</div><div class="t m0 x97 h3b y380 ffd fs18 fc3 sc0 lsb2 ws0">print(f&apos;Hi,<span class="_"> </span>my<span class="_"> </span>name<span class="_"> </span>is<span class="_"> </span>{self.name},<span class="_"> </span>and<span class="_"> </span>welcome<span class="_"> </span>to<span class="_"> </span>{store}!&apos;)</div><div class="t m0 x97 h3b y71a ffd fs18 fc3 sc0 lsb2 ws0">print(f&apos;How\&apos;s<span class="_"> </span>your<span class="_"> </span>{day()}<span class="_"> </span>{part_of_day()}<span class="_"> </span>going?&apos;)</div><div class="t m0 x97 h3b y71b ffd fs18 fc1 sc0 lsb2 ws0">print(&apos;Here\&apos;s<span class="_"> </span>a<span class="_"> </span>coupon<span class="_"> </span>for<span class="_"> </span>20%<span class="_"> </span>off!&apos;)</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
