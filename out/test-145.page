<div id="pf91" class="pf w0 h0" data-page-no="91"><div class="pc pc91 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg91.png"/><div class="t m0 xa0 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">121<span class="_ _aa"></span><span class="ffa">An initial code structure, by concern</span></div><div class="t m0 x35 h3b y395 ffd fs18 fc3 sc0 lsb2 ws0">(A)<span class="_"> </span>Add<span class="_"> </span>a<span class="_"> </span>bookmark</div><div class="t m0 x35 h3b y396 ffd fs18 fc3 sc0 lsb2 ws0">(B)<span class="_"> </span>List<span class="_"> </span>bookmarks<span class="_"> </span>by<span class="_"> </span>date</div><div class="t m0 x35 h3b y397 ffd fs18 fc3 sc0 lsb2 ws0">(T)<span class="_"> </span>List<span class="_"> </span>bookmarks<span class="_"> </span>by<span class="_"> </span>title</div><div class="t m0 x35 h3b y40d ffd fs18 fc3 sc0 lsb2 ws0">(D)<span class="_"> </span>Delete<span class="_"> </span>a<span class="_"> </span>bookmark</div><div class="t m0 x35 h3b y483 ffd fs18 fc1 sc0 lsb2 ws0">(Q)<span class="_"> </span>Quit</div><div class="t m0 x35 h15 ydb6 ff4 fsb fc3 sc0 ls71 wsd4">Each option has a keyboard shortcut<span class="_ _e"></span> and a de<span class="ls20 ws17">scriptive title. If you look carefully, each</span></div><div class="t m0 x35 h15 yd0c ff4 fsb fc3 sc0 ls3b ws4b0">of these options co<span class="_ _e"></span>rresponds to one of th<span class="ls48 ws2da">e commands you wrote earlier. Be<span class="_ _e"></span>cause you</span></div><div class="t m0 x35 h15 y110 ff4 fsb fc3 sc0 ls34 ws42d">wrote the commands using the command patt<span class="ls2e ws77f">ern, each command can be tr<span class="_ _0"></span>iggered</span></div><div class="t m0 x35 h15 yad4 ff4 fsb fc3 sc0 ls34 ws22">the same way as the others—using its </div><div class="t m5 x84 h24 yfaa ffd fsc fc3 sc0 lsa0 ws0">execute</div><div class="t m0 x2e h15 yad4 ff4 fsb fc3 sc0 ls31 ws25"> method. Commands differ only in what</div><div class="t m0 x35 h15 yee2 ff4 fsb fc3 sc0 ls1c ws400">setup and input they require, and then from<span class="_ _e"></span><span class="ls5e ws32a"> the presentation layer’s perspective they</span></div><div class="t m0 x35 h15 y36a ff4 fsb fc3 sc0 ls3d ws2c">do whatever they do.</div><div class="t m0 x83 h15 y36b ff4 fsb fc3 sc0 ls2d ws3eb"> Based on what you’ve learned about enca<span class="ls25 ws25b">psulation, how would you go about hook-</span></div><div class="t m0 x35 h15 yee3 ff4 fsb fc3 sc0 ls20 ws51">ing up the items in the presentat<span class="_ _e"></span>ion layer to the business logic they control?</div><div class="t m0 x8a h3d yfab ffb fs1e fca sc0 ls6 ws0">1</div><div class="t m0 x48 h15 ya0e ff4 fsb fc3 sc0 ls6d ws637">Use cond<span class="_ _e"></span>itional logic t<span class="_ _e"></span>o call the right </div><div class="t m5 x30 h24 yfac ffd fsc fc3 sc0 lsa0 ws0">Command</div><div class="t m0 x53 h15 ya0e ff4 fsb fc3 sc0 ls42 ws1f2"> class’s </div><div class="t m5 xed h24 yfac ffd fsc fc3 sc0 lsa0 ws0">execute</div><div class="t m0 x7c h15 ya0e ff4 fsb fc3 sc0 ls6c ws6c2"> method based on</div><div class="t m0 x48 h15 y843 ff4 fsb fc3 sc0 ls7d ws11c">the user input.</div><div class="t m0 x8a h3d yfad ffb fs1e fca sc0 ls6 ws0">2</div><div class="t m0 x48 h15 y48d ff4 fsb fc3 sc0 ls34 ws2f4">Make a class that pairs the text to be displayed to <span class="_ _e"></span>the user and the command it</div><div class="t m0 x48 h15 y48e ff4 fsb fc3 sc0 ls44 ws0">triggers.</div><div class="t m0 x35 h15 y25a ff4 fsb fc3 sc0 ls1cf ws2c">I reco<span class="_ _e"></span>mmend c<span class="_ _e"></span>hoice 2.<span class="_ _e"></span> To hook<span class="_ _e"></span> each men<span class="_ _e"></span>u optio<span class="_ _e"></span>n up to t<span class="_ _e"></span>he comma<span class="_ _e"></span>nd it sh<span class="_ _e"></span>ould trig<span class="_ _e"></span>-</div><div class="t m0 x35 h15 yfae ff4 fsb fc3 sc0 ls3b ws1a1">ger, you can create an </div><div class="t m5 x3 h24 yfaf ffd fsc fc3 sc0 lsa0 ws0">Option</div><div class="t m0 x93 h15 yfae ff4 fsb fc3 sc0 ls38 ws1a3"> class. The class’s </div><div class="t m5 xeb h24 yfaf ffd fsc fc3 sc0 lsa0 ws0">__init__</div><div class="t m0 xe9 h15 yfae ff4 fsb fc3 sc0 ls44 wsd1"> method can accept the name</div><div class="t m0 x35 h15 y5b1 ff4 fsb fc3 sc0 ls1c ws82">to display to the user in the menu, an in<span class="ls30 wsbd">stance of the command to<span class="_ _e"></span> execute when cho-</span></div><div class="t m0 x35 h15 yfb0 ff4 fsb fc3 sc0 ls38 ws180">sen by the user, and an optional preparatio<span class="ls30 ws219">n step (to ge<span class="_ _e"></span>t additional input from the</span></div><div class="t m0 x35 h15 yfb1 ff4 fsb fc3 sc0 ls3b ws70">user, for example).<span class="_ _e"></span> All of these can be stored as instance att<span class="_ _e"></span>ributes.</div><div class="t m0 x83 h15 y157 ff4 fsb fc3 sc0 ls30 ws36"> When chosen, an </div><div class="t m5 xba h24 yfb2 ffd fsc fc3 sc0 lsa0 ws0">Option</div><div class="t m0 x8f h15 y157 ff4 fsb fc3 sc0 ls34 ws9f"> instance needs to</div><div class="t m0 x8a h3d yfb3 ffb fs1e fca sc0 ls6 ws0">1</div><div class="t m0 x48 h15 y41d ff4 fsb fc3 sc0 ls20 ws51">Run the specified preparation step, if<span class="_ _e"></span> any.</div><div class="t m0 x8a h3d yfb4 ffb fs1e fca sc0 ls6 ws0">2</div><div class="t m0 x48 h15 y159 ff4 fsb fc3 sc0 ls30 ws222">Pass the return value from <span class="ls3d ws476">the preparation step, if <span class="_ _e"></span>any, to the specified com-</span></div><div class="t m0 x48 h15 y5b2 ff4 fsb fc3 sc0 ls36 ws0">mand’s </div><div class="t m5 x1d h24 ya2e ffd fsc fc3 sc0 lsa0 ws0">execute</div><div class="t m0 x23 h15 y5b2 ff4 fsb fc3 sc0 ls1c5 ws13b"> metho<span class="_ _0"></span>d.</div><div class="t m0 x8a h3d yfb5 ffb fs1e fca sc0 ls6 ws0">3</div><div class="t m0 x48 h15 y19c ff4 fsb fc3 sc0 ls48 ws31e">Print the result of the execution. Th<span class="_ _e"></span><span class="ls31 ws200">ese are the success messages or bookmark</span></div><div class="t m0 x48 h15 y5c ff4 fsb fc3 sc0 ls1c ws21">results returned from<span class="ls51 ws47"> the business logic.</span></div><div class="t m0 x35 h15 ybf4 ff4 fsb fc3 sc0 ls1f ws0">An </div><div class="t m5 x8b h24 yfb6 ffd fsc fc3 sc0 lsa0 ws0">Option</div><div class="t m0 x21 h15 yd2 ff4 fsb fc3 sc0 ls2e ws426"> instance should be represented as it<span class="ls2d ws780">s text description <span class="ls51 ws1bb">when shown to the</span></span></div><div class="t m0 x35 h15 y160 ff4 fsb fc3 sc0 ls50 ws18a">user; you can use </div><div class="t m5 x66 h24 yfb7 ffd fsc fc3 sc0 lsa0 ws0">__str__</div><div class="t m0 xc9 h15 y160 ff4 fsb fc3 sc0 ls30 ws37d"> to override the default b<span class="_ _e"></span>ehavior. Abstracting this work from</div><div class="t m0 x35 h15 y161 ff4 fsb fc3 sc0 ls20 ws37d">the rest of the code that gets<span class="ls1f ws2dc"> and validates user input allows you to keep your concerns</span></div><div class="t m0 x35 h15 yff ff4 fsb fc3 sc0 ls31 ws0">separate.</div><div class="t m0 x83 h15 yfb8 ff4 fsb fc3 sc0 ls6b ws781"> Try writing the </div><div class="t m5 xd1 h24 yfb9 ffd fsc fc3 sc0 lsa0 ws0">Option</div><div class="t m0 xb6 h15 yfb8 ff4 fsb fc3 sc0 ls25 ws233"> class, then check the following listing to see how you’ve done.</div><div class="t m0 x35 h3b yfba ffd fs18 fc3 sc0 lsb2 ws0">class<span class="_"> </span>Option:</div><div class="t m0 x87 h3b yfbb ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>__init__(self,<span class="_"> </span>name,<span class="_"> </span>command,<span class="_"> </span>prep_call=None):</div><div class="t m0 x36 h3b yfbc ffd fs18 fc3 sc0 lsb2 ws0">self.name<span class="_"> </span>=<span class="_"> </span>name</div><div class="t m0 x36 h3b yfbd ffd fs18 fc3 sc0 lsb2 ws0">self.command<span class="_"> </span>=<span class="_"> </span>command</div><div class="t m0 x36 h3b yfbe ffd fs18 fc3 sc0 lsb2 ws0">self.prep_call<span class="_"> </span>=<span class="_"> </span>prep_call</div><div class="t m0 x83 h20 yfbf ffb fs7 fc4 sc0 ls6 ws0">Listing<span class="_"> </span>6.11<span class="_ _55"> </span>Connecting menu text to business logic com<span class="_ _0"></span>mands</div><div class="c x89 yfc0 w73 h77"><div class="t m0 x12a h14 yfc1 ff12 fs7 fcb sc0 lsdc ws0">The <span class="ff13 ls6">n<span class="ff12">a</span>m</span><span class="lsd5 ws707">e displayed</span></div><div class="t m0 xc8 h14 yfc2 ff12 fs7 fcb sc0 ls6 ws0">i<span class="ff13">n</span><span class="lsed ws4ed"> the </span><span class="ff13">m</span>e<span class="ff13">n</span>u</div></div><div class="c xfa yfc3 w74 he0"><div class="t m0 xfb h14 yfc4 ff12 fs7 fcb sc0 ls6 ws0">A<span class="ff13">n</span><span class="lse1"> i</span><span class="ff13">n</span><span class="ls119">sta</span><span class="ff13">n</span><span class="lsff ws315">ce of the </span></div><div class="t m0 xfb h14 yfc5 ff12 fs7 fcb sc0 ls6 ws0">co<span class="ff13 ls10e">mm</span>a<span class="ff13">n</span><span class="lsff ws38b">d to execute</span></div></div><div class="c xcd y6b0 w75 hb8"><div class="t m0 x12e h14 yfc6 ff12 fs7 fcb sc0 ls126 ws782">The optio<span class="ff13 ls6 ws0">n<span class="ff12 ls170">al </span></span></div><div class="t m0 x12e h14 yfc7 ff12 fs7 fcb sc0 ls6 ws0">p<span class="ff13">r</span><span class="lsde">epa</span><span class="ff13">r</span><span class="ls10d">atio</span><span class="ff13">n</span><span class="lsdc ws2ac"> step to </span></div><div class="t m0 x12e h14 yfc8 ff12 fs7 fcb sc0 lsdc ws2ac">call befo<span class="ff13 ls6 ws0">r</span><span class="ws3df">e executi<span class="ff13 ls6 ws0">n<span class="ff12 lsdd">g </span></span></span></div><div class="t m0 x12e h14 yfc9 ff12 fs7 fcb sc0 ls105 ws325">the co<span class="ff13 ls10e ws0">mm<span class="ff12 ls6">a<span class="ff13">n</span>d</span></span></div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
