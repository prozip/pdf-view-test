<div id="pfb7" class="pf w0 h0" data-page-no="b7"><div class="pc pcb7 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bgb7.png"/><div class="t m0 xa0 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">159<span class="_ _e1"></span><span class="ffa">Inheritance and composition in Bark</span></div><div class="t m0 x35 h15 y40 ff4 fsb fc3 sc0 ls6f ws0">Because </div><div class="t m5 x132 h24 y3eb ffd fsc fc3 sc0 lsa0 ws0">execute()</div><div class="t m0 x1e h15 y40 ff4 fsb fc3 sc0 ls38 wsc9"> has a consistent signature, you ca<span class="ls1e ws67a">n also simplify a line in the bark</span></div><div class="t m0 x35 h15 y41 ff4 fsb fc3 sc0 lsc5 ws3ab">module where an o<span class="_ _0"></span>ption triggers a command in th<span class="_ _0"></span>e </div><div class="t m5 x53 h24 y532 ffd fsc fc3 sc0 lsa0 ws0">choose()</div><div class="t m0 x6f h15 y41 ff4 fsb fc3 sc0 ls2f ws26a"> method:</div><div class="t m0 x35 h3b y50b ffd fs18 fc3 sc0 lsb2 ws0">class<span class="_"> </span>Option:</div><div class="t m0 x87 h3b y50c ffd fs18 fc3 sc0 lsb2 ws0">...</div><div class="t m0 x87 h3b yee1 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>choose(self):</div><div class="t m0 x36 h3b yb9f ffd fs18 fc3 sc0 lsb2 ws0">...</div><div class="t m0 x36 h3b y13be ffd fs18 fc1 sc0 lsb2 ws0">message<span class="_"> </span>=<span class="_"> </span>self.command.execute(data)</div><div class="t m0 x35 h15 y410 ff4 fsb fc3 sc0 ls51 ws1bb">Bark should continue to work exactly as <span class="_ _0"></span>it<span class="ls1c ws21d"> did before. Adding the<span class="_ _e"></span> abstract base class</span></div><div class="t m0 x35 h15 y56b ff4 fsb fc3 sc0 ls31 ws2c2">here just makes it a little safer when creating future commands. If you decide that</div><div class="t m0 x35 h15 y56d ff4 fsb fc3 sc0 ls30 ws49b">your commands need to implement ad<span class="_ _e"></span>dition<span class="ls71 ws404">al methods or accept additional argu-</span></div><div class="t m0 x35 h15 ya0d ff4 fsb fc3 sc0 ls51 wsd2">ments in the future, you can <span class="ls42 wsc4">start by adding th<span class="_ _e"></span>em to </span></div><div class="t m5 xee h24 y13bf ffd fsc fc3 sc0 lsa0 ws0">Command</div><div class="t m0 x123 h15 ya0d ff4 fsb fc3 sc0 ls3e ws6bd">, and your IDE can help</div><div class="t m0 x35 h15 ya0e ff4 fsb fc3 sc0 ls36 ws35">you find the places that need to be updated. It’s a handy way to develop. </div><div class="t m0 x19 h26 yc6b ffc fs15 fc2 sc0 ls183 ws5da">8<span class="_ _0"></span>.<span class="_ _0"></span>4<span class="_ _0"></span>.<span class="_ _1d"></span>2<span class="_ _5f"> </span>A final check on your inheritance work</div><div class="t m0 x35 h15 yeb ff4 fsb fc3 sc0 ls2f ws570">You’ve successfully used inhe<span class="ls42 ws895">ritance to make your use of composition a bit more robust.</span></div><div class="t m0 x35 h15 y93 ff4 fsb fc3 sc0 ls71 ws83">Check one more time if your code passes <span class="ls80 wsff">Metz’s tests for good use of inhe<span class="_ _e"></span>ritance:</span></div><div class="t m0 x8b h29 y13c0 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x48 h15 y152 ff3 fsb fc3 sc0 ls3b ws896">Commands have a shallow, narrow hiera<span class="_ _e"></span>rchy.<span class="ff4 ls2f ws5ab"> Seven command classes wide, each</span></div><div class="t m0 x48 h15 y1253 ff4 fsb fc3 sc0 ls47 ws38">one level of hierarchy deep.</div><div class="t m0 x8b h29 y13c1 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x48 h15 y154 ff3 fsb fc3 sc0 ls38 ws897">Commands don’t know about other objects.<span class="ff4 ls5e ws898"> They do make use of the database</span></div><div class="t m0 x48 h15 y13c2 ff4 fsb fc3 sc0 ls3b ws21e">connection object, but that<span class="_ _e"></span>’s a piece of <span class="ls20 ws621">global state that adheres to a database</span></div><div class="t m0 x48 h15 y13c3 ff4 fsb fc3 sc0 lsbc ws0">interface.</div><div class="t m0 x8b h29 y13c4 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x48 h15 ycb ff3 fsb fc3 sc0 ls6f ws7c3">Commands use or<span class="_ _e"></span> specialize all of the <span class="ls1e wsb8">functionality from their superclass.<span class="ff4 ls6 ws0"> </span></span></div><div class="t m5 x105 h24 y13c5 ffd fsc fc3 sc0 lsa0 ws0">Command</div><div class="t m0 xd5 h15 ycb ff4 fsb fc3 sc0 ls36 wsb2"> is an</div><div class="t m0 x48 h15 y28f ff4 fsb fc3 sc0 ls20 ws51">abstract class with <span class="ls1e ws16">no behavior itself.</span></div><div class="t m0 x35 h15 y5b2 ff4 fsb fc3 sc0 ls20 ws2dd">Excellent. You’re using inheritance where <span class="_ _e"></span>it<span class="ls71 ws1cc"> makes sense and adds value, without forc-</span></div><div class="t m0 x35 h15 ycf ff4 fsb fc3 sc0 ls4b ws7ce">ing that structure<span class="_ _e"></span> onto things that don’t need i<span class="_ _e"></span>t. This kind of critical examin<span class="_ _e"></span>ation is</div><div class="t m0 x35 h15 y5b3 ff4 fsb fc3 sc0 ls31 ws25">valuable as you continue to write and refactor code.</div><div class="t m0 x83 h15 y5b4 ff4 fsb fc3 sc0 ls31 ws899"> Continue on to the next chapter to le<span class="ls2e ws89a">arn how to keep cla<span class="ls71 ws243">sses maintainable by</span></span></div><div class="t m0 x35 h15 yfd ff4 fsb fc3 sc0 ls25 ws1a">keeping them small. </div><div class="t m0 x35 h1f y13c6 ffc fs13 fc2 sc0 lsa9 ws0">Summary</div><div class="t m0 x8b h29 y13c7 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x48 h15 y13c8 ff4 fsb fc3 sc0 ls3d ws377">Use inheritance to represent true is-a <span class="ls36 wsd6">relationships (good for specialization of</span></div><div class="t m0 x48 h15 y13c9 ff4 fsb fc3 sc0 ls3a ws0">behavior).</div><div class="t m0 x8b h29 y13ca ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x48 h15 y13cb ff4 fsb fc3 sc0 ls31 ws25">Use composition for has-a relation<span class="ls71 wsd4">ships (good for reuse of code).</span></div><div class="t m0 x8b h29 y13cc ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x48 h15 yef8 ff4 fsb fc3 sc0 ls42 ws32">Method resolution order is key to k<span class="_ _e"></span><span class="ls1e ws16">eeping multiple inhe<span class="_ _0"></span><span class="ls36">ritance straight.</span></span></div><div class="t m0 x8b h29 y13cd ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x48 h15 y13ce ff4 fsb fc3 sc0 ls34 ws22">Abstract base classes provide interfac<span class="ls5b ws60">e-like cont<span class="_ _e"></span>rol and safety in Python.</span></div><div class="c x6d y13cf wa hf0"><div class="t m0 x12e h14 y10e1 ff12 fs7 fcb sc0 lsd5 ws2a6">Always passes </div><div class="t m0 x12e h14 y65d ff12 fs7 fcb sc0 ls6 ws3a5">data to execute</div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
