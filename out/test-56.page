<div id="pf38" class="pf w0 h0" data-page-no="38"><div class="pc pc38 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg38.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">32</div><div class="t m0 x3 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 x29 h2c y1d0 ffb fs19 fcb sc0 lsf6 ws0">HAPTER</div><div class="t m0 x47 h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 2</div><div class="t m0 xca h2d y80 ffa fs7 fcb sc0 ls6 ws0">Separation of concerns</div><div class="t m0 x44 h26 y1e4 ffc fs15 fc2 sc0 ls110 ws0">C<span class="_ _e"></span>la<span class="_ _e"></span>s<span class="_ _e"></span>s<span class="_ _e"></span>es<span class="_ _4a"></span>2.2.2</div><div class="t m0 x44 h15 y140 ff4 fsb fc3 sc0 ls120 ws0">Cod<span class="_ _e"></span>e is mad<span class="_ _e"></span>e up of<span class="_ _e"></span> behav<span class="_ _e"></span>iors a<span class="_ _e"></span>nd dat<span class="_ _e"></span>a that<span class="_ _e"></span> accum<span class="_ _e"></span>ulate o<span class="_ _e"></span>ver ti<span class="_ _e"></span>me. Yo<span class="_ _e"></span>u’ve s<span class="_ _e"></span>een ho<span class="_ _e"></span>w to</div><div class="t m0 x44 h15 y141 ff4 fsb fc3 sc0 ls20 ws251">extract behaviors into functions that accept <span class="ls66 wsb3">input data and return a result. Over ti<span class="_ _0"></span>me,</span></div><div class="t m0 x44 h15 y142 ff4 fsb fc3 sc0 ls42 ws3af">you might start to notice that <span class="_ _e"></span>several func<span class="ls20 ws235">tions work in tandem frequently.<span class="_ _e"></span> If you’re</span></div><div class="t m0 x44 h15 y143 ff4 fsb fc3 sc0 ls2f ws3b0">passing the result of one function to anothe<span class="ls7d ws3b1">r to another often, or if several of your</span></div><div class="t m0 x44 h15 y144 ff4 fsb fc3 sc0 lsac ws3b2">function<span class="_ _0"></span>s require th<span class="ls42 ws2e3">e same input data, it’s possible a <span class="ff3 ls31 ws0">class</span><span class="ls25 ws7d"> is <span class="_ _0"></span>waiting to be extracted</span></span></div><div class="t m0 x44 h15 y145 ff4 fsb fc3 sc0 ls42 ws26e">from your code.</div><div class="t m0 x32 h15 y146 ff4 fsb fc3 sc0 ls2f wse2"> Classes are templates of closely related <span class="ls51 wsbf">behaviors and data. You can use classes <span class="_ _0"></span>to</span></div><div class="t m0 x44 h15 y24e ff4 fsb fc3 sc0 ls3d ws0">create <span class="_ _e"></span><span class="ff3 ls2d">objects</span><span class="ls42 ws2f3">, or instances of the class that have <span class="ls51 ws268">the data and behaviors defined in the</span></span></div><div class="t m0 x44 h15 yb6 ff4 fsb fc3 sc0 ls34 ws2c6">class. The data becomes the <span class="ff3 ls30 ws0">state</span><span class="ls5e ws32a"> of the object; in Python, the<span class="_ _e"></span> data composes the <span class="ff3 lsb1 ws0">attri-</span></span></div><div class="t m0 x44 h15 y8b ff3 fsb fc3 sc0 ls5e ws0">butes<span class="ff4 ls3d ws3b3"> of the object because the data is </span><span class="ls25">attributed<span class="ff4 ls1c ws21d"> to the object in question. The behav-</span></span></div><div class="t m0 x44 h15 y26c ff4 fsb fc3 sc0 ls6f ws3b4">iors become <span class="ff3 ls51 ws0">methods</span><span class="ls42 ws26e">, which are special <span class="_ _e"></span>functions that <span class="ls51 ws43">receive the object instance as an</span></span></div><div class="t m0 x44 h15 y26d ff4 fsb fc3 sc0 ls38 ws1b8">additional argument <span class="ls67 ws3b5">(ubiqu<span class="_ _0"></span>itously named </span></div><div class="t m5 x12 h24 y4f6 ffd fsc fc3 sc0 lsa0 ws0">self</div><div class="t m0 xeb h15 y26d ff4 fsb fc3 sc0 ls121 ws0"> b<span class="_ _3e"></span>y<span class="_ _20"></span> P<span class="_ _3e"></span>y<span class="_ _3e"></span>t<span class="_ _3e"></span>h<span class="_ _3e"></span>o<span class="_ _3e"></span>n<span class="_ _20"></span> d<span class="_ _3e"></span>e<span class="_ _3e"></span>v<span class="_ _3e"></span>e<span class="_ _3e"></span>l<span class="_ _3e"></span>o<span class="_ _3e"></span>p<span class="_ _3e"></span>e<span class="_ _20"></span>r<span class="_ _3e"></span>s<span class="_ _3e"></span>)<span class="_ _3e"></span>.<span class="_ _3e"></span> T<span class="_ _3e"></span>h<span class="_ _20"></span>i<span class="_ _3e"></span>s<span class="_ _3e"></span> a<span class="_ _3e"></span>l<span class="_ _3e"></span>l<span class="_ _20"></span>o<span class="_ _3e"></span>w<span class="_ _3e"></span>s</div><div class="t m0 x44 h15 y414 ff4 fsb fc3 sc0 ls34 ws2d3">the methods to access or chan<span class="ls3b ws3b6">ge the instance’s state. Together, the at<span class="_ _e"></span>tributes and</span></div><div class="t m0 x44 h15 y14d ff4 fsb fc3 sc0 lsc5 ws381">methods are <span class="_ _0"></span>the <span class="ff3 ls2c ws0">members</span><span class="ls42 ws26e"> of <span class="_ _0"></span>a class.</span></div><div class="t m0 x32 h15 y14e ff4 fsb fc3 sc0 ls44 ws3b7"> Classes in many languages contain a <span class="ff3 ls6b ws0">constructor</span><span class="ls42 ws3b8">, which is a special method used to cre-</span></div><div class="t m0 x44 h15 y417 ff4 fsb fc3 sc0 ls38 ws3b9">ate an instance of the class. In Python, the </div><div class="t m5 x64 h24 y4f7 ffd fsc fc3 sc0 lsa0 ws0">__init__</div><div class="t m0 x54 h15 y417 ff4 fsb fc3 sc0 ls79 ws3ba"> method (an init<span class="_ _e"></span>ializer) is more com-</div><div class="t m0 x44 h15 y418 ff4 fsb fc3 sc0 ls71 wsd4">monly used. The class instance has already b<span class="_ _e"></span>een constructed when </div><div class="t m5 x77 h24 y4f8 ffd fsc fc3 sc0 lsa0 ws0">__init__</div><div class="t m0 xec h15 y418 ff4 fsb fc3 sc0 ls3a ws28"> is called,</div><div class="t m0 x44 h15 yc2 ff4 fsb fc3 sc0 ls36 wsab">and the method sets up the initial state of the instance. </div><div class="t m5 x2d h24 y4f9 ffd fsc fc3 sc0 lsa0 ws0">__init__</div><div class="t m0 x70 h15 yc2 ff4 fsb fc3 sc0 ls20 wsac"> accepts at least one</div><div class="t m0 x44 h15 y419 ff4 fsb fc3 sc0 ls44 ws114">argument, which most Py<span class="ls30 ws22e">thon developers call </span></div><div class="t m5 x30 h24 y4fa ffd fsc fc3 sc0 lsa0 ws0">self</div><div class="t m0 x52 h15 y419 ff4 fsb fc3 sc0 ls3b ws240">, that is a reference <span class="_ _e"></span>to the instance</div><div class="t m0 x44 h15 y41a ff4 fsb fc3 sc0 ls42 ws3b8">that’s been created. The method commonly <span class="ls2d ws3bb">accepts additional ar<span class="ls2f ws3bc">bitrary arguments that</span></span></div><div class="t m0 x44 h15 yf3 ff4 fsb fc3 sc0 ls3d ws333">are used to set the initial state. The syntax <span class="ls2d ws301">for creating a class instance in Python looks</span></div><div class="t m0 x44 h15 y34f ff4 fsb fc3 sc0 ls30 ws3bd">a lot like using a function: you use the class <span class="_ _e"></span><span class="ls34 ws3be">name instead of the function name, and the</span></div><div class="t m0 x44 h15 y350 ff4 fsb fc3 sc0 ls34 ws9f">arguments are the ar<span class="ls38 ws1f4">guments (excluding </span></div><div class="t m5 xa1 h24 y4fb ffd fsc fc3 sc0 lsa0 ws0">self</div><div class="t m0 x6c h15 y350 ff4 fsb fc3 sc0 ls79 ws3bf">) to </div><div class="t m5 x52 h24 y4fb ffd fsc fc3 sc0 lsa0 ws0">__init__</div><div class="t m0 xe1 h15 y350 ff4 fsb fc3 sc0 ls6 ws0">.</div><div class="t m0 x32 h15 y351 ff4 fsb fc3 sc0 ls71 ws3c0"> Have another look at the functions you de<span class="ls34">composed from Rock, Paper, Scissors (list-</span></div><div class="t m0 x44 h15 y4fc ff4 fsb fc3 sc0 ls6 ws3c1">ing 2.3). What do<span class="_ _e"></span> you notice? All of the beha<span class="ls30 ws3c2">vior and data are based on the three options</span></div><div class="t m0 x44 h15 y41e ff4 fsb fc3 sc0 ls34 ws3c3">and which one each player chooses. Some of<span class="ls71 ws1c0"> the functions use the same data;<span class="_ _e"></span> these</span></div><div class="t m0 x44 h15 y420 ff4 fsb fc3 sc0 ls2d ws1d">things seem closely related. Maybe a <span class="_ _0"></span>class for playing this <span class="_ _0"></span>game is waiting to be born.</div><div class="t m0 x44 h3b y4fd ffd fs18 fc3 sc0 lsb2 ws0">import<span class="_"> </span>random</div><div class="t m0 x44 h3b y4fe ffd fs18 fc3 sc0 lsb2 ws0">OPTIONS<span class="_"> </span>=<span class="_"> </span>[&apos;rock&apos;,<span class="_"> </span>&apos;paper&apos;,<span class="_"> </span>&apos;scissors&apos;]</div><div class="t m0 x44 h3b y4ff ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>get_computer_choice():</div><div class="t m0 xae h3b y500 ffd fs18 fc3 sc0 lsb2 ws0">return<span class="_"> </span>random.choice(OPTIONS)</div><div class="t m0 x44 h3b y501 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>get_human_choice():</div><div class="t m0 x99 h3b y502 ffd fs18 fc3 sc0 lsb2 ws0">&apos;))<span class="_ _42"></span>choice:<span class="_ _43"></span>of<span class="_"> </span>your<span class="_ _44"></span>the<span class="_"> </span>number<span class="_ _45"></span>int(input(&apos;Enter<span class="_ _44"></span>=<span class="_ _43"></span>choice_number</div><div class="t m0 x6a h3b y503 ffd fs18 fc3 sc0 lsb2 ws0">1]<span class="_ _46"></span>-<span class="_ _47"></span>OPTIONS[choice_number<span class="_ _48"></span>return</div><div class="t m0 x37 h20 y504 ffb fs7 fc4 sc0 ls6 ws0">Revisiting the Rock, Paper, Scissors code<span class="_ _4b"></span>Listing<span class="_"> </span>2.3</div><div class="c x1f y505 w17 h5b"><div class="t m0 x43 h14 y506 ff12 fs7 fcb sc0 ls122 ws0">Fu<span class="ff13 ls6">n</span><span class="lse4">ctio<span class="ff13 ls6">n</span><span class="ls105 ws325">s use OPTIONS </span></span></div><div class="t m0 x43 h14 y507 ff12 fs7 fcb sc0 lse0 ws3c4">to dete<span class="ff13 ls123 ws0">rm<span class="ff12 ls6">i<span class="ff13">n</span><span class="lsed ws3c5">e the choices </span></span></span></div><div class="t m0 x43 h14 y508 ff12 fs7 fcb sc0 lsd4 ws205">of the playe<span class="ff13 ls6 ws0">r<span class="ff12 ls10e">s.</span></span></div></div><div class="t m0 x44 h3b y509 ffd fs18 fcd sc0 ls6 ws0">def</div><div class="t m3 x0 h3a y509 ff8 fs18 fcd sc0 ls6 ws0"> </div><div class="t m0 xae h3b y509 ffd fs18 fcd sc0 ls6 ws0">print_options():</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
