<div id="pf1c" class="pf w0 h0" data-page-no="1c"><div class="pc pc1c w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg1c.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">4</div><div class="t m0 xa8 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 xb6 h2c y1d0 ffb fs19 fcb sc0 ls8b ws0">HAPTER</div><div class="t m0 x1f h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 1</div><div class="t m0 xb3 h2d y80 ffa fs7 fcb sc0 ls6 ws0">The bigger picture</div><div class="t m0 x44 h15 y40 ff4 fsb fc3 sc0 ls3d ws2c">Whatever the case, you’ll want to have a suite of utilities at your disposal so you can be</div><div class="t m0 x44 h15 y41 ff4 fsb fc3 sc0 ls5e ws14a">prepared to make sense of it<span class="_ _e"></span>.</div><div class="t m0 x32 h15 y42 ff4 fsb fc3 sc0 ls44 ws14b"> By reading this book, you’ll gain experience and familiarity wi<span class="_ _0"></span>th how complex</div><div class="t m0 x44 h15 y43 ff4 fsb fc3 sc0 ls38 ws26">software systems work so that you can use <span class="ls7d ws12a">that expertise to improve <span class="_ _e"></span>upon them. You’ll</span></div><div class="t m0 x44 h15 y44 ff4 fsb fc3 sc0 ls2d wsbc">be learning how to envision these kinds of<span class="ls38 wsc5"> systems before building them to m<span class="_ _e"></span>inimize</span></div><div class="t m0 x44 h15 y45 ff4 fsb fc3 sc0 ls3a ws14c">surprises and risks. Once you’re through wi<span class="ls5e ws14d">th this book, you should be able to dive</span></div><div class="t m0 x44 h15 y46 ff4 fsb fc3 sc0 ls2d ws14e">headlong into things that you’re confus<span class="ls71 ws14f">ed or anxious about now with a <span class="_ _0"></span>newfound</span></div><div class="t m0 x44 h15 y47 ff4 fsb fc3 sc0 ls42 ws0">enthusiasm.</div><div class="t m0 x32 h15 y48 ff4 fsb fc3 sc0 ls8d ws150"> You’ll learn about p<span class="_ _e"></span>utting the complexi<span class="_ _e"></span>ties<span class="ls1c ws151"> of your code into easy-to-understand,</span></div><div class="t m0 x44 h15 y49 ff4 fsb fc3 sc0 ls1f ws152">reusable wrappers. Y<span class="_ _0"></span>ou’ll make sure your <span class="ls36 ws153">code is neatl<span class="_ _0"></span>y organized by its purpose so</span></div><div class="t m0 x44 h15 y4a ff4 fsb fc3 sc0 ls36 ws154">you can remember what’s what. These tool<span class="ls25 ws155">s will h<span class="_ _0"></span>elp you help <span class="ls34 ws138">yourself and become</span></span></div><div class="t m0 x44 h15 y4b ff4 fsb fc3 sc0 ls2f ws23">more productive in your projects, both new and old!</div><div class="t m0 x32 h15 y4c ff4 fsb fc3 sc0 ls30 ws156"> I’m going to use Python as <span class="_ _e"></span>the vehicle fo<span class="ls48 ws157">r the examples in this book. Python has</span></div><div class="t m0 x44 h15 y4d ff4 fsb fc3 sc0 ls51 wsa9">been my favorite programming language fo<span class="ws158">r some time now, and <span class="_ _e"></span>I hope it’s one of</span></div><div class="t m0 x44 h15 y4e ff4 fsb fc3 sc0 ls20 wsc7">yours too. If you haven’t had a chance to get to kno<span class="_ _e"></span>w Python much yet, take the time</div><div class="t m0 x44 h15 y4f ff4 fsb fc3 sc0 ls1b ws159">to do that first. <span class="ff3 ls1e ws15a">The Quick Python Book</span><span class="ls2d ws15b">, third edition, by Naom<span class="ls44 ws15c">i Ceder (Manning, 2018),</span></span></div><div class="t m0 x44 h15 y50 ff4 fsb fc3 sc0 ls31 ws25">is a great place to get started.</div><div class="t m0 x32 h15 y51 ff4 fsb fc3 sc0 ls3d ws13d"> All examples in this book are<span class="_ _e"></span> written with<span class="ls31 ws15d"> a recent version of Python 3 in mind. I</span></div><div class="t m0 x44 h15 y52 ff4 fsb fc3 sc0 ls71 ws15e">strongly recommend you install Python 3 be<span class="ls2f ws15f">fore proceeding. See the appendix if you</span></div><div class="t m0 x44 h15 y53 ff4 fsb fc3 sc0 ls2f ws26">need some guidance on <span class="ls51 ws47">the installation process.</span></div><div class="t m0 x44 h15 y1d1 ff4 fsb fc3 sc0 ls71 ws160">If you need a bit of convincing about why Python is a good choice of language, read</div><div class="t m0 x44 h15 y1d2 ff4 fsb fc3 sc0 ls71 wsd4">on a bit further.</div><div class="t m0 x42 h1f y1d3 ffc fs13 fc2 sc0 ls84 ws161">1<span class="_ _0"></span>.<span class="_ _1d"></span>1<span class="_ _21"> </span>Python is an enterprise language</div><div class="t m0 x44 h15 y1d4 ff4 fsb fc3 sc0 ls3e ws162">The Python programming language has been<span class="_ _0"></span> treated historically as a scri<span class="_ _0"></span>pting lan-</div><div class="t m0 x44 h15 y1d5 ff4 fsb fc3 sc0 ls48 ws163">guage. Developers perceived its perfo<span class="_ _e"></span>rma<span class="ls25 ws164">nce and applicability negati<span class="_ _0"></span>vely, choosing</span></div><div class="t m0 x44 h15 y1d6 ff4 fsb fc3 sc0 ls1c ws165">other languages for their enterprise software<span class="ls38 ws166"> needs. Python was used for small data-</span></div><div class="t m0 x44 h15 y1d7 ff4 fsb fc3 sc0 ls3d ws13d">processing jobs or personal <span class="ls30 ws167">tools, but enterprise so<span class="_ _e"></span>ftware <span class="ls34 ws11f">was still a job for languages</span></span></div><div class="t m0 x44 h15 y1d8 ff4 fsb fc3 sc0 ls3b ws70">like Java, C, or SAS.</div><div class="c x44 y1d9 w2 h2e"><div class="t m0 xb7 h2f y1da ffb fs15 fc2 sc0 ls8e ws168">The great <span class="_ _0"></span>divide</div><div class="t m0 xb7 h30 y1db fff fsc fc3 sc0 ls8f ws169">Are you using Python 2 or Python 3? A siza<span class="lse ws16a">ble number <span class="_ _e"></span>of people are still using Python</span></div><div class="t m0 xb7 h30 y1dc fff fsc fc3 sc0 ls90 ws16b">2, even though Python 3 ca<span class="_ _e"></span>me onto the scene a while ag<span class="_ _e"></span>o—<span class="ff10 ls91 ws0">quit<span class="_ _0"></span>e<span class="fff ls92 ws16c"> a while ago, in</span></span></div><div class="t m0 xb7 h30 y1dd fff fsc fc3 sc0 ls93 ws16d">2008. To put th<span class="_ _0"></span>at in perspectiv<span class="_ _0"></span>e, Flo Rida’s “Low” and<span class="_ _0"></span> Alicia Keys’ “No <span class="_ _0"></span>One” were at</div><div class="t m0 xb7 h30 y1de fff fsc fc3 sc0 ls94 ws16e">the top of the charts that year.</div><div class="t m0 xb7 h30 y1df fff fsc fc3 sc0 ls95 ws16f">Python 3 brought with it seve<span class="_ _e"></span>ral backward-incompatible change<span class="_ _e"></span>s whose effects are</div><div class="t m0 xb7 h30 y1e0 fff fsc fc3 sc0 ls96 ws170">still being felt today. Many <span class="ls97 ws171">of these changes hav<span class="lsc ws172">e been backported to later versions</span></span></div><div class="t m0 xb7 h30 y1e1 fff fsc fc3 sc0 ls98 ws173">of Python 2 to ea<span class="_ _e"></span>se the transition. Developers on large proj<span class="_ _e"></span>ects using Python 2 have</div><div class="t m0 xb7 h30 y1e2 fff fsc fc3 sc0 ls99 ws174">some hurdles to ov<span class="_ _0"></span>ercome, but<span class="_ _0"></span> some people <span class="ls9a ws175">seem to be taking their <span class="_ _0"></span>Python 2 soft-</span></div><div class="t m0 xb7 h30 y1e3 fff fsc fc3 sc0 ls9b ws176">ware to the grave with them.</div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
