<div id="pfce" class="pf w0 h0" data-page-no="ce"><div class="pc pcce w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bgce.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">182</div><div class="t m0 x92 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 xd3 h2c y1d0 ffb fs19 fcb sc0 ls158 ws0">HAPTER</div><div class="t m0 xe4 h2b y1cf ffb fs18 fcb sc0 ls1bb ws730"> 10</div><div class="t m0 x2a h2d y80 ffa fs7 fcb sc0 ls6 ws0">Achieving loose coupling</div><div class="t m0 x44 h15 y40 ff4 fsb fc3 sc0 ls71 ws160">Take another look at the main procedure of<span class="ls34"> your query cleaner in the following list-</span></div><div class="t m0 x44 h15 y41 ff4 fsb fc3 sc0 ls42 ws27b">ing. You achieve each transform on the quer<span class="ls1c">y by calling a f<span class="_ _e"></span>unction to get a new query.</span></div><div class="t m0 x44 h15 y42 ff4 fsb fc3 sc0 ls1c ws10">Each of these is a me<span class="ls31 ws25">ssage you’re sending.</span></div><div class="t m0 x44 h3b y2c8 ffd fs18 fc3 sc0 ls69 ws0">if<span class="_"> </span>__name__<span class="_"> </span>==<span class="_"> </span>&apos;__main__&apos;:</div><div class="t m0 xae h3b y2c9 ffd fs18 fc3 sc0 ls69 ws0">search_query<span class="_"> </span>=<span class="_"> </span>input(&apos;Enter<span class="_"> </span>your<span class="_"> </span>search<span class="_"> </span>query:<span class="_"> </span>&apos;)</div><div class="t m0 xae h3b y2ca ffd fs18 fc3 sc0 ls69 ws0">search_query<span class="_"> </span>=<span class="_"> </span>remove_spaces(search_query)</div><div class="t m0 xae h3b y2cb ffd fs18 fc3 sc0 ls69 ws0">search_query<span class="_"> </span>=<span class="_"> </span>remove_quotes(search_query)</div><div class="t m0 xae h3b y2cc ffd fs18 fc3 sc0 ls69 ws0">search_query<span class="_"> </span>=<span class="_"> </span>normalize(search_query)</div><div class="t m0 xae h3b y2cd ffd fs18 fc3 sc0 ls69 ws0">print(f&apos;Running<span class="_"> </span>a<span class="_"> </span>search<span class="_"> </span>for<span class="_"> </span>&quot;{search_query}&quot;&apos;)</div><div class="t m0 x44 h15 y10b4 ff4 fsb fc3 sc0 ls5e ws32a">What you’ve written achieves the task—c<span class="_ _e"></span><span class="ls20 ws40a">leaning the query—but how do the messages</span></div><div class="t m0 x44 h15 y166a ff4 fsb fc3 sc0 ls20 ws1ca">feel to you? Does calling the various functi<span class="ls71 ws1cb">ons from the <span class="_ _e"></span>search mo<span class="lsb1 ws395">dule fe<span class="_ _0"></span>el like a lot</span></span></div><div class="t m0 x44 h15 y166b ff4 fsb fc3 sc0 ls71 ws21a">of hoops to jump through? If I saw this co<span class="ws296">de, I might say to myself, “I just <span class="_ _e"></span>want the</span></div><div class="t m0 x44 h15 y166c ff4 fsb fc3 sc0 ls1c wsf2">cleaned-up query. I don’t ca<span class="ls31 ws238">re how!” Going through the paces of calling <span class="_ _0"></span>each function</span></div><div class="t m0 x44 h15 y166d ff4 fsb fc3 sc0 ls38 ws26">is tedious, especially if you’re cleaning queries throughout your code.</div><div class="t m0 x32 h15 y166e ff4 fsb fc3 sc0 ls36 ws4fc"> Think about this in terms of the message <span class="_ _0"></span>or messages you’d <span class="ff3 ls7d ws0">like</span><span class="ls1e ws329"> to send. A cleaner</span></div><div class="t m0 x44 h15 y945 ff4 fsb fc3 sc0 ls31 ws21c">approach might be to send a single message<span class="ls30 ws22e">: “Here’s m<span class="_ _e"></span>y query; clean it please.” What</span></div><div class="t m0 x44 h15 y947 ff4 fsb fc3 sc0 ls3a ws28">approach might you take to achieve this?</div><div class="t m0 xbc h3d y166f ffb fs1e fca sc0 ls6 ws0">1</div><div class="t m0 x87 h15 y306 ff4 fsb fc3 sc0 ls3a ws74">Combine the query-cleaning <span class="ls20 ws2f0">functions int<span class="_ _e"></span>o a single fu<span class="ls30 ws156">nction to remove spaces</span></span></div><div class="t m0 x87 h15 y307 ff4 fsb fc3 sc0 ls5e ws57">and quotes and normalize casing.</div><div class="t m0 xbc h3d y1670 ffb fs1e fca sc0 ls6 ws0">2</div><div class="t m0 x87 h15 y10c0 ff4 fsb fc3 sc0 ls42 ws32">Wrap the existing function calls in an<span class="ls36 ws35">other function you can call anywhere.</span></div><div class="t m0 xbc h3d y1671 ffb fs1e fca sc0 ls6 ws0">3</div><div class="t m0 x87 h15 yde4 ff4 fsb fc3 sc0 ls1c ws10">Use a class to encapsulate the query-cle<span class="_ _e"></span>aning logic.</div><div class="t m0 x44 h15 y1672 ff4 fsb fc3 sc0 ls1c ws217">Any of these could work. Because separation of concerns is generally a goo<span class="_ _e"></span>d idea,</div><div class="t m0 x44 h15 y5e8 ff4 fsb fc3 sc0 ls30 ws36">option 1 might not be the best choice becaus<span class="ls48 ws39">e it combines several concerns into a sin-</span></div><div class="t m0 x44 h15 yde9 ff4 fsb fc3 sc0 ls20 ws202">gle function. Wrapping the ex<span class="ls6c ws8a">isting functions into anothe<span class="ls25 ws25b">r (option 2) would<span class="_ _0"></span> keep the</span></span></div><div class="t m0 x44 h15 y1673 ff4 fsb fc3 sc0 ls9e ws91b">concerns separate whil<span class="_ _0"></span>e providing a single entr<span class="_ _0"></span>y point for the cleanin<span class="_ _0"></span>g behavior,</div><div class="t m0 x44 h15 y203 ff4 fsb fc3 sc0 ls1e ws370">which is good. Encapsulating that logic fu<span class="ls71 ws2e5">rther into a class (option 3) could make</span></div><div class="t m0 x44 h15 y1674 ff4 fsb fc3 sc0 ls71 wsd4">sense later on, if you need the cleaning lo<span class="lsc5 ws3ab">gic to maintain information be<span class="_ _0"></span>tween steps.</span></div><div class="t m0 x32 h15 y13f4 ff4 fsb fc3 sc0 ls1c ws21d"> Try refactoring the search module to ma<span class="ls3a ws5a1">ke each transform function private, pro-</span></div><div class="t m0 x44 h15 y1675 ff4 fsb fc3 sc0 ls3a wsc3">viding a </div><div class="t m5 x97 h24 y1676 ffd fsc fc3 sc0 lsa0 ws0">clean_query(<span class="_ _e"></span>query)</div><div class="t m0 xe4 h15 y1167 ff4 fsb fc3 sc0 ls42 ws2a0"> function that performs all the cleaning and <span class="_ _e"></span>returns the</div><div class="t m0 x44 h15 y1677 ff4 fsb fc3 sc0 ls1b ws40">cleaned query. Com<span class="_ _e"></span>e back here and check <span class="_ _e"></span><span class="ls25 ws1a">your work against the following listi<span class="_ _0"></span>ng.</span></div><div class="t m0 x44 h3b ydf1 ffd fs18 fc3 sc0 lsb2 ws0">import<span class="_"> </span>re</div><div class="t m0 x44 h3b y1678 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>_remove_spaces(query):</div><div class="t m0 xae h3b ybaf ffd fs18 fc3 sc0 lsb2 ws0">query<span class="_"> </span>=<span class="_"> </span>query.strip()</div><div class="t m0 xae h3b ybb0 ffd fs18 fc3 sc0 lsb2 ws0">query<span class="_"> </span>=<span class="_"> </span>re.sub(r&apos;\s+&apos;,<span class="_"> </span>&apos;<span class="_"> </span>&apos;,<span class="_"> </span>query)</div><div class="t m0 xae h3b ybb1 ffd fs18 fc3 sc0 lsb2 ws0">return<span class="_"> </span>query</div><div class="t m0 x18 h20 y561 ffb fs7 fc4 sc0 ls6 ws0">Calling functions from a module<span class="_ _6b"></span>Listing<span class="_"> </span>10.5</div><div class="t m0 x18 h20 y1679 ffb fs7 fc4 sc0 ls6 ws0">Simplifying a shared interface<span class="_ _106"></span>Listing<span class="_"> </span>10.6</div><div class="c x43 y167a wca h141"><div class="t m0 x14b h14 y167b ff12 fs7 fcb sc0 lsd2 ws38c">Tells the sea<span class="ff13 ls6 ws0">r<span class="ff12 ls117">ch </span>m</span><span class="lsdc ws2ac">odule to <span class="ff13 ls6 ws0">r<span class="ff12">e</span>m</span><span class="ls181 ws7e9">ove spaces</span></span></div></div><div class="c x55 y167c w69 h142"><div class="t m0 x2 h14 y167d ff12 fs7 fcb sc0 ls11a ws91c">Tells the sea<span class="ff13 ls6 ws0">r<span class="ff12">ch <span class="_ _1c"></span><span class="ff13">m<span class="ff12 lsda">odule </span></span></span></span></div><div class="t m0 x2 h14 y167e ff12 fs7 fcb sc0 lsef ws0">to <span class="ff13 ls6">r<span class="ff12">e</span>m</span><span class="lsfd ws310">ove quotes</span></div></div><div class="c x50 y167f w23 h143"><div class="t m0 x12e h14 y7c7 ff12 fs7 fcb sc0 lsff ws38b">Tells the sea<span class="ff13 ls6 ws0">r<span class="ff12 ls10c">ch </span>m<span class="ff12 lsda">odule </span></span></div><div class="t m0 x12e h14 yb4a ff12 fs7 fcb sc0 ls145 ws0">to <span class="ff13 ls6">n<span class="ff12">o</span><span class="ls123">rm</span></span><span class="lsd5 ws2a6">alize the casi</span><span class="ff13 ls6">n<span class="ff12">g</span></span></div></div><div class="c xd3 y1680 wa0 hbb"><div class="t m0 x12e h14 y387 ff12 fs7 fcb sc0 ls6 ws0">T<span class="ff13">r</span>a<span class="ff13">n</span><span class="ls119">sfo<span class="ff13 ls103">rm</span><span class="ls10e ws55a">s a</span></span><span class="ff13">r</span>e <span class="ff13">m</span><span class="ls14e ws74a">ade p</span><span class="ff13">r</span><span class="lse0">ivate </span></div><div class="t m0 x12e h14 y388 ff12 fs7 fcb sc0 ls13c ws45b">because they’<span class="ff13 ls6 ws0">r<span class="ff12 ws317">e u</span>n<span class="ff12 ls13e">de<span class="_ _0"></span><span class="ff13 ls6">r<span class="ff12 ls10c">lyi</span>n<span class="ff12 lse1">g </span></span></span></span></div><div class="t m0 x12e h14 y389 ff12 fs7 fcb sc0 lsdc ws3df">details of clea<span class="ff13 ls6 ws0">n<span class="ff12">i</span>n<span class="ff12 lse1">g.</span></span></div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
