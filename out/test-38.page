<div id="pf26" class="pf w0 h0" data-page-no="26"><div class="pc pc26 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg26.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">14</div><div class="t m0 xa8 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 xb6 h2c y1d0 ffb fs19 fcb sc0 ls8b ws0">HAPTER</div><div class="t m0 x1f h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 1</div><div class="t m0 xb3 h2d y80 ffa fs7 fcb sc0 ls6 ws0">The bigger picture</div><div class="t m0 x44 h3b y2c2 ffd fs18 fc3 sc0 lsb2 ws0">&gt;&gt;&gt;<span class="_"> </span>us_capitals_by_state<span class="_"> </span>=<span class="_"> </span>{</div><div class="t m0 xae h3b y2c3 ffd fs18 fc3 sc0 lsb2 ws0">&apos;Alabama&apos;:<span class="_"> </span>&apos;Montgomery&apos;,</div><div class="t m0 xae h3b y2c4 ffd fs18 fc3 sc0 lsb2 ws0">&apos;Alaska&apos;:<span class="_"> </span>&apos;Juneau&apos;,</div><div class="t m0 xae h3b y2c5 ffd fs18 fc3 sc0 lsb2 ws0">...</div><div class="t m0 x44 h3b y2c6 ffd fs18 fc3 sc0 ls6 ws0">}</div><div class="t m0 x44 h3b y2c7 ffd fs18 fc3 sc0 lsb2 ws0">&gt;&gt;&gt;<span class="_"> </span>capitals<span class="_"> </span>=<span class="_"> </span>us_capitals_by_state.values()</div><div class="t m0 x44 h3b y2c8 ffd fs18 fc3 sc0 lsb2 ws0">dict_values([&apos;Montgomery&apos;,<span class="_"> </span>&apos;Juneau&apos;])</div><div class="t m0 x44 h3b y2c9 ffd fs18 fc3 sc0 lsb2 ws0">&gt;&gt;&gt;<span class="_"> </span>capitals.sort()</div><div class="t m0 x44 h3b y2ca ffd fs18 fc3 sc0 lsb2 ws0">Traceback<span class="_"> </span>(most<span class="_"> </span>recent<span class="_"> </span>call<span class="_"> </span>last):</div><div class="t m0 xc4 h3b y2cb ffd fs18 fc3 sc0 lsb2 ws0">File<span class="_"> </span>&quot;&lt;stdin&gt;&quot;,<span class="_"> </span>line<span class="_"> </span>1,<span class="_"> </span>in<span class="_"> </span>&lt;module&gt;</div><div class="t m0 x44 h3b y2cc ffd fs18 fc3 sc0 lsb2 ws0">AttributeError:<span class="_"> </span>&apos;dict_values&apos;<span class="_"> </span>object<span class="_"> </span>has<span class="_"> </span>no<span class="_"> </span>attribute<span class="_"> </span>&apos;sort&apos;</div><div class="t m0 x44 h3b y2cd ffd fs18 fc3 sc0 lsb2 ws0">&gt;&gt;&gt;<span class="_"> </span>sorted(capitals)</div><div class="t m0 x44 h3b y2ce ffd fs18 fc3 sc0 lsb2 ws0">[&apos;Albany&apos;,<span class="_"> </span>&apos;Annapolis&apos;,<span class="_"> </span>...]</div><div class="t m0 x44 h15 y2cf ff4 fsb fc3 sc0 ls20 ws294">This task wasn’t too bad; <span class="_ _e"></span>there was only <span class="ls5e ws295">one fumble along the way. <span class="_ _e"></span>But as a project</span></div><div class="t m0 x44 h15 y2d0 ff4 fsb fc3 sc0 ls42 ws20a">grows and the scope of the change you’re ma<span class="ws296">king increases, <span class="_ _e"></span>taking a step back and</span></div><div class="t m0 x44 h15 y2d1 ff4 fsb fc3 sc0 ls38 ws26">planning your actions in advance is helpful.</div><div class="t m0 x32 h15 y2d2 ff4 fsb fc3 sc0 ls44 ws297"> Some thoughtful planning will often save<span class="ls47 ws298"> you time in the long run because you</span></div><div class="t m0 x44 h15 y2d3 ff4 fsb fc3 sc0 ls6 ws120">won’t be going two steps fo<span class="_ _e"></span>rward and one step back as you develop. If you do this up</div><div class="t m0 x44 h15 y2d4 ff4 fsb fc3 sc0 ls30 ws219">front, you can also get into a good habit of recognizing opportunities to refactor as</div><div class="t m0 x44 h15 y2d5 ff4 fsb fc3 sc0 ls3d ws117">they happen, rather than when you’re <span class="_ _e"></span>further down the road. When I’m in this mode<span class="_ _e"></span>,</div><div class="t m0 x44 h15 y2d6 ff4 fsb fc3 sc0 ls1e ws299">I typically shift to writing my code in a real<span class="ls1f ws29a"> Python module, even if I’m still writing a</span></div><div class="t m0 x44 h15 y2d7 ff4 fsb fc3 sc0 ls30 ws36">pretty short script. This enco<span class="ls6 ws72">urag<span class="_ _e"></span>es me to slow down a bit and keep<span class="_ _e"></span> the bigger goal in</span></div><div class="t m0 x44 h15 y2d8 ff4 fsb fc3 sc0 ls51 ws43">mind during development.</div><div class="t m0 x32 h15 y2d9 ff4 fsb fc3 sc0 ls38 ws256"> In the case of the state capitals code, imag<span class="ls81 ws29b">ine you’ll n<span class="_ _e"></span>eed the list of state capita<span class="_ _e"></span>ls in</span></div><div class="t m0 x44 h15 y2da ff4 fsb fc3 sc0 ls6b ws63">many contexts. You might ne<span class="_ _0"></span>ed it on a registration form, a ship<span class="_ _0"></span>ping form, or a billing</div><div class="t m0 x44 h15 y2db ff4 fsb fc3 sc0 ls1f wsa3">form. To avoid doing the same calculation ov<span class="ls6 ws72">er and over, you could wrap that calcula-</span></div><div class="t m0 x44 h15 y2dc ff4 fsb fc3 sc0 ls2f ws23">tion in a function and call it whenever yo<span class="ls72 ws29c">u nee<span class="_ _e"></span>d it, as shown in<span class="_ _e"></span> the following <span class="_ _e"></span>listing.</span></div><div class="t m0 x44 h3b y2dd ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>get_united_states_capitals():</div><div class="t m0 xae h3b y2de ffd fs18 fc3 sc0 lsb2 ws0">us_capitals_by_state<span class="_"> </span>=<span class="_"> </span>{&apos;Alabama&apos;:<span class="_"> </span>...}</div><div class="t m0 xae h3b y2df ffd fs18 fc3 sc0 lsb2 ws0">capitals<span class="_"> </span>=<span class="_"> </span>us_capitals_by_state.values()</div><div class="t m0 xae h3b y2e0 ffd fs18 fc1 sc0 lsb2 ws0">return<span class="_"> </span>sorted(capitals)</div><div class="t m0 x44 h15 y2e1 ff4 fsb fc3 sc0 ls34 ws261">Now you have a reusable function. But look<span class="ls1c ws24e">ing at this <span class="_ _e"></span>function, you can see that it</span></div><div class="t m0 x44 h15 y2e2 ff4 fsb fc3 sc0 ls1c ws29d">operates on constant data but does a bit <span class="_ _e"></span>of<span class="ls36 ws29e"> calculation each time it’s cal<span class="_ _0"></span>led. If this</span></div><div class="t m0 x44 h15 y2e3 ff4 fsb fc3 sc0 ls25 ws29f">function is called fr<span class="_ _0"></span>equently in the program, it can be refactored <span class="_ _0"></span>further to improve</div><div class="t m0 x44 h15 y2e4 ff4 fsb fc3 sc0 ls31 ws25">its performance.</div><div class="t m0 x32 h15 y2e5 ff4 fsb fc3 sc0 ls42 ws2a0"> In fact, it turns out a function isn’t nece<span class="ls38 wsaa">ssary at all. You can achieve the reusability</span></div><div class="t m0 x44 h15 y2e6 ff4 fsb fc3 sc0 ls1e ws2a1">while still making only one <span class="_ _0"></span>set of calculatio<span class="ls34 ws182">ns by storing the result in a constant for</span></div><div class="t m0 x44 h15 y2e7 ff4 fsb fc3 sc0 ls70 ws2a2">later use, as shown in the follo<span class="_ _e"></span>wing listing.</div><div class="t m0 x32 h15 y2e8 ff4 fsb fc3 sc0 ls6 ws0"> </div><div class="t m0 x32 h42 y2e9 ff4 fsa fc3 sc0 ls6 ws0"> </div><div class="t m0 x37 h20 y2ea ffb fs7 fc4 sc0 ls6 ws0">Getting the United States capitals in alphabet<span class="_ _0"></span>ical order<span class="_ _33"></span>Listing<span class="_"> </span>1.1</div><div class="t m0 x37 h20 y2eb ffb fs7 fc4 sc0 ls6 ws0">Wrapping the state capital logic in a function<span class="_ _37"></span>Listing<span class="_"> </span>1.2</div><div class="c x1f y2ec w9 h43"><div class="t m0 x43 h14 y2ed ff12 fs7 fcb sc0 lsd2 ws2a3">A dictio<span class="ff13 ls6 ws0">n<span class="ff12">a</span>r</span><span class="lsd3 ws2a4">y that <span class="ff13 ls6 ws0">m</span><span class="lsd4 ws2a5">aps<span class="_ _0"></span> state </span></span></div><div class="t m0 x43 h14 y2ee ff13 fs7 fcb sc0 ls6 ws0">n<span class="ff12">a</span>m<span class="ff12 lsd5 ws2a6">es to capital </span>n<span class="ff12">a</span>m<span class="ff12">es</span></div></div><div class="c x12 y2ef wa h44"><div class="t m0 x43 h14 y2f0 ff12 fs7 fcb sc0 ls6 ws0">O<span class="ff13">n</span><span class="lsd5 ws2a6">ly the capital </span><span class="ff13">n</span>a<span class="ff13">m</span>es</div></div><div class="c x94 y2f1 wa h43"><div class="t m0 x43 h14 y2f2 ff12 fs7 fcb sc0 lsd6 ws2a7">Whoops! This is<span class="ff13 ls6 ws0">n</span><span class="lsd7 ws2a8">’t a “list”, so </span></div><div class="t m0 x43 h14 y2ee ff13 fs7 fcb sc0 ls6 ws0">n<span class="ff12 lsd8 ws2a9">o “so</span>r<span class="ff12 lsd9">t” </span>m<span class="ff12 lsda ws2aa">ethod is available.</span></div></div><div class="c x1f y2f3 w9 h45"><div class="t m0 x43 h14 y2ed ff12 fs7 fcb sc0 lsdb ws2ab">New (so<span class="ff13 ls6 ws0">r</span><span class="lsdc ws2ac">ted) list usi<span class="ff13 ls6 ws0">n</span><span class="lsdd ws4">g “so<span class="_ _0"></span><span class="ff13 ls6 ws0">r<span class="ff12 lsde">ted”, </span></span></span></span></div><div class="t m0 x43 h14 y2ee ff12 fs7 fcb sc0 lsde ws2ad">which accepts a<span class="ff13 ls6 ws0">n</span><span class="lsdf ws2ae">y ite<span class="ff13 ls6 ws0">r<span class="ff12 lse0">able</span></span></span></div></div><div class="c x6b y2f4 wb h46"><div class="t m0 x43 h14 y2f5 ff12 fs7 fcb sc0 ls6 ws0">Sa<span class="ff13">m</span><span class="ls88 ws2af">e code as listi</span><span class="ff13">n</span><span class="lse1">g </span></div><div class="t m0 x43 h47 y2f6 ff14 fs17 fcb sc0 ls6 ws0">1</div><div class="t m0 xc5 h14 y2f7 ff12 fs7 fcb sc0 ls6 ws0">.</div><div class="t m0 x19 h47 y2f6 ff14 fs17 fcb sc0 ls6 ws0">1</div><div class="t m0 xc6 h14 y2f7 ff12 fs7 fcb sc0 lse2 ws2b0">, i<span class="ff13 ls6 ws0">n</span><span class="lse3 ws2b1"> a fu<span class="ff13 ls6 ws0">n<span class="ff12 lse4">ctio</span>n</span></span></div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
