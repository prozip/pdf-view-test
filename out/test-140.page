<div id="pf8c" class="pf w0 h0" data-page-no="8c"><div class="pc pc8c w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg8c.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">116</div><div class="t m0 x66 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 x8e h2c y1d0 ffb fs19 fcb sc0 ls185 ws0">HAPTER</div><div class="t m0 xf1 h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 6</div><div class="t m0 xe4 h2d y80 ffa fs7 fcb sc0 ls6 ws0">Separation of concerns in practice</div><div class="t m0 x44 h15 y40 ff4 fsb fc3 sc0 ls31 ws420">layer. It might be<span class="ls3b ws74f"> tempting to do something like the</span></div><div class="t m0 x44 h15 y41 ff4 fsb fc3 sc0 ls25 ws0">following:</div><div class="t m0 x44 h3b y50b ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>user_input<span class="_"> </span>==<span class="_"> </span>&apos;add<span class="_"> </span>bookmark&apos;:</div><div class="t m0 xae h3b y50c ffd fs18 fc3 sc0 lsb2 ws0">#<span class="_"> </span>add<span class="_"> </span>bookmark</div><div class="t m0 x44 h3b y50d ffd fs18 fc3 sc0 lsb2 ws0">elif<span class="_"> </span>user_input<span class="_"> </span>==<span class="_"> </span>&apos;delete<span class="_"> </span>bookmark<span class="_"> </span>#4&apos;:</div><div class="t m0 xae h3b yee1 ffd fs18 fc1 sc0 lsb2 ws0">#<span class="_"> </span>delete<span class="_"> </span>bookmark</div><div class="t m0 x44 h15 y110 ff4 fsb fc3 sc0 ls36 ws51a">But this would couple the text presented to the user</div><div class="t m0 x44 h15 yad4 ff4 fsb fc3 sc0 ls30 ws414">with the actions that need t<span class="_ _e"></span>o be triggered. You would</div><div class="t m0 x44 h15 yee2 ff4 fsb fc3 sc0 ls71 ws160">have new conditions for each menu option, and <span class="_ _e"></span>if you</div><div class="t m0 x44 h15 y36a ff4 fsb fc3 sc0 lsbc ws41f">wanted multip<span class="_ _e"></span>le options to<span class="ls2d ws1d"> trigger the same command,</span></div><div class="t m0 x44 h15 y36b ff4 fsb fc3 sc0 ls3e ws189">or you wanted to change the text, you would have to</div><div class="t m0 x44 h15 yee3 ff4 fsb fc3 sc0 ls38 ws1a3">refactor some <span class="ls1b ws750">code. It woul<span class="_ _e"></span>d be nice if the presentation</span></div><div class="t m0 x44 h15 y8e ff4 fsb fc3 sc0 ls38 ws193">layer were the only place that knows about the menu</div><div class="t m0 x44 h15 y347 ff4 fsb fc3 sc0 ls48 ws39">option text displayed to <span class="_ _e"></span>the user.</div><div class="t m0 x32 h15 y348 ff4 fsb fc3 sc0 ls1f ws144"> Each action <span class="_ _0"></span>is kind of like a <span class="ff3 ls50 ws0">command</span><span class="ls42 ws37e"> that needs <span class="_ _0"></span>to</span></div><div class="t m0 x44 h15 yee4 ff4 fsb fc3 sc0 ls80 ws0">be <span class="_ _f"></span><span class="ff3 ls3e">executed</span><span class="ls51 ws2de"> in response to a user’s menu choi<span class="ls50 ws751">ce. By encapsul<span class="_ _0"></span>ating the logic of <span class="_ _0"></span>each</span></span></div><div class="t m0 x44 h15 yee5 ff4 fsb fc3 sc0 ls71 ws10a">action as a command object, and providing <span class="ls51 wsba">a consistent way to <span class="_ _0"></span>trigger them via an</span></div><div class="t m5 x44 h24 yee6 ffd fsc fc3 sc0 lsa0 ws0">execute</div><div class="t m0 x48 h15 yee7 ff4 fsb fc3 sc0 ls71 ws475"> method, these actions can be decoupled<span class="ls7d ws752"> from the <span class="_ _e"></span>presentation layer. The</span></div><div class="t m0 x44 h15 yee8 ff4 fsb fc3 sc0 ls20 ws134">presentation layer can then point menu op<span class="ls34 ws185">tions to commands with<span class="ls3d ws117">out worrying about</span></span></div><div class="t m0 x44 h15 yd11 ff4 fsb fc3 sc0 ls3e ws4a">how those commands work. This is called the <span class="ff3 ls1e ws13">command pattern</span><span class="ls6 ws0">.</span></div><div class="t m0 x71 h31 yee9 ff4 fs1a fc3 sc0 ls6 ws0">2</div><div class="t m0 x32 h15 ybcb ff4 fsb fc3 sc0 ls2d ws5c2"> You’ll develop each of the CRUD acti<span class="_ _0"></span><span class="ls51 wsf4">ons and some peripheral functionality as</span></div><div class="t m0 x44 h15 y25e ff4 fsb fc3 sc0 ls51 ws35">commands in the bu<span class="ls3a ws28">siness logic layer.</span></div><div class="t m0 x44 h30 yeea ffb fsc fc2 sc0 ls6 ws0">C</div><div class="t m0 x12c h5a yeeb ffb fs20 fc2 sc0 ls1ab ws0">REATING</div><div class="t m0 x48 h30 yeea ffb fsc fc2 sc0 ls6 ws0"> </div><div class="t m0 x20 h5a yeeb ffb fs20 fc2 sc0 ls162 ws0">THE</div><div class="t m0 x15 h30 yeea ffb fsc fc2 sc0 ls6 ws0"> </div><div class="t m0 x1c h5a yeeb ffb fs20 fc2 sc0 ls1c4 ws0">BOOKMARKS</div><div class="t m0 xba h30 yeea ffb fsc fc2 sc0 ls6 ws0"> </div><div class="t m0 xd3 h5a yeeb ffb fs20 fc2 sc0 ls6 ws0">TABLE</div><div class="t m0 x44 h15 y7d0 ff4 fsb fc3 sc0 ls47 ws2bf">Now that you’re work<span class="_ _e"></span>ing in <span class="ls31 ws116">the business logic layer, create a new “commands” module</span></div><div class="t m0 x44 h15 y7d1 ff4 fsb fc3 sc0 ls31 wse8">to house all the commands you’re going to<span class="ls3a wsc3"> write. Because most of the commands will</span></div><div class="t m0 x44 h15 yeec ff4 fsb fc3 sc0 ls20 ws621">need to make use of the </div><div class="t m5 x29 h24 yeed ffd fsc fc3 sc0 lsa0 ws0">DatabaseMana<span class="_ _e"></span>ger</div><div class="t m0 x3f h15 yeec ff4 fsb fc3 sc0 lsb1 ws440">, import it from the dat<span class="_ _0"></span>abase module and</div><div class="t m0 x44 h15 yeee ff4 fsb fc3 sc0 ls2f ws5ab">create an instance of it (called </div><div class="t m5 x1f h24 yeef ffd fsc fc3 sc0 lsa0 ws0">db</div><div class="t m0 x12d h15 yeee ff4 fsb fc3 sc0 ls2e ws455">) to be used throughout the commands module.</div><div class="t m0 x44 h15 yef0 ff4 fsb fc3 sc0 ls34 ws3a8">Remember that its </div><div class="t m5 x135 h24 ya91 ffd fsc fc3 sc0 lsa0 ws0">__init__</div><div class="t m0 x8d h15 yef0 ff4 fsb fc3 sc0 ls66 ws275"> method require<span class="_ _0"></span>s the file path <span class="_ _0"></span>to a SQLite datab<span class="_ _0"></span>ase; I sug-</div><div class="t m0 x44 h15 yef1 ff4 fsb fc3 sc0 ls3d ws333">gest calling it bookmarks.db. Leaving out any <span class="ls34 ws185">leading path will create<span class="_ _e"></span> the database file</span></div><div class="t m0 x44 h15 yef2 ff4 fsb fc3 sc0 ls5e ws57">in the same directory as the Bark code.</div><div class="t m0 x32 h15 yef3 ff4 fsb fc3 sc0 ls38 ws227"> Because you’ll need to initialize the book<span class="ls31">marks database table if it doesn’t already</span></div><div class="t m0 x44 h15 yef4 ff4 fsb fc3 sc0 ls5b ws753">exist, start b<span class="_ _e"></span>y writing a </div><div class="t m5 x16 h24 yef5 ffd fsc fc3 sc0 lsa0 ws0">CreateBookma<span class="_ _e"></span>rksTableCommand</div><div class="t m0 x6e h15 yef4 ff4 fsb fc3 sc0 ls3a ws14c"> class whose </div><div class="t m5 x61 h24 yef5 ffd fsc fc3 sc0 lsa0 ws0">execute</div><div class="t m0 x9a h15 yef4 ff4 fsb fc3 sc0 ls1c5 ws143"> metho<span class="_ _0"></span>d</div><div class="t m0 x44 h15 ye1f ff4 fsb fc3 sc0 ls42 ws4ca">creates the table for your bookma<span class="ws754">rks. You can make use of the </span></div><div class="t m5 xb4 h24 ye1e ffd fsc fc3 sc0 lsa0 ws0">db.create_tabl<span class="_ _e"></span>e</div><div class="t m0 x44 h15 yef6 ff4 fsb fc3 sc0 ls20 ws40a">method you wrote earlier to cre<span class="_ _e"></span>ate your book<span class="ls34 ws2c6">marks table. Later in<span class="ls5e ws32a"> the chapter, you’ll</span></span></div><div class="t m0 x44 h15 yef7 ff4 fsb fc3 sc0 ls2f ws23">trigger this command to run when Bark star<span class="ls20 ws51">ts up. Check your work <span class="_ _e"></span>against the follow-</span></div><div class="t m0 x44 h15 yef8 ff4 fsb fc3 sc0 ls1f ws14">ing listing.</div><div class="t m0 x32 h15 yef9 ff4 fsb fc3 sc0 ls6 ws0"> </div><div class="t m0 x32 h15 yefa ff4 fsb fc3 sc0 ls6 ws0"> </div><div class="t m0 x32 h15 yefb ff4 fsb fc3 sc0 ls6 ws0"> </div><div class="c x49 yefc w68 hc2"><div class="t m0 xf4 h36 yefd ff11 fs1c fc12 sc0 ls6 ws0">Presentation layer</div><div class="t m0 xf3 h36 yefe ff11 fs1c fc12 sc0 ls6 ws0">Business logic layer</div><div class="t m0 xf9 h36 yeff ff11 fs1c fc12 sc0 ls6 ws0">Persistence layer</div></div><div class="c xcd ya6b w69 hd7"><div class="t m0 xf9 h2b yf00 ffb fs18 fcb sc0 ls143 ws655">Figure 6.7<span class="_ _29"> </span>The business logic </div><div class="t m0 xf9 h2b yf01 ffb fs18 fcb sc0 ls1c6 ws43b">layer determines when and how </div><div class="t m0 xf9 h2b yf02 ffb fs18 fcb sc0 ls1bb ws730">data is read from or written to </div><div class="t m0 xf9 h2b yf03 ffb fs18 fcb sc0 ls16e ws55c">the persistence layer.</div></div><div class="t m0 x42 h32 yce5 ff4 fs1b fcd sc0 ls6 ws0">2</div><div class="t m0 x43 h33 y981 ff4 fs17 fcd sc0 ls6 ws0">See <span class="_ _1c"></span>Wikip<span class="_ _e"></span>edia’s <span class="_ _1c"></span>“Command <span class="_ _1d"></span>pattern” <span class="_ _1d"></span>article <span class="_ _1c"></span>for <span class="_ _1d"></span>more <span class="_ _1c"></span>on<span class="_ _e"></span> <span class="_ _25"></span>this <span class="_ _1d"></span>pattern:</div><div class="t m3 x0 h34 y981 ff8 fs17 fcd sc0 ls6 ws0"> </div><div class="t m0 x4c h33 y981 ff4 fs17 fcf sc0 ls6 ws0">https://en.wik<span class="_ _e"></span>ipedia.org/wiki/Comma<span class="_ _e"></span>nd</div><div class="t m0 x43 h33 y211 ff4 fs17 fcf sc0 ls6 ws0">_pattern<span class="fcd">.</span></div><a class="l" href="https://en.wikipedia.org/wiki/Command_pattern"><div class="d m2" style="border-style:none;position:absolute;left:309.240000px;bottom:71.918000px;width:155.880000px;height:10.380000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="https://en.wikipedia.org/wiki/Command_pattern"><div class="d m2" style="border-style:none;position:absolute;left:465.120000px;bottom:71.918000px;width:0.180000px;height:10.380000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="https://en.wikipedia.org/wiki/Command_pattern"><div class="d m2" style="border-style:none;position:absolute;left:57.120000px;bottom:61.718000px;width:34.440000px;height:10.200000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
