<div id="pfa8" class="pf w0 h0" data-page-no="a8"><div class="pc pca8 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bga8.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">144</div><div class="t m0 x17 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 xa7 h2c y1d0 ffb fs19 fcb sc0 lsf6 ws0">HAPTER</div><div class="t m0 xba h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 8</div><div class="t m0 xe7 h2d y80 ffa fs7 fcb sc0 ls6 ws0">The rules (and exceptions) of inheritance</div><div class="t m0 x44 h15 y40 ff4 fsb fc3 sc0 ls1c ws451">object-oriented programming <span class="ws548">practices that the two conc<span class="ls30 ws187">epts—object-oriented pro-</span></span></div><div class="t m0 x44 h15 y839 ff4 fsb fc3 sc0 ls2f ws23">gramming and inheritance—<span class="ls81 ws148">were near<span class="_ _e"></span>ly inseparable.</span></div><div class="t m0 x44 h26 y1209 ffc fs15 fc2 sc0 ls6 ws17d">The silver bullet<span class="_ _c4"></span>8<span class="_ _0"></span>.<span class="_ _0"></span>1<span class="_ _0"></span>.<span class="_ _0"></span>1</div><div class="t m0 x44 h15 y120a ff4 fsb fc3 sc0 ls66 ws83d">Though inherit<span class="_ _0"></span>ance is sometimes <span class="_ _0"></span>the right to<span class="_ _0"></span>ol to reach <span class="_ _0"></span>for, it has bee<span class="_ _0"></span>n used on occa-</div><div class="t m0 x44 h15 y120b ff4 fsb fc3 sc0 lsbc ws692">sion as the hammer fo<span class="_ _e"></span>r every <span class="ls5e ws62d">nail—the elusive “silver <span class="_ _e"></span>bullet.” Much like a silver bullet,</span></div><div class="t m0 x44 h15 y120c ff4 fsb fc3 sc0 ls30 ws36">however, a paradigm that meets every nee<span class="_ _e"></span>d is a work of fiction.</div><div class="t m0 x32 h15 y120d ff4 fsb fc3 sc0 ls51 ws4a1"> The ubiquity of class inheritance in <span class="ls1c ws208">object-oriented programming quietly sowed</span></div><div class="t m0 x44 h15 y120e ff4 fsb fc3 sc0 ls1b ws83e">frustration for many <span class="_ _e"></span>developers, and over time <span class="_ _e"></span>more and more people renou<span class="_ _e"></span>nced</div><div class="t m0 x44 h15 y120f ff4 fsb fc3 sc0 ls3a ws481">object-oriented progra<span class="ls1c ws83f">mming altogether. This is an unfortunate outcome. Object</span></div><div class="t m0 x44 h15 y1210 ff4 fsb fc3 sc0 ls31 wsd0">orientation has a number of benefits for <span class="ls38 ws305">mental modeling of problems. Inheritance</span></div><div class="t m0 x44 h15 y1211 ff4 fsb fc3 sc0 ls20 ws2dd">even has its place when modeling the <span class="_ _e"></span>right <span class="ls38 ws1a3">hierarchies. Although inheritance isn’t the</span></div><div class="t m0 x44 h15 yfcc ff4 fsb fc3 sc0 ls21 ws64b">solution to e<span class="_ _0"></span>very data modeling<span class="ls52 ws439"> problem you’ll enco<span class="_ _e"></span>unter, it <span class="ff3 ls73 ws0">is</span><span class="ls5e ws62d"> the right<span class="_ _e"></span> solution for a</span></span></div><div class="t m0 x44 h15 y1212 ff4 fsb fc3 sc0 ls3a ws1e0">specific set of use cases, <span class="ls51 ws47">whi<span class="_ _0"></span>ch you’ll learn more about later in this chapter.</span></div><div class="t m0 x32 h15 y1213 ff4 fsb fc3 sc0 ls6c ws840"> Before we ge<span class="_ _0"></span>t to that, tho<span class="_ _0"></span>ugh, it’s importa<span class="_ _0"></span>nt for you to unde<span class="_ _0"></span>rstand how class inhe<span class="_ _0"></span>r-</div><div class="t m0 x44 h15 y1214 ff4 fsb fc3 sc0 ls7d ws12a">itance led to so much frustrat<span class="_ _e"></span>ion.</div><div class="t m0 x44 h26 y1215 ffc fs15 fc2 sc0 ls12f ws43f">The challenges of hierarchies<span class="_ _c5"></span>8<span class="_ _0"></span>.<span class="_ _1d"></span>1.<span class="_ _0"></span>2</div><div class="t m0 x44 h15 y1216 ff4 fsb fc3 sc0 ls5e ws231">Object-oriented programming is all about th<span class="_ _e"></span><span class="ls38 ws24a">e separation, encapsulation, and classifi-</span></div><div class="t m0 x44 h15 yc2 ff4 fsb fc3 sc0 ls21 ws1e2">cation of i<span class="_ _0"></span>nformation and behavio<span class="_ _0"></span>rs. I work <span class="ls2c ws48">with a number of<span class="_ _0"></span> librarians who have fo<span class="_ _0"></span>r-</span></div><div class="t m0 x44 h15 y1217 ff4 fsb fc3 sc0 ls20 ws60c">gotten more than I’ll ever know about cl<span class="ls71 ws191">assification—these fo<span class="ls48 ws841">lks wo<span class="_ _e"></span>rk to identify</span></span></div><div class="t m0 x44 h15 y1218 ff4 fsb fc3 sc0 ls66 ws842">relations<span class="_ _0"></span>hips between things,<span class="_ _0"></span> <span class="ls71 ws404">creating taxonomies or even<span class="ls3d ws7bd"> ontologies to catego<span class="_ _e"></span>rize</span></span></div><div class="t m0 x44 h15 y1219 ff4 fsb fc3 sc0 ls1c ws0">things.</div><div class="t m0 x82 h31 y121a ff4 fs1a fc3 sc0 ls6 ws0">1</div><div class="t m0 x4 h15 y1219 ff4 fsb fc3 sc0 ls25 ws843"> This works well for organizing raw information, but it can introduce pain once</div><div class="t m0 x44 h15 y121b ff4 fsb fc3 sc0 ls51 ws23d">software behavior is involved. As software <span class="ls20 ws57d">grows, it becomes diff<span class="ls2c ws139">icult to keep parent-</span></span></div><div class="t m0 x44 h15 y27d ff4 fsb fc3 sc0 ls2d ws1d">child relationships betw<span class="ls38 ws26">een classes straight.</span></div><div class="t m0 x32 h49 y121c ffb fs17 fc2 sc0 lsf7 ws0">NOTE</div><div class="t m0 xef h15 y121d ff4 fsb fc3 sc0 ls3a ws5a1">_Parent_ classes are referred to as <span class="ff3 ls36 ws0">superclasses</span><span class="ls1f ws144"> in Pyth<span class="_ _0"></span>on (and in many</span></div><div class="t m0 x32 h15 y121e ff4 fsb fc3 sc0 ls42 ws1f2">other languages). <span class="ff3 ls48 ws0">Child</span><span class="ls2f ws5db"> classes are referred to as <span class="ff3 ws0">subclasses</span><span class="ls1c ws266">. I’ll use this <span class="_ _0"></span>nomen-</span></span></div><div class="t m0 x32 h15 y121f ff4 fsb fc3 sc0 lsc5 ws3ab">clature thro<span class="_ _0"></span>ughout the rest of the<span class="_ _0"></span> chapter.</div><div class="t m0 x44 h15 y1220 ff4 fsb fc3 sc0 ls34 ws203">A class inherits all of its superclass’s info<span class="ls2f ws467">rmation and behavior, and it can then over-</span></div><div class="t m0 x44 h15 y1221 ff4 fsb fc3 sc0 ls1c ws24e">ride them to do something different (figure 8.1).<span class="_ _e"></span> This is probably the tightest cou-</div><div class="c x44 y1222 w9a h104"><div class="t m0 x37 h36 y1223 ff1e fs1c fc12 sc0 ls6 ws0">Shape<span class="ff11"> defines a set of attributes and methods.</span></div><div class="t m0 x37 h36 y1224 ff1e fs1c fc12 sc0 ls6 ws0">Polygon<span class="ff11"> inherits all the attributes and methods</span></div><div class="t m0 x91 h36 y1225 ff11 fs1c fc12 sc0 ls6 ws0">from <span class="ff1e">Shape</span> and can override them as needed.</div><div class="t m0 x125 h5f y1226 ff15 fs1c fc12 sc0 ls6 ws0">class Shape</div><div class="t m0 x42 h5f y1227 ff15 fs1c fc12 sc0 ls6 ws0">shape.py</div><div class="t m0 x134 h5f y1228 ff15 fs1c fc12 sc0 ls6 ws0">class Polygon(Shape)</div><div class="t m0 xd2 h5f y1229 ff15 fs1c fc12 sc0 ls6 ws0">polygon.py</div></div><div class="c x44 y122a w2 h105"><div class="t m0 x2 h2b y122b ffb fs18 fcb sc0 ls69 ws44f">Inheritance with one superclass and one subclass<span class="_ _39"></span>Figure 8.1</div></div><div class="t m0 x42 h32 yce5 ff4 fs1b fcd sc0 ls6 ws0">1</div><div class="t m0 x43 h33 y981 ff4 fs17 fcd sc0 ls6 ws0">For <span class="_ _e"></span>more <span class="_ _f"></span>on <span class="_ _e"></span>ontology <span class="_ _e"></span>in <span class="_ _e"></span>th<span class="_ _e"></span>e <span class="_ _e"></span>context <span class="_ _e"></span>of <span class="_ _e"></span>inform<span class="_ _e"></span>ation <span class="_ _e"></span>science, <span class="_ _e"></span>s<span class="_ _e"></span>ee <span class="_ _e"></span>the <span class="_ _e"></span>Wikipedia <span class="_ _f"></span>article:</div><div class="t m3 x0 h34 y981 ff8 fs17 fcd sc0 ls6 ws0"> </div><div class="t m0 x81 h33 y981 ff4 fs17 fcf sc0 ls6 ws0">https://en.wiki<span class="_ _e"></span>pedia</div><div class="t m0 x43 h33 y211 ff4 fs17 fcf sc0 ls6 ws0">.org/wiki/Onto<span class="_ _e"></span>logy_(information_scien<span class="_ _e"></span>ce)<span class="fcd">.</span></div><a class="l" href="https://en.wikipedia.org/wiki/Ontology_(information_science)"><div class="d m2" style="border-style:none;position:absolute;left:387.780000px;bottom:71.918000px;width:77.340000px;height:10.380000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="https://en.wikipedia.org/wiki/Ontology_(information_science)"><div class="d m2" style="border-style:none;position:absolute;left:465.120000px;bottom:71.918000px;width:0.180000px;height:10.380000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="https://en.wikipedia.org/wiki/Ontology_(information_science)"><div class="d m2" style="border-style:none;position:absolute;left:57.120000px;bottom:61.718000px;width:164.460000px;height:10.200000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
