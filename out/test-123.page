<div id="pf7b" class="pf w0 h0" data-page-no="7b"><div class="pc pc7b w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg7b.png"/><div class="t m0 xbf h14 y80 ff7 fs7 fcb sc0 ls6 ws0">99<span class="_ _a3"></span><span class="ffa">Test-driven development: A primer</span></div><div class="t m0 x35 h15 y40 ff4 fsb fc3 sc0 ls3d ws5ac">also great for celebrating the moments when<span class="ls3a ws608"> you fix a slow piece of code and can</span></div><div class="t m0 x35 h15 y41 ff4 fsb fc3 sc0 ls5f ws59">watch your app speed up.</div><div class="t m0 x83 h15 y42 ff4 fsb fc3 sc0 ls31 ws25"> Unlike unit testing, which produces bina<span class="ls1c ws17f">ry pass/fail results, <span class="lsbc ws692">performance te<span class="_ _e"></span>sting is</span></span></div><div class="t m0 x35 h15 y43 ff4 fsb fc3 sc0 ls38 ws3c6">more qualitative. If you see your application trending slower over time (or a sudden</div><div class="t m0 x35 h15 y44 ff4 fsb fc3 sc0 ls71 ws4db">jump after a deployment), that’s something to <span class="ls42 ws693">look into. The nature of this kind of test-</span></div><div class="t m0 x35 h15 y45 ff4 fsb fc3 sc0 ls3b ws1a1">ing makes it a bit more diff<span class="_ _e"></span>icult to automate<span class="ls3d ws1ac"> and monitor, but solutions <span class="_ _e"></span>are out there. </span></div><div class="t m0 x19 h26 ycab ffc fs15 fc2 sc0 ls110 ws42b">5.6.2<span class="_ _5f"> </span>L<span class="_ _e"></span>o<span class="_ _e"></span>ad<span class="_ _e"></span> t<span class="_ _e"></span>e<span class="_ _e"></span>st<span class="_ _e"></span>i<span class="_ _e"></span>n<span class="_ _e"></span>g</div><div class="t m0 x35 h15 y48 ff4 fsb fc3 sc0 ls1b ws3ff">Load testing is a type of pe<span class="_ _e"></span><span class="ls2d ws3ad">rformance testing, but it gi<span class="_ _0"></span><span class="ls34 ws469">ves you information about how</span></span></div><div class="t m0 x35 h15 y49 ff4 fsb fc3 sc0 ls1e ws4a7">far you can push your application until it fa<span class="ls3a ws4e7">lls over. Maybe it consumes too much <span class="_ _e"></span>CPU,</span></div><div class="t m0 x35 h15 y4a ff4 fsb fc3 sc0 ls34 ws694">memory, or network bandwidth, or it gets t<span class="ls30 wscb">oo slow for users to<span class="_ _e"></span> use it reliably. Whatever</span></div><div class="t m0 x35 h15 y4b ff4 fsb fc3 sc0 ls3a wsc3">the case, load testing provid<span class="ls48 ws2da">es metrics you can use to fine-tune the resources you give</span></div><div class="t m0 x35 h15 y14b ff4 fsb fc3 sc0 ls34 ws11f">your application. In more su<span class="ls71">bstantial cases, it may motiva<span class="ls21 ws695">te you to change the de<span class="_ _0"></span>sign</span></span></div><div class="t m0 x35 h15 y4d ff4 fsb fc3 sc0 ls30 wsbd">of part of the system <span class="ls1c ws10">so it’s more<span class="ls47 ws54"> efficient.</span></span></div><div class="t m0 x83 h15 y4e ff4 fsb fc3 sc0 ls3b ws70"> Load testing entails more infrastructure an<span class="ls31 ws25">d strategy than something like unit test-</span></div><div class="t m0 x35 h15 y4f ff4 fsb fc3 sc0 ls79 ws696">ing. To get a clear picture of per<span class="_ _e"></span>formance under load, you need to mimic your pr<span class="_ _e"></span>o-</div><div class="t m0 x35 h15 y50 ff4 fsb fc3 sc0 ls31 ws697">duction environment closely in both architecture and user behavior. Due <span class="_ _e"></span>to the</div><div class="t m0 x35 h15 yed ff4 fsb fc3 sc0 ls31 ws15d">complexity of application-level load testing,<span class="ls71 ws2b4"> in my mind it sits somewhere above inte-</span></div><div class="t m0 x35 h15 y52 ff4 fsb fc3 sc0 ls25 ws1a">gration testing in the testing pyramid (figure 5.6).</div><div class="t m0 x35 h15 ycac ff4 fsb fc3 sc0 ls31 ws698">Load testing helps you performance-test your applicatio<span class="ls36 ws60b">ns in scenarios that <span class="_ _e"></span>more</span></div><div class="t m0 x35 h15 ycad ff4 fsb fc3 sc0 ls3a ws28">closely mimic real-world user behavior. </div><div class="t m0 x19 h1f ycae ffc fs13 fc2 sc0 ls12c ws428">5<span class="_ _1d"></span>.7<span class="_ _a"> </span>Test-driven development: A primer</div><div class="t m0 x35 h15 ycaf ff4 fsb fc3 sc0 ls42 ws1ba">A whole school of thought exists around <span class="ff3 ls20 ws0">driving<span class="_ _e"></span></span><span class="ls2f ws253"> development using unit and integra-</span></div><div class="t m0 x35 h15 ycb0 ff4 fsb fc3 sc0 ls48 ws4a5">tion testing in software. The ge<span class="_ _e"></span>ne<span class="ls7d ws654">ral name for these practices is <span class="ff3 ls34 ws469">test-driven development</span></span></div><div class="t m0 x35 h15 ycb1 ff4 fsb fc3 sc0 ls50 ws41">(TDD). TDD can help<span class="_ _0"></span> you commit to testi<span class="_ _0"></span>ng up front, s<span class="_ _0"></span>o you reap the be<span class="_ _0"></span>nefits of test<span class="_ _0"></span>-</div><div class="t m0 x35 h15 ycb2 ff4 fsb fc3 sc0 ls38 ws26">ing that we’ve discussed so far.</div><div class="c x35 ycb3 w58 hbd"><div class="t mc x19 hbe ycb4 ff11 fs29 fc12 sc0 ls13b ws0">Manual</div><div class="t mc xc0 hbe ycb5 ff11 fs29 fc12 sc0 ls6 ws0">testing</div><div class="t m0 x19 h36 ycb6 ff11 fs1c fc12 sc0 ls6 ws0">Integration testing</div><div class="t m0 x1b h36 ycb7 ff11 fs1c fc12 sc0 ls6 ws0">Load</div><div class="t m0 x8a h36 ycb8 ff11 fs1c fc12 sc0 ls6 ws0">testing</div><div class="t m0 xf5 h36 ycb9 ff11 fs1c fc12 sc0 ls6 ws0">Unit testing</div><div class="t m0 x67 h37 ycba ff12 fs1d fc12 sc0 ls6 ws0">Do load testing in places where it’s</div><div class="t m0 x67 h37 ycbb ff12 fs1d fc12 sc0 ls6 ws0">mission critical. If you have the</div><div class="t m0 x67 h37 ycbc ff12 fs1d fc12 sc0 ls6 ws0">resources after making sure the</div><div class="t m0 x67 h37 ycbd ff12 fs1d fc12 sc0 ls6 ws0">code actually works, you can</div><div class="t m0 x67 h37 ycbe ff12 fs1d fc12 sc0 ls6 ws0">do more.</div></div><div class="c x35 ycbf w2 hbf"><div class="t m0 x121 h2b ycc0 ffb fs18 fcb sc0 ls69 ws699">Figure 5.6<span class="_ _29"> </span>Load testing </div><div class="t m0 x121 h2b ycc1 ffb fs18 fcb sc0 ls175 ws69a">in the testing pyramid</div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
