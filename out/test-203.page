<div id="pfcb" class="pf w0 h0" data-page-no="cb"><div class="pc pccb w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bgcb.png"/><div class="t m0 xa0 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">179<span class="_ _f7"></span><span class="ffa">Defining coupling</span></div><div class="t m5 x35 h24 y3eb ffd fsc fc3 sc0 lsa0 ws0">display_book_<span class="_ _e"></span>info</div><div class="t m0 xd6 h15 y40 ff4 fsb fc3 sc0 ls3d ws3e5"> function needs to know all the different piece<span class="_ _e"></span>s of information</div><div class="t m0 x35 h15 y41 ff4 fsb fc3 sc0 ls38 ws1f4">that a </div><div class="t m5 x48 h24 y532 ffd fsc fc3 sc0 lsa0 ws0">Book</div><div class="t m0 x1c h15 y41 ff4 fsb fc3 sc0 ls2f ws23"> instance contains.</div><div class="t m0 x35 h3b yc82 ffd fs18 fc3 sc0 lsb2 ws0">class<span class="_"> </span>Book:</div><div class="t m0 x87 h3b yc83 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>__init__(self,<span class="_"> </span>title,<span class="_"> </span>subtitle,<span class="_"> </span>author):</div><div class="t m0 x36 h3b yc84 ffd fs18 fc3 sc0 lsb2 ws0">self.title<span class="_"> </span>=<span class="_"> </span>title</div><div class="t m0 x36 h3b y1615 ffd fs18 fc3 sc0 lsb2 ws0">self.subtitle<span class="_"> </span>=<span class="_"> </span>subtitle</div><div class="t m0 x36 h3b yc85 ffd fs18 fc3 sc0 lsb2 ws0">self.author<span class="_"> </span>=<span class="_"> </span>author</div><div class="t m0 x35 h3b y135c ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>display_book_info(book):</div><div class="t m0 x87 h3b y1616 ffd fs18 fc3 sc0 lsb2 ws0">print(f&apos;{book.title}:<span class="_"> </span>{book.subtitle}<span class="_"> </span>by<span class="_"> </span>{book.author}&apos;)</div><div class="t m0 x35 h15 yf04 ff4 fsb fc3 sc0 ls71 ws909">If the </div><div class="t m5 x4 h24 y1617 ffd fsc fc3 sc0 lsa0 ws0">Book</div><div class="t m0 x21 h15 yf04 ff4 fsb fc3 sc0 ls31 ws56a"> class and the </div><div class="t m5 x29 h24 y1617 ffd fsc fc3 sc0 lsa0 ws0">display_book<span class="_ _e"></span>_info</div><div class="t m0 x89 h15 yf04 ff4 fsb fc3 sc0 ls44 ws3b7"> function live in the same module, this code</div><div class="t m0 x35 h15 yf05 ff4 fsb fc3 sc0 ls20 ws40a">might be tolerable. It operates on related <span class="ls5e ws32a">inform<span class="_ _e"></span>ation, and it’s together in one place.</span></div><div class="t m0 x35 h15 yf07 ff4 fsb fc3 sc0 ls71 ws19a">But as your codebase grows, you ma<span class="ls36 ws463">y eventually find functions like </span></div><div class="t m5 x81 h24 y1618 ffd fsc fc3 sc0 lsa0 ws0">display_book<span class="_ _e"></span>_info</div><div class="t m0 x35 h15 yf08 ff4 fsb fc3 sc0 ls34 ws9f">in one module operating on <span class="ls2f ws23">classes from other modules.</span></div><div class="t m0 x83 h15 yf09 ff4 fsb fc3 sc0 ls2f ws3dd"> Tight coupling isn’t inherently bad. Occasionally, it’s just trying to tell you some-</div><div class="t m0 x35 h15 ye74 ff4 fsb fc3 sc0 ls48 ws90a">thing. Because </div><div class="t m5 x7e h24 y1619 ffd fsc fc3 sc0 lsa0 ws0">display_book_<span class="_ _e"></span>info</div><div class="t m0 x121 h15 ye74 ff4 fsb fc3 sc0 ls7a ws90b"> operates only on in<span class="_ _0"></span>fo from </div><div class="t m5 x146 h24 y1619 ffd fsc fc3 sc0 lsa0 ws0">Book</div><div class="t m0 xec h15 ye74 ff4 fsb fc3 sc0 ls48 ws90a"> and does</div><div class="t m0 x35 h15 y8e5 ff4 fsb fc3 sc0 ls1c ws183">something book-related, the function and the class have <span class="ff3">high cohesion</span><span class="lsae ws90c">. It’s <span class="ff3 ls21 ws0">so</span><span class="ls30 ws340"> tightly</span></span></div><div class="t m0 x35 h15 y161a ff4 fsb fc3 sc0 ls14a ws90d">coupled<span class="_ _e"></span> to </div><div class="t m5 x8c h24 y161b ffd fsc fc3 sc0 lsa0 ws0">Book</div><div class="t m0 x135 h15 y161a ff4 fsb fc3 sc0 ls2d ws6df"> that it makes sense for you to move it inside <span class="_ _0"></span>the </div><div class="t m5 xd4 h24 y161b ffd fsc fc3 sc0 lsa0 ws0">Book</div><div class="t m0 x13b h15 y161a ff4 fsb fc3 sc0 ls3a ws63f"> class as a</div><div class="t m0 x35 h15 y161c ff4 fsb fc3 sc0 ls6b ws6d6">method, as shown in the follo<span class="_ _0"></span>wing listing.</div><div class="t m0 x35 h3b y161d ffd fs18 fc3 sc0 lsb2 ws0">class<span class="_"> </span>Book:</div><div class="t m0 x87 h3b y161e ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>__init__(self,<span class="_"> </span>title,<span class="_"> </span>subtitle,<span class="_"> </span>author):</div><div class="t m0 x36 h3b y161f ffd fs18 fc3 sc0 lsb2 ws0">self.title<span class="_"> </span>=<span class="_"> </span>title</div><div class="t m0 x36 h3b y1620 ffd fs18 fc3 sc0 lsb2 ws0">self.subtitle<span class="_"> </span>=<span class="_"> </span>subtitle</div><div class="t m0 x36 h3b y1621 ffd fs18 fc3 sc0 lsb2 ws0">self.author<span class="_"> </span>=<span class="_"> </span>author</div><div class="t m0 x87 h3b y1622 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>display_info(self):</div><div class="t m0 x36 h3b y1623 ffd fs18 fc3 sc0 lsb2 ws0">print(f&apos;{self.title}:<span class="_"> </span>{self.subtitle}<span class="_"> </span>by<span class="_"> </span>{self.author}&apos;)</div><div class="t m0 x35 h15 y1624 ff4 fsb fc3 sc0 ls35 ws42f">In general, tight coupling is probl<span class="_ _0"></span>ematic <span class="ls2d ws495">when it exists between two separate <span class="_ _0"></span>con-</span></div><div class="t m0 x35 h15 y1625 ff4 fsb fc3 sc0 ls31 ws25">cerns. Some tight coup<span class="ls2f ws23">ling is a sign of high cohesion that isn’t structured well.</span></div><div class="t m0 x83 h15 y1626 ff4 fsb fc3 sc0 ls34 ws141"> You may have seen or written code <span class="_ _e"></span>simi<span class="ls1e ws6b5">lar to listi<span class="_ _0"></span>ng 10.3. Imagine you’ve got a</span></div><div class="t m0 x35 h15 y1627 ff4 fsb fc3 sc0 ls2e ws90e">search index to which your users can subm<span class="ls38 ws3fd">it queries. The search module provides</span></div><div class="t m0 x35 h15 y1628 ff4 fsb fc3 sc0 ls38 ws18f">functionality for cleaning up those querie<span class="ls36 ws60b">s to make sure they produce consistent</span></div><div class="t m0 x35 h15 y1629 ff4 fsb fc3 sc0 ls48 ws3d3">results from the index. Yo<span class="_ _e"></span>u write a main procedure that gets a query from the user,</div><div class="t m0 x35 h15 y162a ff4 fsb fc3 sc0 ls62 ws62">cleans it up, and prints<span class="ls4e ws1e3"> the<span class="_ _e"></span> cleaned-up version.</span></div><div class="t m0 x35 h3b y162b ffd fs18 fc3 sc0 lsb2 ws0">import<span class="_"> </span>re</div><div class="t m0 x35 h3b y162c ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>remove_spaces(query):</div><div class="t m0 xa7 h20 y162d ffb fs7 fc4 sc0 ls6 ws0">A function tightly coupled to an object<span class="_ _100"></span>Listing<span class="_"> </span>10.1</div><div class="t m0 xa7 h20 y162e ffb fs7 fc4 sc0 ls6 ws0">Reducing coupling by increasing cohesion<span class="_ _101"></span>Listing<span class="_"> </span>10.2</div><div class="t m0 xa7 h20 y162f ffb fs7 fc4 sc0 ls6 ws0">A procedure tightly coupled to the details of<span class="_ _0"></span> a class<span class="_ _102"></span>Listing<span class="_"> </span>10.3</div><div class="c x53 y1630 wbf h46"><div class="t m0 xc8 h14 yf2d ff12 fs7 fcb sc0 lsdf ws90f">A book sto<span class="ff13 ls6 ws0">r</span><span class="lsec ws910">es seve<span class="ff13 ls6 ws0">r</span><span class="ls106 ws911">al pieces </span></span></div><div class="t m0 xc8 h14 y936 ff12 fs7 fcb sc0 lsfe ws912">of i<span class="ff13 ls6 ws0">n</span><span class="lsd7 ws2a8">fo as att<span class="ff13 ls6 ws0">r<span class="ff12 lsfc">ibutes.</span></span></span></div></div><div class="c xa6 y1631 wc0 h13c"><div class="t m0 x12e h14 y112b ff12 fs7 fcb sc0 ls116 ws3a1">This fu<span class="ff13 ls6 ws0">n<span class="ff12 ls118">ctio</span>n</span><span class="ls140 ws5ad"> has </span></div><div class="t m0 x12e h14 y1632 ff12 fs7 fcb sc0 ls6 ws0">k<span class="ff13">n</span><span class="lsff ws504">owledge of all the </span></div><div class="t m0 x12e h14 y112c ff12 fs7 fcb sc0 ls10d ws35b">book’s att<span class="ff13 ls6 ws0">r<span class="ff12 ls11a">ibutes.</span></span></div></div><div class="c x40 y1633 w90 h13d"><div class="t m0 xe0 h14 y1634 ff12 fs7 fcb sc0 ls122 ws0">Fu<span class="ff13 ls6">n</span><span class="lse4">ctio<span class="ff13 ls6">n<span class="ff12"> </span>m</span><span class="ls181 ws5be">oved to a </span><span class="ff13 ls6">m<span class="ff12 ws317">ethod whose o</span>n<span class="ff12">ly </span></span></span></div><div class="t m0 xe0 h14 y1635 ff13 fs7 fcb sc0 ls6 ws0">n<span class="ff12 lsd9">ecessa</span>r<span class="ff12 lsd3 ws743">y a</span>r<span class="ff12 lse1">gu</span>m<span class="ff12">e</span>n<span class="ff12 ws317">t is self (still a Book)</span></div></div><div class="c x10f y1636 wc1 h8a"><div class="t m0 xf9 h14 yfd8 ff12 fs7 fcb sc0 lsfd ws0">All <span class="ff13 ls6">r</span><span class="ls140">efe<span class="ff13 ls6">r<span class="ff12">e</span>n</span><span class="lsda ws2aa">ces to book cha</span><span class="ff13 ls6">n</span><span class="lsec ws4f0">ge to self.</span></span></div></div><div class="c x3b y1637 wc2 h56"><div class="t m0 x12e h14 yd80 ff12 fs7 fcb sc0 ls122 ws0">Tu<span class="ff13 ls103">rn</span><span class="ls113 ws7ba">s &apos; Geo</span><span class="ff13 ls6">r</span><span class="lsef ws4fa">ge Washi</span><span class="ff13 ls6">n</span><span class="lsd9">gto<span class="ff13 ls6">n<span class="ff12 ws317"> &apos; </span></span></span></div><div class="t m0 x12e h14 yd81 ff12 fs7 fcb sc0 ls6 ws0">i<span class="ff13">n</span><span class="ls19e ws3ce">to &apos;Geo<span class="_ _e"></span></span><span class="ff13">r</span><span class="ls10d ws35b">ge Washi</span><span class="ff13">n</span><span class="ls113">gto</span><span class="ff13">n<span class="_ _0"></span><span class="ff12">&apos;</span></span></div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
