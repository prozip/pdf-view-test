<div id="pfc3" class="pf w0 h0" data-page-no="c3"><div class="pc pcc3 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bgc3.png"/><div class="t m0 xa0 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">171<span class="_ _f5"></span><span class="ffa">Decomposing classes</span></div><div class="t m0 x35 h26 y1e4 ffc fs15 fc2 sc0 lsad ws1be">Initialization complexity<span class="_ _ac"></span>9<span class="_ _1d"></span>.3<span class="_ _0"></span>.<span class="_ _1d"></span>1</div><div class="t m0 x35 h15 y140 ff4 fsb fc3 sc0 ls42 ws105">I often see classes that have complex initialization procedures. For better or worse,</div><div class="t m0 x35 h15 y141 ff4 fsb fc3 sc0 ls31 wsf1">these classes are usually complex because th<span class="ls47 ws8dc">ey deal wi<span class="_ _e"></span>th complex data structures.</span></div><div class="t m0 x35 h15 y142 ff4 fsb fc3 sc0 ls42 ws32">Have you ever seen a class like the <span class="_ _e"></span>following?</div><div class="t m0 x35 h3b y10ad ffd fs18 fc3 sc0 lsb2 ws0">class<span class="_"> </span>Book:</div><div class="t m0 x87 h3b y10ae ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>__init__(self,<span class="_"> </span>data):</div><div class="t m0 x36 h3b y8dd ffd fs18 fc3 sc0 lsb2 ws0">self.title<span class="_"> </span>=<span class="_"> </span>data[&apos;title&apos;]</div><div class="t m0 x36 h3b y151a ffd fs18 fc3 sc0 lsb2 ws0">self.subtitle<span class="_"> </span>=<span class="_"> </span>data[&apos;subtitle&apos;]</div><div class="t m0 x36 h3b y1531 ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>self.title<span class="_"> </span>and<span class="_"> </span>self.subtitle:</div><div class="t m0 xe6 h3b y151b ffd fs18 fc3 sc0 lsb2 ws0">self.display_title<span class="_"> </span>=<span class="_"> </span>f&apos;{self.title}:<span class="_"> </span>{self.subtitle}&apos;</div><div class="t m0 x36 h3b y151c ffd fs18 fc3 sc0 lsb2 ws0">elif<span class="_"> </span>self.title:</div><div class="t m0 xe6 h3b y151d ffd fs18 fc3 sc0 lsb2 ws0">self.display_title<span class="_"> </span>=<span class="_"> </span>self.title</div><div class="t m0 x36 h3b y151e ffd fs18 fc3 sc0 lsb2 ws0">else:</div><div class="t m0 xe6 h3b y1532 ffd fs18 fc1 sc0 lsb2 ws0">self.display_title<span class="_"> </span>=<span class="_"> </span>&apos;Untitled&apos;</div><div class="t m0 x35 h15 y1533 ff4 fsb fc3 sc0 ls3e ws351">When the domain logic you’re dealing with <span class="ls50 ws8dd">is comp<span class="_ _0"></span>lex, your co<span class="ls1f ws8de">de is more likely to</span></span></div><div class="t m0 x35 h15 y1534 ff4 fsb fc3 sc0 ls20 ws134">reflect that. In these case<span class="_ _e"></span>s, it’s more important than ever for developers to rely on use-</div><div class="t m0 x35 h15 y1535 ff4 fsb fc3 sc0 ls4b ws3b">ful abstractio<span class="_ _e"></span>ns to ma<span class="ls6 ws72">ke sense of it all.</span></div><div class="t m0 x83 h15 y1536 ff4 fsb fc3 sc0 ls1c ws42a"> I’ve talked about extracti<span class="ls2f ws253">ng functions and methods as a useful way to break down</span></div><div class="t m0 x35 h15 y5e0 ff4 fsb fc3 sc0 ls47 ws8df">code. One approach you co<span class="_ _e"></span>uld take here is to extract the logic for </div><div class="t m5 xd4 h24 y1537 ffd fsc fc3 sc0 lsa0 ws0">display_titl<span class="_ _e"></span>e</div><div class="t m0 x35 h15 y1538 ff4 fsb fc3 sc0 ls6f ws7c3">into a </div><div class="t m5 x97 h24 y1539 ffd fsc fc3 sc0 lsa0 ws0">set_display<span class="_ _e"></span>_title</div><div class="t m0 x24 h15 y1538 ff4 fsb fc3 sc0 ls3d ws50f"> method that you could call from the </div><div class="t m5 x5c h24 y1539 ffd fsc fc3 sc0 lsa0 ws0">__init__</div><div class="t m0 xce h15 y1538 ff4 fsb fc3 sc0 ls1c5 ws2c6"> metho<span class="_ _0"></span>d, as</div><div class="t m0 x35 h15 y153a ff4 fsb fc3 sc0 ls1e wsb8">shown in the following listing. Try cr<span class="_ _0"></span><span class="ls34 wsbb">eating a book modu<span class="ls2c ws8e0">le and adding the </span></span></div><div class="t m5 x10a h24 y153b ffd fsc fc3 sc0 lsa0 ws0">Book</div><div class="t m0 xd5 h15 y153a ff4 fsb fc3 sc0 ls35 ws3ca"> class</div><div class="t m0 x35 h15 y81b ff4 fsb fc3 sc0 ls4e ws1e3">to it, extracting a sett<span class="_ _e"></span>er method for </div><div class="t m5 x85 h24 y81b ffd fsc fc3 sc0 lsa0 ws0">display_title</div><div class="t m0 xe8 h15 y81b ff4 fsb fc3 sc0 ls6 ws0">.</div><div class="t m0 x35 h3b y153c ffd fs18 fc3 sc0 lsb2 ws0">class<span class="_"> </span>Book:</div><div class="t m0 x87 h3b y153d ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>__init__(self,<span class="_"> </span>data):</div><div class="t m0 x36 h3b y153e ffd fs18 fc3 sc0 lsb2 ws0">self.title<span class="_"> </span>=<span class="_"> </span>data[&apos;title&apos;]</div><div class="t m0 x36 h3b y153f ffd fs18 fc3 sc0 lsb2 ws0">self.subtitle<span class="_"> </span>=<span class="_"> </span>data[&apos;subtitle&apos;]</div><div class="t m0 x36 h3b y1540 ffd fs18 fc3 sc0 lsb2 ws0">self.set_display_title()</div><div class="t m0 x87 h3b y1541 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>set_display_title(self):</div><div class="t m0 x36 h3b y1542 ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>self.title<span class="_"> </span>and<span class="_"> </span>self.subtitle:</div><div class="t m0 xe6 h3b y1543 ffd fs18 fc3 sc0 lsb2 ws0">self.display_title<span class="_"> </span>=<span class="_"> </span>f&apos;{self.title}:<span class="_"> </span>{self.subtitle}&apos;</div><div class="t m0 x36 h3b y1544 ffd fs18 fc3 sc0 lsb2 ws0">elif<span class="_"> </span>self.title:</div><div class="t m0 xe6 h3b y1545 ffd fs18 fc3 sc0 lsb2 ws0">self.display_title<span class="_"> </span>=<span class="_"> </span>self.title</div><div class="t m0 x36 h3b y1546 ffd fs18 fc3 sc0 lsb2 ws0">else:</div><div class="t m0 xe6 h3b y1547 ffd fs18 fc1 sc0 lsb2 ws0">self.display_title<span class="_"> </span>=<span class="_"> </span>&apos;Untitled&apos;</div><div class="t m0 x35 h15 y1548 ff4 fsb fc3 sc0 ls35 ws8e1">This has cleaned up the </div><div class="t m5 x24 h24 y1549 ffd fsc fc3 sc0 lsa0 ws0">__init__</div><div class="t m0 x85 h15 y1548 ff4 fsb fc3 sc0 ls1c ws8e2"> method, but a couple of issues arise from this</div><div class="t m0 x35 h15 y154a ff4 fsb fc3 sc0 ls44 ws0">approach:</div><div class="t m0 x8b h29 y154b ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x48 h15 y154c ff4 fsb fc3 sc0 ls34 ws9d">Getters and setters are generally discouraged in Python because they can <span class="_ _e"></span>clutter</div><div class="t m0 x48 h15 y154d ff4 fsb fc3 sc0 ls1c ws10">up a class.</div><div class="t m0 x17 h20 y154e ffb fs7 fc4 sc0 ls6 ws0">A class with complex domain logic in its cons<span class="_ _0"></span>truction<span class="_ _f6"></span>Listing<span class="_"> </span>9.6</div><div class="t m0 x17 h20 y154f ffb fs7 fc4 sc0 ls6 ws0">Using a setter to simplify class construction<span class="_ _f7"></span>Listing<span class="_"> </span>9.7</div><div class="c x40 y1550 w2c h43"><div class="t m0 xc8 h14 y4aa ff12 fs7 fcb sc0 ls170 ws0">Ext<span class="ff13 ls6">r</span><span class="ls197 ws8e3">acts so</span><span class="ff13 ls6">m</span><span class="ls125 ws8e4">e fields f</span><span class="ff13 ls6">r<span class="ff12">o</span>m<span class="ff12"> </span></span></div><div class="t m0 xc8 h14 y936 ff12 fs7 fcb sc0 ls102 ws319">the passed-i<span class="ff13 ls6 ws0">n</span><span class="lsfd ws31a"> data</span></div></div><div class="c x129 y108f w48 h136"><div class="t m0 xb7 h14 y1551 ff12 fs7 fcb sc0 ls146 ws0">Co<span class="ff13 ls6">m</span><span class="lsff">plexity</span></div><div class="t m0 x12b h14 y1552 ff12 fs7 fcb sc0 ls6 ws0">a<span class="ff13">r</span><span class="ls103">isi</span><span class="ff13">n</span><span class="lsdd ws4">g f</span><span class="ff13">r</span>o<span class="ff13">m</span></div><div class="t m0 xf3 h14 y1553 ff12 fs7 fcb sc0 ls146 ws45b">the do<span class="_ _e"></span><span class="ff13 ls6 ws0">m<span class="ff12 lse3">ai</span>n</span></div><div class="t m0 xc7 h14 y1554 ff12 fs7 fcb sc0 ls88 ws314">logic of you<span class="ff13 ls6 ws0">r</span></div><div class="t m0 x14b h14 y12da ff12 fs7 fcb sc0 ls102 ws0">busi<span class="ff13 ls6">n</span><span class="lsd9">ess</span></div></div><div class="c xe y1555 w28 h56"><div class="t m0 x12e h14 yb49 ff12 fs7 fcb sc0 lsda ws2aa">Calls the ext<span class="ff13 ls6 ws0">r</span><span class="lsd6 ws2a7">acted fu<span class="ff13 ls6 ws0">n<span class="ff12 lse4">ctio</span>n</span></span></div></div><div class="c x4e y1297 w28 h56"><div class="t m0 x12e h14 yb49 ff12 fs7 fcb sc0 ls100 ws0">Ext<span class="ff13 ls6">r</span><span class="ls181 ws7e9">acted fu</span><span class="ff13 ls6">n</span><span class="ls118">ctio<span class="ff13 ls6">n<span class="ff12"> </span></span></span></div><div class="t m0 x12e h14 y480 ff12 fs7 fcb sc0 lsda ws2aa">sets display_title.</div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
