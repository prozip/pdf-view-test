<div id="pf30" class="pf w0 h0" data-page-no="30"><div class="pc pc30 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg30.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">24</div><div class="t m0 x3 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 x29 h2c y1d0 ffb fs19 fcb sc0 lsf6 ws0">HAPTER</div><div class="t m0 x47 h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 2</div><div class="t m0 xca h2d y80 ffa fs7 fcb sc0 ls6 ws0">Separation of concerns</div><div class="t m0 x44 h15 y40 ff4 fsb fc3 sc0 ls20 ws251">This has the benefit o<span class="_ _e"></span>f avoiding long </div><div class="t m5 xe h24 y3eb ffd fsc fc3 sc0 lsa0 ws0">import</div><div class="t m0 x2b h15 y40 ff4 fsb fc3 sc0 ls2d ws11e"> statements, and, as you’ll see in the next</div><div class="t m0 x44 h15 y41 ff4 fsb fc3 sc0 ls71 ws83">section, the prefix helps <span class="ls34 ws22">avoid namespace collisions.</span></div><div class="t m0 x32 h49 y3ec ffb fs17 fc2 sc0 ls108 ws0">WARNING</div><div class="t m0 xc3 h15 y3ed ff4 fsb fc3 sc0 ls1e ws329">Python allows you to import all the names from a modu<span class="_ _0"></span>le in short-</div><div class="t m0 x32 h15 y3ee ff4 fsb fc3 sc0 ls5e ws32a">hand using </div><div class="t m5 x37 h24 y3ef ffd fsc fc3 sc0 lsa0 ws32b">from themodul<span class="_ _e"></span>e import *</div><div class="t m0 x27 h15 y3ee ff4 fsb fc3 sc0 ls66 ws22f">. It’s tempti<span class="_ _0"></span>ng to use this form instead</div><div class="t m0 x32 h15 y3f0 ff4 fsb fc3 sc0 ls30 ws32c">of prefixing those names wit<span class="_ _e"></span>h </div><div class="t m5 x2a h24 y3f1 ffd fsc fc3 sc0 lsa0 ws0">themodule.</div><div class="t m0 x30 h15 y3f0 ff4 fsb fc3 sc0 ls44 ws32d"> throughout your code, but <span class="ff3 ls6d ws0">please</span></div><div class="t m0 x32 h15 y3f2 ff3 fsb fc3 sc0 ls48 ws0">don’t<span class="ff4 ls1e ws96">! These wildcard imports can cause <span class="ls1f ws7f">name collisi<span class="_ _0"></span>ons and make problems</span></span></div><div class="t m0 x32 h15 y145 ff4 fsb fc3 sc0 ls30 ws32e">hard to debug because you can’t see t<span class="_ _e"></span>he specific names being imported. Stick</div><div class="t m0 x32 h15 y3f3 ff4 fsb fc3 sc0 ls31 ws58">to explicit imports!</div><div class="t m0 x44 h26 y3f4 ffc fs15 fc2 sc0 ls88 ws32f">Namespaces prevent collisions<span class="_ _3c"></span>2<span class="_ _0"></span>.<span class="_ _0"></span>1<span class="_ _0"></span>.<span class="_ _0"></span>3</div><div class="t m0 x44 h15 y3f5 ff4 fsb fc3 sc0 ls20 ws330">If you want to get <span class="_ _e"></span>the current time in a Py<span class="ls7d ws2bb">thon program, you can do so by importing</span></div><div class="t m0 x44 h15 y3f6 ff4 fsb fc3 sc0 ls7d ws0">the </div><div class="t m5 x3c h24 y3f7 ffd fsc fc3 sc0 lsa0 ws0">time()</div><div class="t m0 x36 h15 y3f6 ff4 fsb fc3 sc0 ls30 wsbd"> function from the time module:</div><div class="t m0 x44 h3b y3f8 ffd fs18 fc3 sc0 lsb2 ws0">from<span class="_"> </span>time<span class="_"> </span>import<span class="_"> </span>time</div><div class="t m0 x44 h3b y3f9 ffd fs18 fc1 sc0 lsb2 ws0">print(time())</div><div class="t m0 x44 h15 y3fa ff4 fsb fc3 sc0 ls71 wsd4">You should see output like this:</div><div class="t m0 x44 h3b y3fb ffd fs18 fc3 sc0 lsb2 ws0">1546021709.3412101</div><div class="t m5 x44 h24 y3fc ffd fsc fc3 sc0 lsa0 ws0">time()</div><div class="t m0 xd7 h15 y3fd ff4 fsb fc3 sc0 ls42 ws8c"> returns the current Unix time.</div><div class="t m0 x85 h31 y3fe ff4 fs1a fc3 sc0 ls6 ws0">1</div><div class="t m0 x6a h15 y3fd ff4 fsb fc3 sc0 ls3e ws1b3"> The datetime module al<span class="ls1c ws266">so contains something</span></div><div class="t m0 x44 h15 y3ff ff4 fsb fc3 sc0 ls30 wsbd">with the name </div><div class="t m5 x91 h24 y400 ffd fsc fc3 sc0 lsa0 ws0">time</div><div class="t m0 x66 h15 y3ff ff4 fsb fc3 sc0 ls3b ws70">, but it does so<span class="_ _e"></span>mething different:</div><div class="t m0 x44 h3b y401 ffd fs18 fc3 sc0 lsb2 ws0">from<span class="_"> </span>datetime<span class="_"> </span>import<span class="_"> </span>time</div><div class="t m0 x44 h3b y402 ffd fs18 fc1 sc0 lsb2 ws0">print(time())</div><div class="t m0 x44 h15 y403 ff4 fsb fc3 sc0 ls34 ws22">This time you should see this output:</div><div class="t m0 x44 h3b y404 ffd fs18 fc3 sc0 lsb2 ws0">00:00:00</div><div class="t m0 x44 h15 y292 ff4 fsb fc3 sc0 ls3e ws0">This </div><div class="t m5 x8a h24 y405 ffd fsc fc3 sc0 lsa0 ws0">time</div><div class="t m0 xd8 h15 y292 ff4 fsb fc3 sc0 ls3e ws331"> is actually a class, and calling it returns a </div><div class="t m5 xa2 h24 y405 ffd fsc fc3 sc0 lsa0 ws0">datetime.ti<span class="_ _e"></span>me</div><div class="t m0 x7d h15 y292 ff4 fsb fc3 sc0 ls42 ws332"> instance that</div><div class="t m0 x44 h15 y293 ff4 fsb fc3 sc0 ls3d ws333">defaults to midnight (0 ho<span class="_ _e"></span>urs, 0 minutes,<span class="ls7d ws334"> and so on). What happens when yo<span class="_ _e"></span>u import</span></div><div class="t m0 x44 h15 y294 ff4 fsb fc3 sc0 ls7d ws54">them both?</div><div class="t m0 x44 h3b y406 ffd fs18 fc3 sc0 lsb2 ws0">from<span class="_"> </span>time<span class="_"> </span>import<span class="_"> </span>time</div><div class="t m0 x44 h3b y407 ffd fs18 fc3 sc0 lsb2 ws0">from<span class="_"> </span>datetime<span class="_"> </span>import<span class="_"> </span>time</div><div class="t m0 x44 h3b y408 ffd fs18 fc1 sc0 lsb2 ws0">print(time())</div><div class="t m0 x44 h15 y298 ff4 fsb fc3 sc0 ls34 ws335">In cases of ambiguity, Python uses the most<span class="ls9d ws0"> r<span class="_ _1c"></span>e<span class="_ _1c"></span>c<span class="_ _1c"></span>e<span class="_ _1d"></span>n<span class="_ _1c"></span>t<span class="_ _1c"></span> d<span class="_ _1c"></span>e<span class="_ _1d"></span>f<span class="_ _1c"></span>i<span class="_ _1c"></span>n<span class="_ _1c"></span>i<span class="_ _1c"></span>t<span class="_ _1d"></span>i<span class="_ _25"></span>o<span class="_ _1d"></span>n<span class="_ _1c"></span> i<span class="_ _1c"></span>t<span class="_ _1c"></span> k<span class="_ _1c"></span>n<span class="_ _1d"></span>o<span class="_ _1c"></span>w<span class="_ _1c"></span>s<span class="_ _1c"></span> a<span class="_ _1c"></span>b<span class="_ _1d"></span>o<span class="_ _1c"></span>u<span class="_ _1c"></span>t<span class="_ _1c"></span>.<span class="_ _1c"></span> I<span class="_ _1d"></span>f<span class="_ _1c"></span> y<span class="_ _1c"></span>o<span class="_ _1c"></span>u</span></div><div class="t m0 x44 h15 y166 ff4 fsb fc3 sc0 ls109 ws0">import<span class="_ _e"></span> </div><div class="t m5 x4 h24 y409 ffd fsc fc3 sc0 lsa0 ws0">time</div><div class="t m0 x15 h15 y166 ff4 fsb fc3 sc0 ls30 ws36"> from one place and <span class="_ _e"></span>then import another </div><div class="t m5 x53 h24 y409 ffd fsc fc3 sc0 lsa0 ws0">time</div><div class="t m0 x5b h15 y166 ff4 fsb fc3 sc0 ls71 ws83"> from another place, it will</div><div class="t m0 x44 h15 y167 ff4 fsb fc3 sc0 ls71 wsc3">only know about the latter. If you don’t make<span class="ls2c wse6"> use of namespaces, it wi<span class="_ _0"></span>ll be difficult to</span></div><div class="t m0 x44 h15 yd7 ff4 fsb fc3 sc0 ls44 ws336">tell which </div><div class="t m5 x3d h24 y40a ffd fsc fc3 sc0 lsa0 ws0">time()</div><div class="t m0 x28 h15 yd7 ff4 fsb fc3 sc0 ls2f ws1ed"> is being referenced in the code<span class="ls47 ws337">, and you <span class="_ _e"></span>might use the wrong one</span></div><div class="t m0 x44 h15 y299 ff4 fsb fc3 sc0 ls2f ws338">by mistake. This is a compelling reason to <span class="ls2d">import modules as a whole; it forces you to</span></div><div class="t m0 x44 h15 y40b ff4 fsb fc3 sc0 ls38 ws26">prefix names from the modu<span class="ls3a ws28">le so that it’s clear where the <span class="_ _e"></span>names come from.</span></div><div class="c xb1 y40c w9 h44"><div class="t m0 x43 h14 y2f0 ff12 fs7 fcb sc0 ls10a ws339">Which ti<span class="ff13 ls6 ws0">m</span><span class="lsee ws30e">e is this?</span></div></div><div class="t m0 x42 h32 y210 ff4 fs1b fcd sc0 ls6 ws0">1</div><div class="t m0 x43 h33 y211 ff4 fs17 fcd sc0 ls6 ws0">See the Wik<span class="_ _e"></span>ipedia article for an explana<span class="_ _e"></span>tion of Unix time:</div><div class="t m3 x0 h34 y211 ff8 fs17 fcd sc0 ls6 ws0"> </div><div class="t m0 x65 h33 y211 ff4 fs17 fcf sc0 ls6 ws0">https://e<span class="_ _e"></span>n.wikipedia.org/wiki/Un<span class="_ _e"></span>ix_time<span class="fcd">.</span></div><a class="l" href="https://en.wikipedia.org/wiki/Unix_time"><div class="d m2" style="border-style:none;position:absolute;left:276.840000px;bottom:62.378000px;width:156.060000px;height:10.440000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
