<div id="pf31" class="pf w0 h0" data-page-no="31"><div class="pc pc31 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg31.png"/><div class="t m0 xbf h14 y80 ff7 fs7 fcb sc0 ls6 ws0">25<span class="_ _3d"></span><span class="ffa">The hierarchy of separation in Python</span></div><div class="t m0 x35 h3b y395 ffd fs18 fc3 sc0 lsb2 ws0">import<span class="_"> </span>time</div><div class="t m0 x35 h3b y396 ffd fs18 fc3 sc0 lsb2 ws0">import<span class="_"> </span>datetime</div><div class="t m0 x35 h3b y397 ffd fs18 fc3 sc0 lsb2 ws0">now<span class="_"> </span>=<span class="_"> </span>time.time()</div><div class="t m0 x35 h3b y40d ffd fs18 fc3 sc0 lsb2 ws0">midnight<span class="_"> </span>=<span class="_"> </span>datetime.time()</div><div class="t m0 x35 h15 y398 ff4 fsb fc3 sc0 ls42 ws33a">Sometimes name col<span class="ls6f ws78">lisions are d<span class="_ _e"></span>ifficult to avoid, even <span class="ls48 ws77">with the tools you’ve<span class="_ _e"></span> seen so far.</span></span></div><div class="t m0 x35 h15 ye1 ff4 fsb fc3 sc0 ls51 ws13e">If you create a module with the same name <span class="ws33b">as a module built into Python <span class="_ _e"></span>or from a</span></div><div class="t m0 x35 h15 y40e ff4 fsb fc3 sc0 ls2d ws33c">third-party library, and you need them both <span class="_ _0"></span>in one module, you’ll need more fire-</div><div class="t m0 x35 h15 y40f ff4 fsb fc3 sc0 ls48 ws33d">power. Fortunately, it’s one Python <span class="_ _e"></span>keyw<span class="ls38 ws33e">ord away. You can alias a name to another</span></div><div class="t m0 x35 h15 y410 ff4 fsb fc3 sc0 ls3a ws1e0">name when you import it, using the </div><div class="t m5 xa5 h24 y411 ffd fsc fc3 sc0 ls6 ws0">as</div><div class="t m0 x64 h15 y410 ff4 fsb fc3 sc0 ls25 ws1a"> keyword:</div><div class="t m0 x35 h3b y412 ffd fs18 fc3 sc0 lsb2 ws0">import<span class="_"> </span>datetime</div><div class="t m0 x35 h3b y413 ffd fs18 fc1 sc0 lsb2 ws0">from<span class="_"> </span>mycoollibrary<span class="_"> </span>import<span class="_"> </span>datetime<span class="_"> </span>as<span class="_"> </span>cooldatetime</div><div class="t m0 x35 h15 y414 ff4 fsb fc3 sc0 lsf8 ws0">Now </div><div class="t m5 x4 h24 y415 ffd fsc fc3 sc0 lsa0 ws0">datetime</div><div class="t m0 xad h15 y414 ff4 fsb fc3 sc0 ls38 ws33f"> is available as expected, and the third-party </div><div class="t m5 x72 h24 y415 ffd fsc fc3 sc0 lsa0 ws0">datetime</div><div class="t m0 xa3 h15 y414 ff4 fsb fc3 sc0 ls30 ws340"> is available as</div><div class="t m5 x35 h24 y416 ffd fsc fc3 sc0 lsa0 ws0">cooldatetime</div><div class="t m0 x1d h15 y14d ff4 fsb fc3 sc0 ls6 ws0">.</div><div class="t m0 x83 h15 y14e ff4 fsb fc3 sc0 ls71 ws341"> You shouldn’t override Python’s built-in<span class="ls31 ws342"> functionality unless <span class="ls2f ws343">you have a compelling</span></span></div><div class="t m0 x35 h15 y417 ff4 fsb fc3 sc0 ls3d ws2c0">reason to, so it’s best to avoid using the <span class="ls2d ws344">same names as built-ins unless you intend to</span></div><div class="t m0 x35 h15 y418 ff4 fsb fc3 sc0 ls30 ws12c">replace them. But if you don’t know<span class="_ _e"></span> the whole <span class="ls44 ws15c">standard library (I sure don’t!) it might</span></div><div class="t m0 x35 h15 yc2 ff4 fsb fc3 sc0 ls42 ws345">still happen by accident on occasion. Yo<span class="_ _e"></span><span class="ls7d ws346">u could alias your module to<span class="_ _e"></span> a new name</span></div><div class="t m0 x35 h15 y419 ff4 fsb fc3 sc0 ls3e ws347">wherever you import it on other modul<span class="ls71 ws348">es, but I recommend renaming the module</span></div><div class="t m0 x35 h15 y41a ff4 fsb fc3 sc0 ls20 ws235">and updating any references to it <span class="_ _e"></span>throughout<span class="ls1e ws11a"> your code so your imports stay consis-</span></div><div class="t m0 x35 h15 yf3 ff4 fsb fc3 sc0 ls7d ws11c">tent with the module’s filename.</div><div class="t m0 x83 h49 y41b ffb fs17 fc2 sc0 lsf7 ws0">NOTE</div><div class="t m0 xaf h15 y41c ff4 fsb fc3 sc0 ls20 ws349">Most integrated development environments (IDEs)<span class="_ _e"></span> will give you a</div><div class="t m0 x83 h15 y41d ff4 fsb fc3 sc0 ls3d ws97">warning when you override the name of a Python built-in so you don’t go to<span class="_ _e"></span>o</div><div class="t m0 x83 h15 y9c ff4 fsb fc3 sc0 ls38 ws26">far down that road by accident.</div><div class="t m0 x35 h15 y41e ff4 fsb fc3 sc0 ls10b ws0">W<span class="_ _25"></span>i<span class="_ _25"></span>t<span class="_ _3e"></span>h<span class="_ _3e"></span> t<span class="_ _25"></span>h<span class="_ _25"></span>e<span class="_ _3e"></span>s<span class="_ _25"></span>e<span class="_ _25"></span> i<span class="_ _3e"></span>m<span class="_ _25"></span>p<span class="_ _25"></span>o<span class="_ _3e"></span>r<span class="_ _25"></span>t<span class="_ _3e"></span>i<span class="_ _25"></span>n<span class="_ _25"></span>g<span class="_ _25"></span> p<span class="_ _3e"></span>r<span class="_ _25"></span>a<span class="_ _3e"></span>c<span class="_ _25"></span>t<span class="_ _25"></span>i<span class="_ _3e"></span>c<span class="_ _25"></span>e<span class="_ _25"></span>s<span class="_ _3e"></span>,<span class="_ _25"></span> y<span class="_ _25"></span>o<span class="_ _3e"></span>u<span class="_ _25"></span> s<span class="_ _25"></span>h<span class="_ _3e"></span>o<span class="_ _25"></span>u<span class="_ _25"></span>l<span class="_ _3e"></span>d<span class="_ _25"></span> b<span class="_ _25"></span>e<span class="_ _3e"></span> a<span class="_ _25"></span>b<span class="_ _25"></span>l<span class="_ _3e"></span>e<span class="_ _25"></span> t<span class="_ _25"></span>o<span class="_ _3e"></span> </div><div class="t m5 x5b h24 y41f ffd fsc fc3 sc0 lsa0 ws0">import</div><div class="t m0 x33 h15 y41e ff4 fsb fc3 sc0 ls51 ws34a"> everything you need</div><div class="t m0 x35 h15 y420 ff4 fsb fc3 sc0 ls51 ws268">without issue. Remember that <span class="ls35 ws34b">module name pr<span class="_ _0"></span><span class="ls67 ws11d">efixes (like </span></span></div><div class="t m5 xcc h24 y421 ffd fsc fc3 sc0 lsa0 ws0">time.</div><div class="t m0 x77 h15 y420 ff4 fsb fc3 sc0 ls5f ws34c"> and </div><div class="t m5 xd4 h24 y421 ffd fsc fc3 sc0 lsa0 ws0">datetime.</div><div class="t m0 xcf h15 y420 ff4 fsb fc3 sc0 ls3a ws26d">) are</div><div class="t m0 x35 h15 y15d ff4 fsb fc3 sc0 ls1e wsb4">helpful in the long run because namespace <span class="ls3e ws34d">collisions can and do happen. When you</span></div><div class="t m0 x35 h15 y15e ff4 fsb fc3 sc0 ls38 ws1b8">run into a collision, take a deep breath <span class="ls1f ws2d8">and confidently rework<span class="_ _0"></span> your import state-</span></div><div class="t m0 x35 h15 y422 ff4 fsb fc3 sc0 ls2f ws23">ments or create an alias and be on your way!</div><div class="t m0 x19 h1f y423 ffc fs13 fc2 sc0 lsa9 ws34e">2<span class="_ _0"></span>.<span class="_ _1d"></span>2<span class="_ _21"> </span>The hierarchy of separation in Python</div><div class="t m0 x35 h15 y424 ff4 fsb fc3 sc0 ls5e ws34f">One way to distinguish separate concerns is<span class="ls36 ws350"> to follow the Unix philosophy of “do</span></div><div class="t m0 x35 h15 y425 ff4 fsb fc3 sc0 ls3e ws351">one thing and do it well.”</div><div class="t m0 x24 h31 y426 ff4 fs1a fc3 sc0 ls6 ws0">2</div><div class="t m0 xd9 h15 y425 ff4 fsb fc3 sc0 ls9f ws0"> W<span class="_ _25"></span>h<span class="_ _1c"></span>e<span class="_ _1c"></span>n<span class="_ _1c"></span> a<span class="_ _25"></span> p<span class="_ _1c"></span>a<span class="_ _1c"></span>r<span class="_ _1c"></span>t<span class="_ _25"></span>i<span class="_ _1c"></span>c<span class="_ _1c"></span>u<span class="_ _1c"></span>l<span class="_ _1c"></span>a<span class="_ _25"></span>r<span class="_ _1c"></span> f<span class="_ _1c"></span>u<span class="_ _25"></span>n<span class="_ _1c"></span>c<span class="_ _1c"></span>t<span class="_ _1c"></span>i<span class="_ _1c"></span>o<span class="_ _25"></span>n<span class="_ _1c"></span> o<span class="_ _1c"></span>r<span class="_ _1c"></span> c<span class="_ _25"></span>l<span class="_ _1c"></span>a<span class="_ _1c"></span>s<span class="_ _1c"></span>s<span class="_ _25"></span> i<span class="_ _1c"></span>n<span class="_ _1c"></span> y<span class="_ _1c"></span>o<span class="_ _25"></span>u<span class="_ _1c"></span>r<span class="_ _1c"></span> c<span class="_ _1c"></span>o<span class="_ _25"></span>d<span class="_ _1c"></span>e<span class="_ _1c"></span> i<span class="_ _25"></span>s<span class="_ _1c"></span> c<span class="_ _1c"></span>o<span class="_ _1c"></span>n<span class="_ _25"></span>-</div><div class="t m0 x35 h15 y427 ff4 fsb fc3 sc0 ls44 ws352">cerned with a single behavior, you can impr<span class="ls1e ws96">ove it independent of the code that uses</span></div><div class="t m0 x35 h15 y428 ff4 fsb fc3 sc0 ls71 ws353">it. In contrast, if behaviors are duplic<span class="ls6 ws354">ated and mixed together<span class="_ _e"></span> throughout your</span></div><div class="t m0 x35 h15 y429 ff4 fsb fc3 sc0 ls47 ws355">code, it may be difficult to up<span class="_ _e"></span>date a pa<span class="ls48 ws356">rticular behavior wi<span class="ls3d ws357">thout thinking about—</span></span></div><div class="t m0 x35 h15 y42a ff4 fsb fc3 sc0 ls3b ws1a0">and in the worst case, breaking—several ot<span class="ls36 ws2e4">her behaviors. Many functions on a web-</span></div><div class="t m0 x35 h15 y42b ff4 fsb fc3 sc0 ls1b ws358">site, for example, might rely on info<span class="_ _e"></span>rmat<span class="ls66 ws359">ion from the currentl<span class="_ _0"></span>y authenticated user.</span></div><div class="c x92 y42c wf h53"><div class="t m0 x43 h14 y42d ff12 fs7 fcb sc0 ls10c ws35a">It’s clea<span class="ff13 ls6 ws0">r</span><span class="ls10d ws35b"> which </span></div><div class="t m0 x43 h14 y42e ff12 fs7 fcb sc0 lsd2 ws0">ti<span class="ff13 ls6">m</span><span class="ws35c">e this </span><span class="ff13 ls6">m<span class="ff12">ea</span>n</span><span class="ls10e">s.</span></div></div><div class="c xb6 y42f w10 h43"><div class="t m0 x43 h14 y430 ff12 fs7 fcb sc0 ls10f ws35d">This ti<span class="ff13 ls6 ws0">m</span><span class="ls10d ws35b">e is <span class="ff13 ls6 ws0">r<span class="ff12 lsf2">efe<span class="_ _0"></span><span class="ff13 ls6">r<span class="ff12">e</span>n<span class="ff12 lsda">ced </span></span></span></span></span></div><div class="t m0 x43 h14 y431 ff12 fs7 fcb sc0 ls6 ws0">u<span class="ff13">n</span><span class="lsee ws30e">iquely as well.</span></div></div><div class="t m0 x19 h32 y210 ff4 fs1b fcd sc0 ls6 ws0">2</div><div class="t m0 x34 h33 y211 ff4 fs17 fcd sc0 ls6 ws0">See the Wikip<span class="_ _e"></span>edia article on Unix philoso<span class="_ _e"></span>phy:</div><div class="t m3 x0 h34 y211 ff8 fs17 fcd sc0 ls6 ws0"> </div><div class="t m0 x2a h33 y211 ff4 fs17 fcf sc0 ls6 ws0">https://en.wi<span class="_ _e"></span>kipedia.org/wiki/Unix_phi<span class="_ _e"></span>losophy<span class="fcd">.</span></div><a class="l" href="https://en.wikipedia.org/wiki/Unix_philosophy"><div class="d m2" style="border-style:none;position:absolute;left:241.680000px;bottom:62.378000px;width:180.360000px;height:10.440000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
