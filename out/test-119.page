<div id="pf77" class="pf w0 h0" data-page-no="77"><div class="pc pc77 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg77.png"/><div class="t m0 xbf h14 y80 ff7 fs7 fcb sc0 ls6 ws0">95<span class="_ _99"></span><span class="ffa">Unit testing with unittest</span></div><div class="t m0 x36 h3b y396 ffd fs18 fc3 sc0 lsb2 ws0">self.assertDictEqual({&apos;SHOES-S-BLUE&apos;:<span class="_"> </span>{&apos;quantity&apos;:<span class="_"> </span>1}},</div><div class="t m0 x35 h51 yc47 ff9 fs15 fc9 sc0 ls11f ws0">➥ </div><div class="t m0 x83 h3b y397 ffd fs18 fc3 sc0 lsb2 ws0">cart.products)</div><div class="t m0 x87 h3b y483 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>test_add_two_of_a_product(self):</div><div class="t m0 x36 h3b y484 ffd fs18 fc3 sc0 lsb2 ws0">cart<span class="_"> </span>=<span class="_"> </span>ShoppingCart()</div><div class="t m0 x36 h3b y569 ffd fs18 fc3 sc0 lsb2 ws0">product<span class="_"> </span>=<span class="_"> </span>Product(&apos;shoes&apos;,<span class="_"> </span>&apos;S&apos;,<span class="_"> </span>&apos;blue&apos;)</div><div class="t m0 x36 h3b y486 ffd fs18 fc3 sc0 lsb2 ws0">cart.add_product(product,<span class="_"> </span>quantity=2)</div><div class="t m0 x36 h3b y58f ffd fs18 fc3 sc0 lsb2 ws0">self.assertDictEqual({&apos;SHOES-S-BLUE&apos;:<span class="_"> </span>{&apos;quantity&apos;:<span class="_"> </span>2}},</div><div class="t m0 x35 h51 yc48 ff9 fs15 fc9 sc0 ls11f ws0">➥ </div><div class="t m0 x83 h3b y488 ffd fs18 fc3 sc0 lsb2 ws0">cart.products)</div><div class="t m0 x87 h3b y591 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>test_add_two_different_products(self):</div><div class="t m0 x36 h3b y592 ffd fs18 fc3 sc0 lsb2 ws0">cart<span class="_"> </span>=<span class="_"> </span>ShoppingCart()</div><div class="t m0 x36 h3b yc49 ffd fs18 fc3 sc0 lsb2 ws0">product_one<span class="_"> </span>=<span class="_"> </span>Product(&apos;shoes&apos;,<span class="_"> </span>&apos;S&apos;,<span class="_"> </span>&apos;blue&apos;)</div><div class="t m0 x36 h3b y594 ffd fs18 fc3 sc0 lsb2 ws0">product_two<span class="_"> </span>=<span class="_"> </span>Product(&apos;shirt&apos;,<span class="_"> </span>&apos;M&apos;,<span class="_"> </span>&apos;gray&apos;)</div><div class="t m0 x36 h3b y596 ffd fs18 fc3 sc0 lsb2 ws0">cart.add_product(product_one)</div><div class="t m0 x36 h3b yc4a ffd fs18 fc3 sc0 lsb2 ws0">cart.add_product(product_two)</div><div class="t m0 x36 h3b y598 ffd fs18 fc3 sc0 lsb2 ws0">self.assertDictEqual(</div><div class="t m0 xe6 h3b y599 ffd fs18 fc3 sc0 ls6 ws0">{</div><div class="t m0 x66 h3b y59a ffd fs18 fc3 sc0 lsb2 ws0">&apos;SHOES-S-BLUE&apos;:<span class="_"> </span>{&apos;quantity&apos;:<span class="_"> </span>1},</div><div class="t m0 x66 h3b yc4b ffd fs18 fc3 sc0 lsb2 ws0">&apos;SHIRT-M-GRAY&apos;:<span class="_"> </span>{&apos;quantity&apos;:<span class="_"> </span>1}</div><div class="t m0 xe6 h3b y59c ffd fs18 fc3 sc0 lsb2 ws0">},</div><div class="t m0 xe6 h3b yc4c ffd fs18 fc3 sc0 lsb2 ws0">cart.products</div><div class="t m0 x36 h3b yc4d ffd fs18 fc3 sc0 ls6 ws0">)</div><div class="t m0 x87 h3b yc4e ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>test_add_and_remove_product(self):</div><div class="t m0 x36 h3b yc4f ffd fs18 fc3 sc0 lsb2 ws0">cart<span class="_"> </span>=<span class="_"> </span>ShoppingCart()</div><div class="t m0 x36 h3b yc50 ffd fs18 fc3 sc0 lsb2 ws0">product<span class="_"> </span>=<span class="_"> </span>Product(&apos;shoes&apos;,<span class="_"> </span>&apos;S&apos;,<span class="_"> </span>&apos;blue&apos;)</div><div class="t m0 x36 h3b yc51 ffd fs18 fc3 sc0 lsb2 ws0">cart.add_product(product)</div><div class="t m0 x36 h3b yc52 ffd fs18 fc3 sc0 lsb2 ws0">cart.remove_product(product)</div><div class="t m0 x36 h3b yc53 ffd fs18 fc3 sc0 lsb2 ws0">self.assertDictEqual({},<span class="_"> </span>cart.products)</div><div class="t m0 x87 h3b yc54 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>test_remove_too_many_products(self):</div><div class="t m0 x36 h3b yc55 ffd fs18 fc3 sc0 lsb2 ws0">cart<span class="_"> </span>=<span class="_"> </span>ShoppingCart()</div><div class="t m0 x36 h3b yc56 ffd fs18 fc3 sc0 lsb2 ws0">product<span class="_"> </span>=<span class="_"> </span>Product(&apos;shoes&apos;,<span class="_"> </span>&apos;S&apos;,<span class="_"> </span>&apos;blue&apos;)</div><div class="t m0 x36 h3b yc57 ffd fs18 fc3 sc0 lsb2 ws0">cart.add_product(product)</div><div class="t m0 x36 h3b yc58 ffd fs18 fc3 sc0 lsb2 ws0">cart.remove_product(product,<span class="_"> </span>quantity=2)</div><div class="t m0 x36 h3b yc59 ffd fs18 fc1 sc0 lsb2 ws0">self.assertDictEqual({},<span class="_"> </span>cart.products)</div><div class="t m0 x35 h15 y428 ff4 fsb fc3 sc0 ls7d ws346">You can fix the bu<span class="_ _e"></span>g in the shopping cart by updating </div><div class="t m5 x5b h24 y9ac ffd fsc fc3 sc0 lsa0 ws0">remove_produ<span class="_ _e"></span>ct</div><div class="t m0 x107 h15 y428 ff4 fsb fc3 sc0 ls42 ws345"> to delete a</div><div class="t m0 x35 h15 y429 ff4 fsb fc3 sc0 ls20 ws51">product from the cart if its quantity is <span class="_ _e"></span><span class="ff3 ls2f ws23">less than or equal</span><span class="ls180 ws47b"> to 0:</span></div><div class="t m0 x35 h3b yc5a ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>self.products[sku][&apos;quantity&apos;]<span class="_"> </span>&lt;=<span class="_"> </span>0:</div><div class="t m0 xe6 h3b ya38 ffd fs18 fc1 sc0 lsb2 ws0">del<span class="_"> </span>self.products[sku]</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
