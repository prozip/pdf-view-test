<div id="pf3a" class="pf w0 h0" data-page-no="3a"><div class="pc pc3a w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg3a.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">34</div><div class="t m0 x3 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 x29 h2c y1d0 ffb fs19 fcb sc0 lsf6 ws0">HAPTER</div><div class="t m0 x47 h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 2</div><div class="t m0 xca h2d y80 ffa fs7 fcb sc0 ls6 ws0">Separation of concerns</div><div class="t m0 x44 h15 y40 ff4 fsb fc3 sc0 ls31 ws300">You can start by creating the class definition<span class="ls42 ws27b"> and moving the functions into<span class="_ _e"></span> it as meth-</span></div><div class="t m0 x44 h15 y41 ff4 fsb fc3 sc0 ls38 wsaa">ods, as shown in the following listing. Remember that methods take </div><div class="t m5 x61 h24 y532 ffd fsc fc3 sc0 lsa0 ws0">self</div><div class="t m0 xa3 h15 y41 ff4 fsb fc3 sc0 ls21 ws3d1"> as their first</div><div class="t m0 x44 h15 y533 ff4 fsb fc3 sc0 ls71 ws0">argument.</div><div class="t m0 x44 h3b y534 ffd fs18 fc3 sc0 lsb2 ws0">import<span class="_"> </span>random</div><div class="t m0 x44 h3b y535 ffd fs18 fc3 sc0 lsb2 ws0">OPTIONS<span class="_"> </span>=<span class="_"> </span>[&apos;rock&apos;,<span class="_"> </span>&apos;paper&apos;,<span class="_"> </span>&apos;scissors&apos;]</div><div class="t m0 x44 h3b y536 ffd fs18 fc3 sc0 lsb2 ws0">class<span class="_"> </span>RockPaperScissorsSimulator:</div><div class="t m0 xae h3b y537 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>get_computer_choice(self):</div><div class="t m0 x97 h3b y538 ffd fs18 fc3 sc0 lsb2 ws0">return<span class="_"> </span>random.choice(OPTIONS)</div><div class="t m0 xae h3b y539 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>get_human_choice(self):</div><div class="t m0 x9e h3b y53a ffd fs18 fc3 sc0 lsb2 ws0">&apos;))<span class="_ _42"></span>choice:<span class="_ _43"></span>of<span class="_"> </span>your<span class="_ _44"></span>the<span class="_"> </span>number<span class="_ _45"></span>int(input(&apos;Enter<span class="_ _44"></span>=<span class="_ _43"></span>choice_number</div><div class="t m0 x3f h3b y53b ffd fs18 fc3 sc0 lsb2 ws0">1]<span class="_ _46"></span>-<span class="_ _47"></span>OPTIONS[choice_number<span class="_ _48"></span>return</div><div class="t m0 xae h3b y53c ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>print_options(self):</div><div class="t m0 x97 h3b y53d ffd fs18 fc3 sc0 lsb2 ws0">print(&apos;\n&apos;.join(f&apos;({i})<span class="_"> </span>{option.title()}&apos;<span class="_"> </span>for<span class="_"> </span>i,</div><div class="t m0 x44 h51 y53e ff9 fs15 fc9 sc0 ls11f ws0">➥ </div><div class="t m0 x32 h3b y53f ffd fs18 fc3 sc0 lsb2 ws0">option<span class="_"> </span>in<span class="_"> </span>enumerate(OPTIONS)))</div><div class="t m0 xae h3b y540 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>print_choices(self,<span class="_"> </span>human_choice,<span class="_"> </span>computer_choice):</div><div class="t m0 x97 h3b y541 ffd fs18 fc3 sc0 lsb2 ws0">print(f&apos;You<span class="_"> </span>chose<span class="_"> </span>{human_choice}&apos;)</div><div class="t m0 x97 h3b y542 ffd fs18 fc3 sc0 lsb2 ws0">print(f&apos;The<span class="_"> </span>computer<span class="_"> </span>chose<span class="_"> </span>{computer_choice}&apos;)</div><div class="t m0 xae h3b y543 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>print_win_lose(self,<span class="_"> </span>human_choice,<span class="_"> </span>computer_choice,</div><div class="t m0 x44 h51 y544 ff9 fs15 fc9 sc0 ls11f ws0">➥ </div><div class="t m0 x32 h3b y545 ffd fs18 fc3 sc0 lsb2 ws0">human_beats,<span class="_"> </span>human_loses_to):</div><div class="t m0 x97 h3b y546 ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>computer_choice<span class="_"> </span>==<span class="_"> </span>human_loses_to:</div><div class="t m0 xc3 h3b y547 ffd fs18 fc3 sc0 lsb2 ws0">print(f&apos;Sorry,<span class="_"> </span>{computer_choice}<span class="_"> </span>beats<span class="_"> </span>{human_choice}&apos;)</div><div class="t m0 x97 h3b y548 ffd fs18 fc3 sc0 lsb2 ws0">elif<span class="_"> </span>computer_choice<span class="_"> </span>==<span class="_"> </span>human_beats:</div><div class="t m0 xc3 h3b y549 ffd fs18 fc3 sc0 lsb2 ws0">print(f&apos;Yes,<span class="_"> </span>{human_choice}<span class="_"> </span>beats<span class="_"> </span>{computer_choice}!&apos;)</div><div class="t m0 xae h3b y54a ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>print_result(self,<span class="_"> </span>human_choice,<span class="_"> </span>computer_choice):</div><div class="t m0 x97 h3b y54b ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>human_choice<span class="_"> </span>==<span class="_"> </span>computer_choice:</div><div class="t m0 xc3 h3b y54c ffd fs18 fc3 sc0 lsb2 ws0">print(&apos;Draw!&apos;)</div><div class="t m0 x97 h3b y54d ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>human_choice<span class="_"> </span>==<span class="_"> </span>&apos;rock&apos;:</div><div class="t m0 xc3 h3b y54e ffd fs18 fc3 sc0 lsb2 ws0">self.print_win_lose(&apos;rock&apos;,<span class="_"> </span>computer_choice,<span class="_"> </span>&apos;scissors&apos;,<span class="_"> </span>&apos;paper&apos;)</div><div class="t m0 x97 h3b y54f ffd fs18 fc3 sc0 lsb2 ws0">elif<span class="_"> </span>human_choice<span class="_"> </span>==<span class="_"> </span>&apos;paper&apos;:</div><div class="t m0 xc3 h3b y550 ffd fs18 fc3 sc0 lsb2 ws0">self.print_win_lose(&apos;paper&apos;,<span class="_"> </span>computer_choice,<span class="_"> </span>&apos;rock&apos;,<span class="_"> </span>&apos;scissors&apos;)</div><div class="t m0 x97 h3b y551 ffd fs18 fc3 sc0 lsb2 ws0">elif<span class="_"> </span>human_choice<span class="_"> </span>==<span class="_"> </span>&apos;scissors&apos;:</div><div class="t m0 xc3 h3b y552 ffd fs18 fc1 sc0 lsb2 ws0">self.print_win_lose(&apos;scissors&apos;,<span class="_"> </span>computer_choice,<span class="_"> </span>&apos;paper&apos;,<span class="_"> </span>&apos;rock&apos;)</div><div class="t m0 x44 h15 y553 ff4 fsb fc3 sc0 ls30 ws394">Once you’ve moved the functions, you can create a new </div><div class="t m5 x4f h24 y554 ffd fsc fc3 sc0 lsa0 ws0">simulate</div><div class="t m0 x33 h15 y553 ff4 fsb fc3 sc0 ls78 ws3d2"> method for<span class="_ _e"></span> calling</div><div class="t m0 x44 h15 y555 ff4 fsb fc3 sc0 ls42 ws1ec">them all. Within a class, you nee<span class="_ _e"></span>d to write </div><div class="t m5 x3f h24 y556 ffd fsc fc3 sc0 lsa0 ws0">self.some_me<span class="_ _e"></span>thod()</div><div class="t m0 x5 h15 y555 ff4 fsb fc3 sc0 ls31 ws200"> to indicate you want</div><div class="t m0 x44 h15 y557 ff4 fsb fc3 sc0 ls48 ws3d3">to call the </div><div class="t m5 x79 h24 y558 ffd fsc fc3 sc0 lsa0 ws0">some_method</div><div class="t m0 xd3 h15 y557 ff4 fsb fc3 sc0 ls36 ws154"> method on the class (as oppo<span class="ls2d ws3d4">sed to some other function in</span></div><div class="t m0 x44 h15 y559 ff4 fsb fc3 sc0 ls30 ws187">the namespace). Note th<span class="_ _e"></span>at even though </div><div class="t m5 x65 h24 y55a ffd fsc fc3 sc0 lsa0 ws0">some_method</div><div class="t m0 xee h15 y559 ff4 fsb fc3 sc0 ls34 ws3d5"> takes a </div><div class="t m5 x5 h24 y55a ffd fsc fc3 sc0 lsa0 ws0">self</div><div class="t m0 x78 h15 y559 ff4 fsb fc3 sc0 ls36 ws3d6"> argument in its</div><div class="t m0 x44 h15 y55b ff4 fsb fc3 sc0 ls44 ws3d7">definition, you do not pass it to <span class="_ _0"></span>the method when you call it. Python pass<span class="_ _0"></span>es </div><div class="t m5 xe3 h24 y55c ffd fsc fc3 sc0 lsa0 ws0">self</div><div class="t m0 xcf h15 y55d ff4 fsb fc3 sc0 ls74 ws3d8"> to</div><div class="t m0 x44 h15 y55e ff4 fsb fc3 sc0 ls2e ws44">methods automatical<span class="_ _0"></span>ly. </div><div class="t m5 x16 h24 y55f ffd fsc fc3 sc0 lsa0 ws0">simulate</div><div class="t m0 x11 h15 y560 ff4 fsb fc3 sc0 ls31 ws25"> calls the functions to make the simulation run:</div><div class="t m0 x37 h20 y561 ffb fs7 fc4 sc0 ls6 ws0">Moving functions into a class as methods<span class="_ _4c"></span>Listing<span class="_"> </span>2.4</div><div class="c xb3 y562 w18 h60"><div class="t m0 x43 h14 y563 ff12 fs7 fcb sc0 lsd6 ws0">Methods <span class="ff13 ls6">n</span><span class="ls10c ws3d9">eed a </span></div><div class="t m0 x43 h14 y564 ff12 fs7 fcb sc0 lsde ws3cf">“self<span class="_ _e"></span>” a<span class="_ _e"></span><span class="ff13 ls6 ws0">r<span class="ff12 lsdd">gu<span class="_ _0"></span><span class="ff13 ls6">m<span class="ff12">e</span>n<span class="ff12 lsd2">t.</span></span></span></span></div></div><div class="c xe9 y565 w1b h61"><div class="t m0 x43 h14 y566 ff12 fs7 fcb sc0 lsd6 ws3da">Methods with </div><div class="t m0 x43 h14 y567 ff12 fs7 fcb sc0 lsed ws0">existi<span class="ff13 ls6">n</span><span class="lse1">g a<span class="ff13 ls6">r</span>gu<span class="ff13 ls6">m<span class="ff12">e</span>n</span><span class="lsec">ts </span></span></div><div class="t m0 x43 h14 y568 ff12 fs7 fcb sc0 ls105 ws0">still <span class="ff13 ls6">n</span><span class="ls88 ws314">eed “self<span class="_ _e"></span>”.</span></div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
