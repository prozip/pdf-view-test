<div id="pf93" class="pf w0 h0" data-page-no="93"><div class="pc pc93 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg93.png"/><div class="t m0 xa0 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">123<span class="_ _aa"></span><span class="ffa">An initial code structure, by concern</span></div><div class="t m0 x35 h3b y396 ffd fs18 fc3 sc0 lsb2 ws0">...</div><div class="t m0 x35 h3b y40d ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>__name__<span class="_"> </span>==<span class="_"> </span>&apos;__main__&apos;:</div><div class="t m0 x87 h3b y483 ffd fs18 fc3 sc0 lsb2 ws0">...</div><div class="t m0 x87 h3b y569 ffd fs18 fc3 sc0 lsb2 ws0">options<span class="_"> </span>=<span class="_"> </span>{</div><div class="t m0 x36 h3b y485 ffd fs18 fc3 sc0 lsb2 ws0">&apos;A&apos;:<span class="_"> </span>Option(&apos;Add<span class="_"> </span>a<span class="_"> </span>bookmark&apos;,<span class="_"> </span>commands.AddBookmarkCommand()),</div><div class="t m0 x36 h3b y486 ffd fs18 fc3 sc0 lsb2 ws0">&apos;B&apos;:<span class="_"> </span>Option(&apos;List<span class="_"> </span>bookmarks<span class="_"> </span>by<span class="_"> </span>date&apos;,</div><div class="t m0 x35 h51 y10 ff9 fs15 fc9 sc0 ls11f ws0">➥ </div><div class="t m0 x83 h3b y487 ffd fs18 fc3 sc0 lsb2 ws0">commands.ListBookmarksCommand()),</div><div class="t m0 x36 h3b y58f ffd fs18 fc3 sc0 lsb2 ws0">&apos;T&apos;:<span class="_"> </span>Option(&apos;List<span class="_"> </span>bookmarks<span class="_"> </span>by<span class="_"> </span>title&apos;,</div><div class="t m0 x35 h51 yc48 ff9 fs15 fc9 sc0 ls11f ws0">➥ </div><div class="t m0 x83 h3b y488 ffd fs18 fc3 sc0 lsb2 ws0">commands.ListBookmarksCommand(order_by=&apos;title&apos;)),</div><div class="t m0 x36 h3b yfe2 ffd fs18 fc3 sc0 lsb2 ws0">&apos;D&apos;:<span class="_"> </span>Option(&apos;Delete<span class="_"> </span>a<span class="_"> </span>bookmark&apos;,<span class="_"> </span>commands.DeleteBookmarkCommand()),</div><div class="t m0 x36 h3b y591 ffd fs18 fc3 sc0 lsb2 ws0">&apos;Q&apos;:<span class="_"> </span>Option(&apos;Quit&apos;,<span class="_"> </span>commands.QuitCommand()),</div><div class="t m0 x87 h3b y592 ffd fs18 fc3 sc0 ls6 ws0">}</div><div class="t m0 x87 h3b yc49 ffd fs18 fc1 sc0 lsb2 ws0">print_options(options)</div><div class="t m0 x35 h15 y9e9 ff4 fsb fc3 sc0 ls1c ws130">After you’ve added the menu options, runni<span class="ls3a ws19f">ng Bark should print<span class="_ _e"></span> all of the options</span></div><div class="t m0 x35 h15 y9ea ff4 fsb fc3 sc0 ls80 ws409">you added. You can’t yet trigger them; for th<span class="wsff">at, <span class="_ _e"></span>you’ll need to get some user inpu<span class="_ _e"></span>t. </span></div><div class="t m0 x35 h30 yfe3 ffb fsc fc2 sc0 ls6 ws0">U</div><div class="t m0 xbc h5a yfe4 ffb fs20 fc2 sc0 ls1d2 ws0">SER</div><div class="t m0 x82 h30 yfe3 ffb fsc fc2 sc0 ls6 ws0"> </div><div class="t m0 x4 h5a yfe4 ffb fs20 fc2 sc0 ls15a ws0">INPUT</div><div class="t m0 x35 h15 yfe5 ff4 fsb fc3 sc0 ls5f ws4ab">With our overall go<span class="_ _0"></span>al of threading presentat<span class="_ _0"></span>ion to business logic to pe<span class="_ _0"></span>rsistence, what</div><div class="t m0 x35 h15 yfe6 ff4 fsb fc3 sc0 ls2d ws177">remains to be added is a bit of interactivit<span class="ls6b ws122">y with Bark users. The approach for gett<span class="_ _0"></span>ing</span></div><div class="t m0 x35 h15 yfe7 ff4 fsb fc3 sc0 ls3a ws28">the user’s desired option goes like this:</div><div class="t m0 x8a h3d yfe8 ffb fs1e fca sc0 ls6 ws0">1</div><div class="t m0 x48 h15 y1f9 ff4 fsb fc3 sc0 ls4e ws3e">Prompt the user to enter a choice, using Python’s built-in </div><div class="t m5 x5c h24 yfe9 ffd fsc fc3 sc0 lsa0 ws0">input</div><div class="t m0 xd4 h15 y1f9 ff4 fsb fc3 sc0 ls34 ws22"> function.</div><div class="t m0 x8a h3d yfea ffb fs1e fca sc0 ls6 ws0">2</div><div class="t m0 x48 h15 yfeb ff4 fsb fc3 sc0 ls30 ws78b">If the user’s choice matches one of those listed, call that option’s </div><div class="t m5 x109 h24 yfec ffd fsc fc3 sc0 lsa0 ws0">choose</div><div class="t m0 x48 h15 yaed ff4 fsb fc3 sc0 ls44 ws0">method.</div><div class="t m0 x8a h3d yfed ffb fs1e fca sc0 ls6 ws0">3</div><div class="t m0 x48 h15 y7ce ff4 fsb fc3 sc0 ls6 ws788">Otherwise, repeat.</div><div class="t m0 x35 h15 yfee ff4 fsb fc3 sc0 ls6 ws72">What approach migh<span class="_ _e"></span>t you use in Python to g<span class="_ _e"></span>et this repeating behavior?</div><div class="t m0 x8a h3d yfef ffb fs1e fca sc0 ls6 ws0">1</div><div class="t m0 x48 h15 yff0 ff4 fsb fc3 sc0 ls1f ws0">A </div><div class="t m5 x3d h24 yff1 ffd fsc fc3 sc0 lsa0 ws0">while</div><div class="t m0 x1d h15 yff0 ff4 fsb fc3 sc0 ls3b ws70"> loop</div><div class="t m0 x8a h3d yff2 ffb fs1e fca sc0 ls6 ws0">2</div><div class="t m0 x48 h15 yff3 ff4 fsb fc3 sc0 ls1f ws0">A </div><div class="t m5 x3d h24 yff2 ffd fsc fc3 sc0 lsa0 ws0">for</div><div class="t m0 x8c h15 yff3 ff4 fsb fc3 sc0 ls71 wsd4"> loop </div><div class="t m0 x8a h3d yff4 ffb fs1e fca sc0 ls6 ws0">3</div><div class="t m0 x48 h15 yff5 ff4 fsb fc3 sc0 ls1f ws14">A recursive function call</div><div class="t m0 x35 h15 y7d7 ff4 fsb fc3 sc0 ls48 ws4b8">Because there isn’t a definitive end state fo<span class="ls42 ws27b">r getting the user’s input (they might enter</span></div><div class="t m0 x35 h15 yd9c ff4 fsb fc3 sc0 ls62 ws78c">an invalid choi<span class="_ _e"></span>ce four billion t<span class="_ _e"></span>imes), a </div><div class="t m5 x27 h24 yff6 ffd fsc fc3 sc0 lsa0 ws0">while</div><div class="t m0 x2e h15 yd9c ff4 fsb fc3 sc0 ls2f ws1c1"> loop (option 1) makes the most sense.</div><div class="t m0 x35 h15 y8f3 ff3 fsb fc3 sc0 ls71 ws0">While<span class="ff4 ws15e"> the user’s choice is invalid, keep prom<span class="ls5e ws2db">pting them. You can t<span class="_ _e"></span>ake it easy on them</span></span></div><div class="t m0 x35 h15 yd9e ff4 fsb fc3 sc0 ls44 ws34">by accepting the upper- and lowercase ve<span class="ls30 wsbd">rsions of each option if you like.</span></div><div class="t m0 x83 h15 yff7 ff4 fsb fc3 sc0 ls2d ws780"> Write a </div><div class="t m5 xac h24 yff8 ffd fsc fc3 sc0 lsa0 ws0">get_option_c<span class="_ _e"></span>hoice</div><div class="t m0 x133 h15 yff7 ff4 fsb fc3 sc0 ls3a ws18c"> function, and use it after printing the<span class="_ _e"></span> options to get</div><div class="t m0 x35 h15 y7a ff4 fsb fc3 sc0 ls36 ws153">the user’s choice. Then call that option’s </div><div class="t m5 x40 h24 yff9 ffd fsc fc3 sc0 lsa0 ws0">choose</div><div class="t m0 x25 h15 y7a ff4 fsb fc3 sc0 ls30 ws414"> method. Try it out, then compare</div><div class="t m0 x35 h15 ye24 ff4 fsb fc3 sc0 ls25 ws1a">your work with the following listing.</div><div class="t m0 x35 h3b y4cd ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>option_choice_is_valid(choice,<span class="_"> </span>options):</div><div class="t m0 x87 h3b yffa ffd fs18 fc3 sc0 lsb2 ws0">return<span class="_"> </span>choice<span class="_"> </span>in<span class="_"> </span>options<span class="_"> </span>or<span class="_"> </span>choice.upper()<span class="_"> </span>in<span class="_"> </span>options</div><div class="t m0 x35 h3b yffb ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>get_option_choice(options):</div><div class="t m0 xa7 h20 yffc ffb fs7 fc4 sc0 ls6 ws0">Getting a user’s choice of menu option<span class="_ _b4"></span>Listing<span class="_"> </span>6.13</div><div class="c x41 y3f w79 he4"><div class="t m0 x42 h14 yffd ff12 fs7 fcb sc0 ls6 ws317">The choice is valid if </div><div class="t m0 x42 h14 yffe ff12 fs7 fcb sc0 ls105 ws325">the lette<span class="ff13 ls6 ws0">r<span class="ff12"> </span>m<span class="ff12 lsde">atches </span></span></div><div class="t m0 x42 h14 yfff ff12 fs7 fcb sc0 ls6 ws0">o<span class="ff13">n</span><span class="lsdc ws78d">e of the keys i</span><span class="ff13">n</span><span class="ls12f ws78e"> the </span></div><div class="t m0 x42 h14 y1000 ff12 fs7 fcb sc0 ls150 ws0">optio<span class="ff13 ls6">n</span><span class="ls111 ws388">s dictio</span><span class="ff13 ls6">n<span class="ff12">a</span>r</span><span class="lsd3">y.</span></div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
