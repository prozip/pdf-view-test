<div id="pf2d" class="pf w0 h0" data-page-no="2d"><div class="pc pc2d w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg2d.png"/><div class="t m0 xbf h14 y80 ff7 fs7 fcb sc0 ls6 ws0">21<span class="_ _39"></span><span class="ffa">Namespacing</span></div><div class="t m0 x83 h15 y40 ff4 fsb fc3 sc0 ls71 ws302"> Unlike in some languages, you won’t <span class="ff3 ws0">explici<span class="_ _0"></span>tly<span class="ff4 ls2f ws303"> create namespaces in your Python</span></span></div><div class="t m0 x35 h15 y41 ff4 fsb fc3 sc0 ls8d ws304">code, but<span class="_ _e"></span> your code structur<span class="_ _e"></span>e will affect<span class="ls38 ws305"> what namespaces are created and how <span class="_ _e"></span>they</span></div><div class="t m0 x35 h15 y42 ff4 fsb fc3 sc0 ls5e ws306">interact. As an example, creating a Python <span class="ff3 ls34 ws0">module</span><span class="ls3d ws2bc"> automatically <span class="_ _e"></span>crea<span class="ls25 ws307">tes an additional</span></span></div><div class="t m0 x35 h15 y43 ff4 fsb fc3 sc0 ls36 ws6a">namespace for that module. At <span class="ls34 ws9f">its simplest, a Python module <span class="ls42 ws26e">is a .py file that contains</span></span></div><div class="t m0 x35 h15 y44 ff4 fsb fc3 sc0 ls31 ws25">some code. A file named sa<span class="ws58">les_tax.py, for example, is “the sales_tax module”:</span></div><div class="t m0 x35 h3b y246 ffd fs18 fc3 sc0 ls69 ws0">#<span class="_"> </span>sales_tax.py</div><div class="t m0 x35 h3b y248 ffd fs18 fc3 sc0 ls69 ws0">def<span class="_"> </span>add_sales_tax(total,<span class="_"> </span>tax_rate):</div><div class="t m0 x87 h3b y369 ffd fs18 fc1 sc0 ls69 ws0">return<span class="_"> </span>total<span class="_"> </span>*<span class="_"> </span>tax_rate</div><div class="t m0 x35 h15 y36a ff4 fsb fc3 sc0 ls38 ws308">Each module has a <span class="ff3 ls31 ws0">global<span class="ff4 ws309"> namespace, which code in the module can access freely.</span></span></div><div class="t m0 x35 h15 y36b ff4 fsb fc3 sc0 ls31 ws116">Functions, classes, and variables that aren’t<span class="ls71 ws241"> nested inside anything are in the module’s</span></div><div class="t m0 x35 h15 y253 ff4 fsb fc3 sc0 ls34 ws9f">global namespace:</div><div class="t m0 x35 h3b y36c ffd fs18 fc3 sc0 lsb2 ws0">#<span class="_"> </span>sales_tax.py</div><div class="t m0 x35 h3b y36d ffd fs18 fc3 sc0 lsb2 ws0">TAX_RATES_BY_STATE<span class="_"> </span>=<span class="_"> </span>{</div><div class="t m0 x87 h3b y36e ffd fs18 fc3 sc0 lsb2 ws0">&apos;MI&apos;:<span class="_"> </span>1.06,</div><div class="t m0 x87 h3b y36f ffd fs18 fc3 sc0 lsfb ws0">#.<span class="_ _7"></span>.<span class="_ _3a"></span>.</div><div class="t m0 x35 h3b y370 ffd fs18 fc3 sc0 ls6 ws0">}</div><div class="t m0 x35 h3b y371 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>add_sales_tax(total,<span class="_"> </span>state):</div><div class="t m0 x87 h3b y372 ffd fs18 fc3 sc0 lsb2 ws0">return<span class="_"> </span>total<span class="_"> </span>*<span class="_"> </span>TAX_RATES_BY_STATE[state]</div><div class="t m0 x35 h15 y98 ff4 fsb fc3 sc0 ls2f ws30a">Functions and classes in a module also have a <span class="ff3 ls3b ws0">local</span><span class="ls3d ws30b"> name<span class="_ _e"></span>space that only they can</span></div><div class="t m0 x35 h15 y373 ff4 fsb fc3 sc0 ls1c ws0">access:</div><div class="t m0 x35 h3b y374 ffd fs18 fc3 sc0 lsb2 ws0">#<span class="_"> </span>sales_tax.py</div><div class="t m0 x35 h3b y375 ffd fs18 fc3 sc0 lsb2 ws0">TAX_RATES_BY_STATE<span class="_"> </span>=<span class="_"> </span>{</div><div class="t m0 x87 h3b y376 ffd fs18 fc3 sc0 lsb2 ws0">&apos;MI&apos;:<span class="_"> </span>1.06,</div><div class="t m0 x87 h3b y377 ffd fs18 fc3 sc0 lsb2 ws0">...</div><div class="t m0 x35 h3b y378 ffd fs18 fc3 sc0 ls6 ws0">}</div><div class="t m0 x35 h3b y379 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>add_sales_tax(total,<span class="_"> </span>state):</div><div class="t m0 x87 h3b y37a ffd fs18 fc3 sc0 lsb2 ws0">tax_rate<span class="_"> </span>=<span class="_"> </span>TAX_RATES_BY_STATE[state]</div><div class="t m0 x87 h3b y37b ffd fs18 fc3 sc0 lsb2 ws0">return<span class="_"> </span>total<span class="_"> </span>*<span class="_"> </span>tax_rate</div><div class="t m0 x35 h15 y37c ff4 fsb fc3 sc0 ls38 ws30c">A module that wants to use a variable, function, or class from another <span class="_ _e"></span>module must</div><div class="t m0 x35 h15 y37d ff3 fsb fc3 sc0 ls81 ws0">import<span class="ff4 ls2f ws1c1"> it into its global namespace. Importing <span class="_ _e"></span><span class="ls35 ws30d">is<span class="_ _0"></span> a way of pulling a name from some-</span></span></div><div class="t m0 x35 h15 y37e ff4 fsb fc3 sc0 ls38 ws26">where else into the desired namespace.</div><div class="t m0 x35 h3b y37f ffd fs18 fc3 sc0 lsb2 ws0">#<span class="_"> </span>receipt.py</div><div class="t m0 x35 h3b y380 ffd fs18 fc3 sc0 lsb2 ws0">from<span class="_"> </span>sales_tax<span class="_"> </span>import<span class="_"> </span>add_sales_tax</div><div class="t m0 x35 h3b y381 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>print_receipt():</div><div class="t m0 x87 h3b y382 ffd fs18 fc3 sc0 lsb2 ws0">total<span class="_"> </span>=<span class="_"> </span>...</div><div class="c xba y383 w9 h4a"><div class="t m0 x43 h14 y384 ff12 fs7 fcb sc0 lsee ws30e">TAX_RATES_BY_STATE is i<span class="ff13 ls6 ws0">n</span><span class="lsda ws2aa"> the </span></div><div class="t m0 x43 h14 y385 ff13 fs7 fcb sc0 ls6 ws0">m<span class="ff12 lsfc ws30f">odule’s global <span class="_ _e"></span></span>n<span class="ff12">a</span>m<span class="ff12">espace.</span></div></div><div class="c x98 y386 w9 h4b"><div class="t m0 x43 h14 y387 ff12 fs7 fcb sc0 lsfd ws310">Code i<span class="ff13 ls6 ws0">n</span><span class="lsda ws2aa"> the <span class="ff13 ls6 ws0">m</span><span class="ws311">odule ca<span class="ff13 ls6 ws0">n<span class="ff12"> </span></span></span></span></div><div class="t m0 x43 h14 y388 ff12 fs7 fcb sc0 lsda ws312">use TAX_RATES_BY_STATE </div><div class="t m0 x43 h14 y389 ff12 fs7 fcb sc0 lsda ws2d2">without a<span class="ff13 ls6 ws0">n</span><span class="lsfe ws313">y fuss.</span></div></div><div class="c x4e y38a w9 h4c"><div class="t m0 x43 h14 y38b ff12 fs7 fcb sc0 lsec ws0">tax_<span class="ff13 ls6">r</span><span class="ls88 ws314">ate is o</span><span class="ff13 ls6">n</span><span class="lsdc ws2ac">ly i</span><span class="ff13 ls6">n</span><span class="lsff ws315"> the local </span></div><div class="t m0 x43 h14 y38c ff12 fs7 fcb sc0 ls100 ws316">scope fo<span class="ff13 ls6 ws0">r</span><span class="lsd6 ws2a7"> add_sales_tax().</span></div></div><div class="c x12 y38d wa h4b"><div class="t m0 x43 h14 y38e ff12 fs7 fcb sc0 lsfd ws310">Code i<span class="ff13 ls6 ws0">n<span class="ff12 ws317"> add_sales_tax() </span></span></div><div class="t m0 x43 h14 y38f ff12 fs7 fcb sc0 ls6 ws0">ca<span class="ff13">n</span><span class="ls101 ws22f"> use tax_</span><span class="ff13">r</span><span class="lse4 ws318">ate without </span></div><div class="t m0 x43 h14 y390 ff12 fs7 fcb sc0 ls6 ws0">a<span class="ff13">n</span><span class="ls102 ws319">y fuss.</span></div></div><div class="c xd0 y391 wa h4d"><div class="t m0 x43 h14 y392 ff12 fs7 fcb sc0 lsfd ws31a">The add_sales_tax fu<span class="ff13 ls6 ws0">n<span class="ff12 lse4">ctio</span>n</span><span class="ls103 ws31b"> is </span></div><div class="t m0 x43 h14 y393 ff12 fs7 fcb sc0 lsd5 ws2a6">added to the <span class="ff13 ls6 ws0">r</span><span class="lsda ws311">eceipt global </span></div><div class="t m0 x43 h14 y394 ff13 fs7 fcb sc0 ls6 ws0">n<span class="ff12">a</span>m<span class="ff12 ls102">espace.</span></div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
