<div id="pfab" class="pf w0 h0" data-page-no="ab"><div class="pc pcab w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bgab.png"/><div class="t m0 xa0 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">147<span class="_ _cc"></span><span class="ffa">The inheritance of programming present</span></div><div class="t m0 x35 h26 y1251 ffc fs15 fc2 sc0 ls12f ws0">Substitutability<span class="_ _cd"></span>8<span class="_ _0"></span>.<span class="_ _1d"></span>2.<span class="_ _0"></span>2</div><div class="t m0 x35 h15 y3fa ff4 fsb fc3 sc0 ls31 ws125">Barbara Liskov, Institute Prof<span class="ls1f ws4ac">essor at MIT, developed a <span class="ls2e ws610">principle <span class="_ _0"></span>outlining the con-</span></span></div><div class="t m0 x35 h15 y150 ff4 fsb fc3 sc0 ls60 ws853">cept of <span class="ff3 ls2d ws0">substitutability</span><span class="ls36 ws350"> as it relates to inheritance. <span class="ls38 ws1f0">The Liskov substitution principle</span></span></div><div class="t m0 x35 h15 y151 ff4 fsb fc3 sc0 ls38 wsc5">states that in a program, any instance of a class must be replaceable by an instance of</div><div class="t m0 x35 h15 y152 ff4 fsb fc3 sc0 ls71 wsdf">one of its subclasses without affect<span class="ls20 ws9b">ing the correctness of <span class="_ _e"></span>the program.</span></div><div class="t m0 xaa h31 y1252 ff4 fs1a fc3 sc0 ls6 ws0">2</div><div class="t m0 x105 h15 y152 ff3 fsb fc3 sc0 ls50 ws854"> Correctness<span class="ff4"> in</span></div><div class="t m0 x35 h15 y1253 ff4 fsb fc3 sc0 ls31 ws378">this context means the program remains erro<span class="ls1c ws2ea">r-free and achieves the same basic out-</span></div><div class="t m0 x35 h15 y1254 ff4 fsb fc3 sc0 ls34 ws11f">comes, though the precise result may be di<span class="ls20 ws330">fferent or achieved in a different manner.</span></div><div class="t m0 x35 h15 y98 ff4 fsb fc3 sc0 ls9e ws285">Substitut<span class="_ _0"></span>ability arises fro<span class="_ _0"></span>m su<span class="ls31 ws25">bclasses strictly adhering to <span class="ls38 ws26">their superclasses’ interface.</span></span></div><div class="t m0 x83 h15 y373 ff4 fsb fc3 sc0 ls3a ws254"> It’s not difficult to stray from this prin<span class="ls36 ws25d">ciple in Python. Consider the following list-</span></div><div class="t m0 x35 h15 y1255 ff4 fsb fc3 sc0 ls2f wsa2">ing, which is perfectly valid Python c<span class="_ _0"></span>ode that<span class="ls1c ws17f"> models slugs and snails (two types of gas-</span></div><div class="t m0 x35 h15 ybf0 ff4 fsb fc3 sc0 ls3a ws254">tropod). The </div><div class="t m5 x18 h24 y1256 ffd fsc fc3 sc0 lsa0 ws0">Snail</div><div class="t m0 xb1 h15 ybf0 ff4 fsb fc3 sc0 ls7d ws4f4"> inherits from </div><div class="t m5 xb3 h24 y1256 ffd fsc fc3 sc0 lsa0 ws0">Slug</div><div class="t m0 x4e h15 ybf0 ff4 fsb fc3 sc0 ls6b ws855"> (snails and slugs are <span class="_ _0"></span>th<span class="ls31 wsb5">e same, aside from the</span></div><div class="t m0 x35 h15 ybf1 ff4 fsb fc3 sc0 ls48 ws157">shell), and you might even say the </div><div class="t m5 xa9 h24 y1257 ffd fsc fc3 sc0 lsa0 ws0">Snail</div><div class="t m0 x80 h15 ybf1 ff4 fsb fc3 sc0 ls2d ws780"> is specializing the </div><div class="t m5 x7a h24 y1257 ffd fsc fc3 sc0 lsa0 ws0">Slug</div><div class="t m0 x81 h15 ybf1 ff4 fsb fc3 sc0 ls34 ws2f2"> by adding informa-</div><div class="t m0 x35 h15 y5ed ff4 fsb fc3 sc0 ls3d ws50f">tion about its shell. But the </div><div class="t m5 x69 h24 y1258 ffd fsc fc3 sc0 lsa0 ws0">Snail</div><div class="t m0 x10b h15 y5ed ff4 fsb fc3 sc0 ls42 ws1d1"> is breaking substitutability, because a program that</div><div class="t m0 x35 h15 ybf2 ff4 fsb fc3 sc0 ls47 ws4aa">is using a </div><div class="t m5 xaf h24 y124a ffd fsc fc3 sc0 lsa0 ws0">Slug</div><div class="t m0 x17 h15 ybf2 ff4 fsb fc3 sc0 lsc5 ws381"> can’t replace it wi<span class="_ _0"></span>th a </div><div class="t m5 x22 h24 y124a ffd fsc fc3 sc0 lsa0 ws0">Snail</div><div class="t m0 x10d h15 ybf2 ff4 fsb fc3 sc0 ls31 ws58"> without adding the </div><div class="t m5 x73 h24 y124a ffd fsc fc3 sc0 lsa0 ws0">shell_size</div><div class="t m0 x13b h15 ybf2 ff4 fsb fc3 sc0 ls3e ws2d"> argument</div><div class="t m0 x35 h15 ybf3 ff4 fsb fc3 sc0 ls4e ws3e">to the </div><div class="t m5 x97 h24 y1259 ffd fsc fc3 sc0 lsa0 ws0">__init__</div><div class="t m0 xa7 h15 ybf3 ff4 fsb fc3 sc0 ls31 ws25"> method, as shown in the following listing.</div><div class="t m0 x35 h3b y125a ffd fs18 fc3 sc0 ls69 ws0">class<span class="_"> </span>Slug:</div><div class="t m0 x87 h3b y1102 ffd fs18 fc3 sc0 ls69 ws0">def<span class="_"> </span>__init__(self,<span class="_"> </span>name):</div><div class="t m0 x36 h3b y1103 ffd fs18 fc3 sc0 ls69 ws0">self.name<span class="_"> </span>=<span class="_"> </span>name</div><div class="t m0 x87 h3b y125b ffd fs18 fc3 sc0 ls69 ws0">def<span class="_"> </span>crawl(self):</div><div class="t m0 x36 h3b y125c ffd fs18 fc3 sc0 ls69 ws0">print(&apos;slime<span class="_"> </span>trail!&apos;)</div><div class="t m0 x35 h3b y10e6 ffd fs18 fc3 sc0 ls69 ws0">class<span class="_"> </span>Snail(Slug):</div><div class="t m0 x87 h3b y10e7 ffd fs18 fc3 sc0 ls69 ws0">def<span class="_"> </span>__init__(self,<span class="_"> </span>name,<span class="_"> </span>shell_size):</div><div class="t m0 x17 h20 y125d ffb fs7 fc4 sc0 ls6 ws0">A subclass that breaks substitutability<span class="_ _ce"></span>Listing<span class="_"> </span>8.1</div><div class="c x35 y125e w9c h108"><div class="t m0 xf5 h5f y125f ff15 fs1c fc12 sc0 ls6 ws0">Bicycle</div><div class="t m0 x15 h5f y1260 ff15 fs1c fc12 sc0 ls6 ws0">Tire</div><div class="t m0 xaf h5f y1261 ff15 fs1c fc12 sc0 ls6 ws0">Frame</div><div class="t m0 x22 h5f y1262 ff15 fs1c fc12 sc0 ls6 ws0">AluminumFrame</div><div class="t m0 x85 h5f y1263 ff15 fs1c fc12 sc0 ls6 ws0">CarbonFiberFrame</div><div class="t m0 x4e h5f y1260 ff15 fs1c fc12 sc0 ls6 ws0">FancyTire</div><div class="t m0 x10c h36 y1264 ff11 fs1c fc12 sc0 ls6 ws0">A bicycle</div><div class="t m0 xb h36 y1265 ff11 fs1c fc12 sc0 ls6 ws0">has-a frame.</div><div class="t m0 x10c h36 y1266 ff11 fs1c fc12 sc0 ls6 ws0">A bicycle</div><div class="t m0 xf7 h36 y1267 ff11 fs1c fc12 sc0 ls6 ws0">has-a tire. </div><div class="t m0 x67 h36 y1268 ff11 fs1c fc12 sc0 ls13b ws522">An aluminum frame</div><div class="t m0 x16 h36 y1269 ff11 fs1c fc12 sc0 ls13b ws522">is-a frame.</div><div class="t m0 xd1 h36 y126a ff11 fs1c fc12 sc0 ls13b ws44e">A carbon fiber frame</div><div class="t m0 x16 h36 y126b ff11 fs1c fc12 sc0 ls13b ws522">is-a frame.</div><div class="t m0 xbe h36 y1266 ff11 fs1c fc12 sc0 ls6 ws80c">A fancy tire</div><div class="t m0 xa8 h36 y1267 ff11 fs1c fc12 sc0 ls6 ws522">is-a tire.</div><div class="t m0 xfd h36 y126c ff11 fs1c fc12 sc0 ls13b ws0">Inheritance</div><div class="t m0 xfd h36 y126d ff11 fs1c fc12 sc0 ls13b ws0">Composition</div></div><div class="c x35 y10e2 w2 h109"><div class="t m0 x2 h2b y126e ffb fs18 fcb sc0 ls17 ws43c">How inheritance and composition <span class="_ _0"></span>work together<span class="_ _cf"></span>Figure 8.3</div></div><div class="c x6a y126f w7b h10a"><div class="t m0 xfd h14 y1270 ff12 fs7 fcb sc0 ls6 ws0">S<span class="ff13">n</span><span class="lsee ws2cf">ail i</span><span class="ff13">n</span><span class="lsd3">he</span><span class="ff13">r</span><span class="ls100 ws316">its f</span><span class="ff13">r</span>o<span class="ff13">m</span><span class="lsec ws4f0"> Slug.</span></div></div><div class="c xd y1271 w8d h102"><div class="t m0 x12e h14 y11db ff12 fs7 fcb sc0 lsec ws0">Usi<span class="ff13 ls6">n</span><span class="ls19d ws7e8">g a diffe</span><span class="ff13 ls6">r<span class="ff12">e</span>n</span><span class="lsd2 ws35c">t i</span><span class="ff13 ls6">n</span>sta<span class="ff13 ls6">n<span class="ff12">ce </span></span></div><div class="t m0 x12e h14 y11dc ff12 fs7 fcb sc0 ls6 ws0">c<span class="ff13">r</span>eatio<span class="ff13">n</span><span class="ls10e ws55a"> sig</span><span class="ff13">n</span><span class="ls10f">atu</span><span class="ff13">r</span><span class="ls10c ws3d9">e is a co</span><span class="ff13 ls10e">mm</span>o<span class="ff13">n</span> </div><div class="t m0 x12e h14 y11dd ff12 fs7 fcb sc0 lsda ws2aa">way to violate substitutability.</div></div><div class="t m0 x19 h32 yce5 ff4 fs1b fcd sc0 ls6 ws0">2</div><div class="t m0 x34 h33 y981 ff4 fs17 fcd sc0 ls6 ws0">For more <span class="_ _0"></span>on <span class="_ _0"></span>the Liskov <span class="_ _0"></span>substitution</div><div class="t m3 x0 h34 y981 ff8 fs17 fcd sc0 ls6 ws0"> </div><div class="t m0 x3b h33 y981 ff4 fs17 fcd sc0 ls6 ws0">principle, see <span class="_ _0"></span>the Wikipedia <span class="_ _0"></span>article:</div><div class="t m3 x0 h34 y981 ff8 fs17 fcd sc0 ls6 ws0"> </div><div class="t m0 xee h33 y981 ff4 fs17 fcf sc0 ls6 ws0">https://en.w<span class="_ _e"></span>ikipedia.org/wiki/Liskov</div><div class="t m0 x34 h33 y211 ff4 fs17 fcf sc0 ls6 ws0">_substitution_p<span class="_ _e"></span>rinciple<span class="fcd">.</span></div><a class="l" href="https://en.wikipedia.org/wiki/Liskov_substitution_principle"><div class="d m2" style="border-style:none;position:absolute;left:334.080000px;bottom:71.918000px;width:140.040000px;height:10.380000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="https://en.wikipedia.org/wiki/Liskov_substitution_principle"><div class="d m2" style="border-style:none;position:absolute;left:474.120000px;bottom:71.918000px;width:0.180000px;height:10.380000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="https://en.wikipedia.org/wiki/Liskov_substitution_principle"><div class="d m2" style="border-style:none;position:absolute;left:66.120000px;bottom:61.718000px;width:88.680000px;height:10.200000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
