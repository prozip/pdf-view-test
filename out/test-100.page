<div id="pf64" class="pf w0 h0" data-page-no="64"><div class="pc pc64 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg64.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">76</div><div class="t m0 x67 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 xb1 h2c y1d0 ffb fs19 fcb sc0 ls158 ws0">HAPTER</div><div class="t m0 xb6 h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 4</div><div class="t m0 x101 h2d y80 ffa fs7 fcb sc0 ls6 ws0">Designing for high performance</div><div class="t m0 x44 h3b y397 ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>__name__<span class="_"> </span>==<span class="_"> </span>&apos;__main__&apos;:</div><div class="t m0 xae h3b y40d ffd fs18 fc3 sc0 lsb2 ws0">sort_expensive()</div><div class="t m0 xae h3b y483 ffd fs18 fc3 sc0 lsb2 ws0">for<span class="_"> </span>i<span class="_"> </span>in<span class="_"> </span>range(1000):</div><div class="t m0 x97 h3b y484 ffd fs18 fc1 sc0 lsb2 ws0">sort_cheap()</div><div class="t m0 x44 h15 y340 ff4 fsb fc3 sc0 ls6 ws5d4">You need to profile the code to under<span class="_ _e"></span>stand<span class="ls34 ws9f"> the performance. See how each task fares</span></div><div class="t m0 x44 h15 ya3b ff4 fsb fc3 sc0 ls1c ws21">using the timeit and cProfile modules.</div><div class="t m0 x44 h1f ya3c ffc fs13 fc2 sc0 lsa9 ws0">Summary</div><div class="t m0 x86 h29 ya3d ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x87 h15 ya3e ff4 fsb fc3 sc0 ls1f ws5d5">Design for performance both u<span class="_ _0"></span>p fr<span class="ls81 ws5d6">ont and iterat<span class="_ _e"></span>ively throughout your</span></div><div class="t m0 x87 h15 ya3f ff4 fsb fc3 sc0 ls47 ws0">development.</div><div class="t m0 x86 h29 ya40 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x87 h15 ya41 ff4 fsb fc3 sc0 ls5e ws14a">Think carefully about the right data type<span class="_ _e"></span> for the task.</div><div class="t m0 x86 h29 ya42 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x87 h15 ya43 ff4 fsb fc3 sc0 ls30 wse3">Prefer generators over lists when you do<span class="_ _e"></span><span class="ls3d">n’t need all the values at once, to save</span></div><div class="t m0 x87 h15 ya44 ff4 fsb fc3 sc0 ls71 wsd4">on memory usage.</div><div class="t m0 x86 h29 ya45 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x87 h15 ya46 ff4 fsb fc3 sc0 ls30 ws5d7">Use the timeit and cProfile/profile Py<span class="ls1c ws5d8">thon modules <span class="_ _e"></span>to test your hypotheses</span></div><div class="t m0 x87 h15 y607 ff4 fsb fc3 sc0 ls3a ws28">about complexity and performance.</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
