<div id="pf2e" class="pf w0 h0" data-page-no="2e"><div class="pc pc2e w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg2e.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">22</div><div class="t m0 x3 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 x29 h2c y1d0 ffb fs19 fcb sc0 lsf6 ws0">HAPTER</div><div class="t m0 x47 h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 2</div><div class="t m0 xca h2d y80 ffa fs7 fcb sc0 ls6 ws0">Separation of concerns</div><div class="t m0 xae h3b y395 ffd fs18 fc3 sc0 lsb2 ws0">state<span class="_"> </span>=<span class="_"> </span>...</div><div class="t m0 xae h3b y396 ffd fs18 fc3 sc0 lsb2 ws0">print(f&apos;TOTAL:<span class="_"> </span>{total}&apos;)</div><div class="t m0 xae h3b y397 ffd fs18 fc1 sc0 lsb2 ws0">print(f&apos;AFTER<span class="_"> </span>TAX:<span class="_"> </span>{add_sales_tax(total,<span class="_"> </span>state)}&apos;<span class="fc3 ls6">)</span></div><div class="t m0 x44 h15 y398 ff4 fsb fc3 sc0 ls7d ws31c">So, to refer to a variable,<span class="_ _e"></span> function, or cl<span class="ls3d ws31d">ass in Python, one of the following must b<span class="_ _e"></span>e</span></div><div class="t m0 x44 h15 ye1 ff4 fsb fc3 sc0 ls1b ws0">true:</div><div class="t m0 x86 h29 y399 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x87 h15 y39a ff4 fsb fc3 sc0 ls2f ws23">The name is in the Python built-in namespace.</div><div class="t m0 x86 h29 y39b ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x87 h15 y342 ff4 fsb fc3 sc0 ls38 ws26">The name is the current module’s global namespace.</div><div class="t m0 x86 h29 y39c ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x87 h15 y39d ff4 fsb fc3 sc0 ls38 ws26">The name is in the current li<span class="ls51 ws47">ne of code’s local namespace.</span></div><div class="t m0 x44 h15 y39e ff4 fsb fc3 sc0 ls71 ws2b4">The precedence for conflicting names works <span class="_ _e"></span><span class="ls48 ws31e">in the opposite order: a local name will</span></div><div class="t m0 x44 h15 y39f ff4 fsb fc3 sc0 ls71 ws138">override a global name, which will overri<span class="ls25 ws155">de a built-in name. You can remember this</span></div><div class="t m0 x44 h15 y3a0 ff4 fsb fc3 sc0 ls34 ws2f4">because generally the definition most specific<span class="ls80 ws31f"> to the current code is the one that gets</span></div><div class="t m0 x44 h15 y3a1 ff4 fsb fc3 sc0 ls78 ws320">used. This is shown in fi<span class="_ _e"></span>gure 2.1.</div><div class="t m0 x44 h15 y3a2 ff4 fsb fc3 sc0 ls42 wsc4">You might have seen a </div><div class="t m5 x92 h24 y3a3 ffd fsc fc3 sc0 lsa0 ws321">NameError: nam<span class="_ _e"></span>e &apos;my_var&apos; is not defined</div><div class="t m0 x9d h15 y3a2 ff4 fsb fc3 sc0 ls36 ws2e7"> error sometime</div><div class="t m0 x44 h15 y3a4 ff4 fsb fc3 sc0 ls48 ws322">in your adventures with Py<span class="ls38 wsc5">thon. That means the name </span></div><div class="t m5 x6e h24 y3a5 ffd fsc fc3 sc0 lsa0 ws0">my_var</div><div class="t m0 x58 h15 y3a4 ff4 fsb fc3 sc0 ls42 ws1d1"> wasn’t found in any of</div><div class="t m0 x44 h15 y3a6 ff4 fsb fc3 sc0 ls34 ws11f">the namespaces known to that code. Th<span class="ls71">is <span class="_ _e"></span>usually means you never assigned </span></div><div class="t m5 x9a h24 y3a7 ffd fsc fc3 sc0 lsa0 ws0">my_var</div><div class="t m0 x9b h15 y3a6 ff4 fsb fc3 sc0 ls104 ws0"> a</div><div class="t m0 x44 h15 y3a8 ff4 fsb fc3 sc0 ls2d ws31">value, or you assigned<span class="ls38 ws1f4"> it somewhere else and need to import it.</span></div><div class="t m0 x32 h15 y3a9 ff4 fsb fc3 sc0 ls30 ws167"> Modules are a great w<span class="_ _e"></span>ay to begin splitting <span class="ls25 ws307">up code. If you have one long script.py</span></div><div class="t m0 x44 h15 y3aa ff4 fsb fc3 sc0 ls34 ws323">file with a bunch of unrelated functions in<span class="ls63 ws324"> it, con<span class="_ _e"></span>sider breaking</span> those functions out</div><div class="t m0 x44 h15 y3ab ff4 fsb fc3 sc0 ls60 ws5a">into modu<span class="_ _e"></span>les. </div><div class="c x3e y3ac wd h4e"><div class="t m0 x43 h14 y3ad ff12 fs7 fcb sc0 ls6 ws0">add_sales_tax </div><div class="t m0 x43 h14 y3ae ff12 fs7 fcb sc0 ls105 ws325">still k<span class="ff13 ls6 ws0">n</span><span class="ls106 ws326">ows about </span></div><div class="t m0 x43 h14 y3af ff12 fs7 fcb sc0 ls6 ws0">TAX_RATES_BY_STATE </div><div class="t m0 x43 h14 y3b0 ff12 fs7 fcb sc0 ls6 ws0">a<span class="ff13">n</span><span class="ls105 ws327">d tax_</span><span class="ff13">r</span><span class="lsd6 ws2a7">ate f</span><span class="ff13">r</span>o<span class="ff13">m</span><span class="ls100 ws316"> its </span></div><div class="t m0 x43 h14 y3b1 ff12 fs7 fcb sc0 lse2 ws0">ow<span class="ff13 ls6">n<span class="ff12"> </span>n<span class="ff12">a</span>m<span class="ff12">espace.</span></span></div></div><div class="c x44 y3b2 we h4f"><div class="t m0 xc9 h37 y3b3 ff12 fs1d fc12 sc0 ls6 ws0">Each namespace can</div><div class="t m0 xc9 h37 y3b4 ff12 fs1d fc12 sc0 ls6 ws0">access names from the</div><div class="t m0 xc9 h37 y3b5 ff12 fs1d fc12 sc0 ls6 ws0">namespaces above it.</div><div class="t m0 xd1 h37 y3b6 ff12 fs1d fc12 sc0 ls6 ws0">Names in lower-level</div><div class="t m0 xd1 h37 y3b7 ff12 fs1d fc12 sc0 ls6 ws0">namespaces override</div><div class="t m0 xd1 h37 y3b8 ff12 fs1d fc12 sc0 ls6 ws0">higher-level names.</div><div class="t m0 x19 h36 y3b9 ff11 fs1c fc12 sc0 ls6 ws0">Class namespace</div><div class="t m0 xa h36 y3ba ff11 fs1c fc12 sc0 ls6 ws0">Module global namespace</div><div class="t m0 xd2 h36 y3bb ff11 fs1c fc12 sc0 ls6 ws0">Python built-in namespace</div><div class="t m0 xc5 h36 y3bc ff11 fs1c fc12 sc0 ls6 ws0">Method namespace</div><div class="t m0 x44 h36 y3bd ff11 fs1c fc12 sc0 ls6 ws0">x</div><div class="t m0 x20 h36 y3be ff11 fs1c fc12 sc0 ls6 ws0">x</div><div class="t m0 x15 h36 y3bf ff11 fs1c fc12 sc0 ls6 ws0">x</div><div class="t m0 x3d h36 y3c0 ff11 fs1c fc12 sc0 ls6 ws0">x</div><div class="t m0 xc3 h36 y3c1 ff11 fs1c fc12 sc0 ls6 ws0">x</div></div><div class="c x44 y3c2 w2 h50"><div class="t m0 x2 h2b y3c3 ffb fs18 fcb sc0 lsb2 ws255">The specificity of namespaces<span class="_ _3b"></span>Figure 2.1</div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
