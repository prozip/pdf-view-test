<div id="pf97" class="pf w0 h0" data-page-no="97"><div class="pc pc97 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg97.png"/><div class="t m0 xcd hb y1ba ff3 fs8 fc2 sc0 ls6 ws0">Extensibility</div><div class="t m0 x74 hb y5d8 ff3 fs8 fc2 sc0 ls6 ws0"> and f<span class="_ _b1"></span>lexibility</div><div class="t m0 x83 h15 y67e ff4 fsb fc3 sc0 ls44 wseb">At many established organizations, your day-to-day work as a developer involves not</div><div class="t m0 x83 h15 y1065 ff4 fsb fc3 sc0 ls2d ws31">only writing new applications, but updating<span class="ls80 wsff"> existing ones. When you’re tasked with</span></div><div class="t m0 x83 h15 y1066 ff4 fsb fc3 sc0 ls51 ws268">adding a new feature to an existing application, your goal is to <span class="ff3 ls44 ws0">extend</span><span class="lsb1 ws51d"> the function-</span></div><div class="t m0 x83 h15 y1067 ff4 fsb fc3 sc0 ls42 ws26e">ality of that application, introduc<span class="ws32">ing new behavior by adding code.</span></div><div class="t m0 x4 h15 y1068 ff4 fsb fc3 sc0 ls2f ws40e"> Some applications are <span class="ff3 ls11b ws0">flex<span class="_ _e"></span>ible</span><span class="ls48 ws68b"> to this kind of ch<span class="_ _e"></span>ange<span class="ls38 ws166"> and can adapt to shifting</span></span></div><div class="t m0 x83 h15 y1069 ff4 fsb fc3 sc0 lsae ws7ad">requirements.<span class="_ _0"></span> Others may fight you to<span class="_ _0"></span>oth <span class="ls1d5 ws7ae">and nail<span class="_ _e"></span>. In this chap<span class="_ _e"></span>ter, you’ll le<span class="_ _e"></span>arn</span></div><div class="t m0 x83 h15 y684 ff4 fsb fc3 sc0 ls79 ws7af">strategies for w<span class="_ _e"></span>riting software that’s <span class="_ _e"></span>flexible and extensib<span class="_ _e"></span>le by adding an “Impor<span class="_ _e"></span>t</div><div class="t m0 x83 h15 y106a ff4 fsb fc3 sc0 ls3a ws28">GitHub stars” fe<span class="ws32">ature to Bark.</span></div><div class="t m0 xb h1f y106b ffc fs13 fc2 sc0 ls148 ws7b0">7<span class="_ _1d"></span>.1<span class="_ _a"> </span>What is extensible code?</div><div class="t m0 x83 h15 y106c ff4 fsb fc3 sc0 ls89 ws0">C<span class="_ _1d"></span>od<span class="_ _1d"></span>e<span class="_ _0"></span> i<span class="_ _1d"></span>s s<span class="_ _1d"></span>a<span class="_ _0"></span>i<span class="_ _1d"></span>d t<span class="_ _1d"></span>o<span class="_ _0"></span> b<span class="_ _1d"></span>e<span class="_ _0"></span> <span class="ff3 ls21">extensible</span><span class="ls2f ws1c8"> if adding new behaviors to <span class="ls4b ws7b1">it has little or no impa<span class="_ _e"></span>ct on</span></span></div><div class="t m0 x83 h15 y106d ff4 fsb fc3 sc0 ls1c ws7b2">existing behaviors. Said another way, so<span class="ls31 ws20f">ftware is extensible if you can add new</span></div><div class="t m0 x83 h15 y106e ff4 fsb fc3 sc0 ls71 wsd4">behavior without changing existing code.</div><div class="t m0 xb5 h28 y106f ffc fs4 fc2 sc0 ls6 ws0">This chapter covers</div><div class="t m0 xb5 h29 y336 ffe fs17 fc2 sc0 ls6 ws0"></div><div class="t m0 xbc h2a y1cc fff fsb fc2 sc0 ls38 ws149">Using inversion of control to make code flexible</div><div class="t m0 xb5 h29 y1cd ffe fs17 fc2 sc0 ls6 ws0"></div><div class="t m0 xbc h2a y1ce fff fsb fc2 sc0 ls2d ws1ff">Using interfaces to make code extensible</div><div class="t m0 xb5 h29 y1070 ffe fs17 fc2 sc0 ls6 ws0"></div><div class="t m0 xbc h2a y1071 fff fsb fc2 sc0 ls31 ws148">Adding new features to your existing code</div><div class="t m0 x64 h14 y3f ff7 fs7 fc11 sc0 ls6 ws0">127</div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
