<div id="pfa2" class="pf w0 h0" data-page-no="a2"><div class="pc pca2 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bga2.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">138</div><div class="t m0 xb9 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 x16 h2c y1d0 ffb fs19 fcb sc0 lsf6 ws0">HAPTER</div><div class="t m0 x68 h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 7</div><div class="t m0 x1f h2d y80 ffa fs7 fcb sc0 ls6 ws0">Extensibility and f<span class="_ _e"></span>lexibility</div><div class="t m0 x44 h15 y40 ff4 fsb fc3 sc0 ls30 ws1ef">Consider the built-in </div><div class="t m5 x1e h24 y3eb ffd fsc fc3 sc0 lsa0 ws0">int()</div><div class="t m0 xb6 h15 y40 ff4 fsb fc3 sc0 ls71 ws1cc"> function, which converts its input to an integer. This func-</div><div class="t m0 x44 h15 y839 ff4 fsb fc3 sc0 ls42 ws26e">tion works for inputs that are already integers:</div><div class="t m0 x44 h3b y114b ffd fs18 fc3 sc0 lsb2 ws0">&gt;&gt;&gt;<span class="_"> </span>int(3)</div><div class="t m0 x44 h3b y114c ffd fs18 fc1 sc0 ls6 ws0">3</div><div class="t m0 x44 h15 y114d ff4 fsb fc3 sc0 ls42 ws32">It also works for strings:</div><div class="t m0 x44 h3b y114e ffd fs18 fc3 sc0 lsb2 ws0">&gt;&gt;&gt;<span class="_"> </span>int(&apos;3&apos;)</div><div class="t m0 x44 h3b y114f ffd fs18 fc1 sc0 ls6 ws0">3</div><div class="t m0 x44 h15 y1150 ff4 fsb fc3 sc0 ls1b wsf">And it even works for floati<span class="ls51 ws47">ng-point numbers, returning <span class="ls20 ws17">just the whole number part:</span></span></div><div class="t m0 x44 h3b y1151 ffd fs18 fc3 sc0 lsb2 ws0">&gt;&gt;&gt;<span class="_"> </span>int(6.5)</div><div class="t m0 x44 h3b y1152 ffd fs18 fc1 sc0 ls6 ws0">6</div><div class="t m5 x44 h24 y1153 ffd fsc fc3 sc0 lsa0 ws0">int</div><div class="t m0 xbc h15 y1154 ff4 fsb fc3 sc0 ls51 ws43"> accepts multiple data types <span class="ls30 wsbd">and funnels them all to an integer return type, raising</span></div><div class="t m0 x44 h15 y1155 ff4 fsb fc3 sc0 ls1e ws16">an exception only if it’s truly unclear how to proceed:</div><div class="t m0 x44 h3b y1156 ffd fs18 fc3 sc0 lsb2 ws0">&gt;&gt;&gt;<span class="_"> </span>int(&apos;Dane&apos;)</div><div class="t m0 x44 h3b y1157 ffd fs18 fc1 sc0 lsb2 ws0">ValueError:<span class="_"> </span>invalid<span class="_"> </span>literal<span class="_"> </span>for<span class="_"> </span>int()<span class="_"> </span>with<span class="_"> </span>base<span class="_"> </span>10:<span class="_"> </span>&apos;Dane&apos;</div><div class="t m0 x44 h15 y1158 ff4 fsb fc3 sc0 ls34 ws420">Spend some time understanding the range <span class="ls20 ws244">of inputs that consumers of your code</span></div><div class="t m0 x44 h15 y1159 ff4 fsb fc3 sc0 ls2f ws23">might reasonably expect to supply, and then <span class="ls9e ws285">rein in that input so that you<span class="_ _0"></span> return only</span></div><div class="t m0 x44 h15 y115a ff4 fsb fc3 sc0 ls71 ws1cb">what the rest of your system<span class="ls38 ws24a"> expects. This will provide <span class="ls36 ws2d9">flexibility for those consumers</span></span></div><div class="t m0 x44 h15 y115b ff4 fsb fc3 sc0 ls5e ws2db">at the entry points of the system, while k<span class="ls1c ws4af">eeping the number of situatio<span class="_ _e"></span>ns the underly-</span></div><div class="t m0 x44 h15 y115c ff4 fsb fc3 sc0 ls38 ws26">ing code must handle manageable. </div><div class="t m0 x44 h1f y115d ffc fs13 fc2 sc0 ls84 wsea">An exercise in extension<span class="_ _c1"></span>7<span class="_ _0"></span>.<span class="_ _1d"></span>3</div><div class="t m0 x44 h15 y115e ff4 fsb fc3 sc0 ls3d ws71f">Now that you understand w<span class="_ _e"></span>hat goes into an<span class="ls2e ws610"> extensible and flexible design, you can</span></div><div class="t m0 x44 h15 y115f ff4 fsb fc3 sc0 ls71 ws2d4">apply those concepts by adding functionality <span class="ls2e ws4a3">to Bark. Right now, Bark is <span class="_ _0"></span>a rather man-</span></div><div class="t m0 x44 h15 y1160 ff4 fsb fc3 sc0 ls2f ws3f7">ual tool—you can add bookmarks, but it’s <span class="_ _e"></span><span class="ws3e4">a<span class="_ _0"></span> one-at-a-time thing, and users have to</span></div><div class="t m0 x44 h15 y1161 ff4 fsb fc3 sc0 ls6 ws731">enter all the URLs and descriptions them<span class="_ _e"></span>selv<span class="ls38 ws193">es. It’s tedious work, especially if they</span></div><div class="t m0 x44 h15 y1162 ff4 fsb fc3 sc0 ls38 ws26">already have a pile of bookma<span class="ls4e ws3e">rks saved in a different tool.</span></div><div class="t m0 x32 h15 ybf3 ff4 fsb fc3 sc0 ls36 ws350"> You’re going to build <span class="_ _0"></span>a GitHub stars importer for Bark<span class="_ _0"></span> (figure 7.7). This new</div><div class="t m0 x44 h15 y1163 ff4 fsb fc3 sc0 ls80 wsff">import option in the pre<span class="_ _e"></span>sentati<span class="ls20 ws51">on layer must do the<span class="_ _e"></span> following:</span></div><div class="t m0 xbc h3d y1164 ffb fs1e fca sc0 ls6 ws0">1</div><div class="t m0 x87 h15 y1165 ff4 fsb fc3 sc0 ls4e ws1e3">Prompt the Bar<span class="_ _e"></span>k user for the GitHub username t<span class="_ _e"></span>o import stars from.</div><div class="t m0 xbc h3d y1166 ffb fs1e fca sc0 ls6 ws0">2</div><div class="t m0 x87 h15 y1167 ff4 fsb fc3 sc0 ls4e ws3e">Ask the user whether to preserve th<span class="ls71 wsd4">e timestamps of the original <span class="_ _e"></span>stars.</span></div><div class="t m0 xbc h3d y1168 ffb fs1e fca sc0 ls6 ws0">3</div><div class="t m0 x87 h15 y1169 ff4 fsb fc3 sc0 ls4b ws3b">Trigger a corr<span class="_ _e"></span>esponding command.</div><div class="c x44 y116a w8f hf9"><div class="t m0 xe4 h36 y116b ff11 fs1c fc12 sc0 ls13b ws0">Bookmarks</div><div class="t m0 x0 h36 y116c ff11 fs1c fc12 sc0 ls6 ws0">1. Request a page of</div><div class="t m0 x130 h36 y116d ff11 fs1c fc12 sc0 ls6 ws0">   starred repository data. </div><div class="t m0 x97 h36 y116c ff11 fs1c fc12 sc0 ls6 ws80c">2. Parse the starred</div><div class="t m0 x97 h36 y116d ff11 fs1c fc12 sc0 ls6 ws80c">    repository data. </div><div class="t m0 xaf h36 y116e ff11 fs1c fc12 sc0 ls13b ws522">3. Store each parsed</div><div class="t m0 xaf h36 y116f ff11 fs1c fc12 sc0 ls6 ws80c">    repository’s information</div><div class="t m0 xaf h36 y1170 ff11 fs1c fc12 sc0 ls6 ws80c">    as a bookmark.    </div><div class="t m0 x1a h36 y1171 ff11 fs1c fc12 sc0 ls6 ws0">Bark</div><div class="t m0 x13e h36 y1172 ff11 fs1c fc12 sc0 ls6 ws0">GitHub API</div></div><div class="c x44 y116a w2 hfa"><div class="t m0 x27 h2b y1173 ffb fs18 fcb sc0 ls1bb ws80d">Figure 7.7<span class="_ _29"> </span>The flow for a </div><div class="t m0 x27 h2b y1174 ffb fs18 fcb sc0 ls6a ws655">GitHub stars importer for </div><div class="t m0 x27 h2b y1175 ffb fs18 fcb sc0 ls1df ws0">Bark</div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
