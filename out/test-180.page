<div id="pfb4" class="pf w0 h0" data-page-no="b4"><div class="pc pcb4 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bgb4.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">156</div><div class="t m0 x17 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 xa7 h2c y1d0 ffb fs19 fcb sc0 lsf6 ws0">HAPTER</div><div class="t m0 xba h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 8</div><div class="t m0 xe7 h2d y80 ffa fs7 fcb sc0 ls6 ws0">The rules (and exceptions) of inheritance</div><div class="t m0 x44 h15 y40 ff4 fsb fc3 sc0 ls3e ws1a5">Suppose you’re modeling a food chain, and <span class="ls51 wsa9">you want to make sure all the predator</span></div><div class="t m0 x44 h15 y41 ff4 fsb fc3 sc0 ls42 ws87f">classes adhere to an in<span class="ls38 ws5b8">terface that includes an </span></div><div class="t m5 x144 h24 y532 ffd fsc fc3 sc0 lsa0 ws0">eat</div><div class="t m0 x51 h15 y41 ff4 fsb fc3 sc0 ls34 ws880"> method for eating prey. You can cre-</div><div class="t m0 x44 h15 y533 ff4 fsb fc3 sc0 ls34 ws56a">ate an abstract base class, </div><div class="t m5 x23 h24 y66f ffd fsc fc3 sc0 lsa0 ws0">Predator</div><div class="t m0 x2a h15 y533 ff4 fsb fc3 sc0 ls42 ws4e5">, that defines this method and its signature. Then you</div><div class="t m0 x44 h15 y43 ff4 fsb fc3 sc0 ls42 ws881">can subclass </div><div class="t m5 x21 h24 y71c ffd fsc fc3 sc0 lsa0 ws0">Predator</div><div class="t m0 xb1 h15 y43 ff4 fsb fc3 sc0 ls25 ws843">, and any subclass that doesn’t define </div><div class="t m5 x5b h24 y71c ffd fsc fc3 sc0 ls6 ws0">eat</div><div class="t m0 x58 h15 y43 ff4 fsb fc3 sc0 ls35 ws882"> will raise an exception,</div><div class="t m0 x44 h15 y44 ff4 fsb fc3 sc0 ls1e ws16">as noted in the following listing.</div><div class="t m0 x44 h3b y135c ffd fs18 fc3 sc0 lsb2 ws0">from<span class="_"> </span>abc<span class="_"> </span>import<span class="_"> </span>ABC,<span class="_"> </span>abstractmethod</div><div class="t m0 x44 h3b y135d ffd fs18 fc3 sc0 lsb2 ws0">class<span class="_"> </span>Predator(ABC):</div><div class="t m0 xae h3b y135e ffd fs18 fc3 sc0 lsb2 ws0">@abstractmethod</div><div class="t m0 xae h3b ydd9 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>eat(self,<span class="_"> </span>prey):</div><div class="t m0 x97 h3b ydda ffd fs18 fc3 sc0 lsb2 ws0">pass</div><div class="t m0 x44 h3b yddd ffd fs18 fc3 sc0 lsb2 ws0">class<span class="_"> </span>Bear(Predator):</div><div class="t m0 xae h3b ydde ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>eat(self,<span class="_"> </span>prey):</div><div class="t m0 x97 h3b yddf ffd fs18 fc3 sc0 lsb2 ws0">print(f&apos;Mauling<span class="_"> </span>{prey}!&apos;)</div><div class="t m0 x44 h3b y135f ffd fs18 fc3 sc0 lsb2 ws0">class<span class="_"> </span>Owl(Predator):</div><div class="t m0 xae h3b y1360 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>eat(self,<span class="_"> </span>prey):</div><div class="t m0 x97 h3b y1361 ffd fs18 fc3 sc0 lsb2 ws0">print(f&apos;Swooping<span class="_"> </span>in<span class="_"> </span>on<span class="_"> </span>{prey}!&apos;)</div><div class="t m0 x44 h3b y6ef ffd fs18 fc3 sc0 lsb2 ws0">class<span class="_"> </span>Chameleon(Predator):</div><div class="t m0 xae h3b y6f0 ffd fs18 fc3 sc0 lsb2 ws0">def<span class="_"> </span>eat(self,<span class="_"> </span>prey):</div><div class="t m0 x97 h3b y1362 ffd fs18 fc3 sc0 lsb2 ws0">print(f&apos;Shooting<span class="_"> </span>tongue<span class="_"> </span>at<span class="_"> </span>{prey}!&apos;)</div><div class="t m0 x44 h3b y1006 ffd fs18 fc3 sc0 lsb2 ws0">if<span class="_"> </span>__name__<span class="_"> </span>==<span class="_"> </span>&apos;__main__&apos;:</div><div class="t m0 xae h3b y1007 ffd fs18 fc3 sc0 lsb2 ws0">bear<span class="_"> </span>=<span class="_"> </span>Bear()</div><div class="t m0 xae h3b y1363 ffd fs18 fc3 sc0 lsb2 ws0">bear.eat(&apos;deer&apos;)</div><div class="t m0 xae h3b y1009 ffd fs18 fc3 sc0 lsb2 ws0">owl<span class="_"> </span>=<span class="_"> </span>Owl()</div><div class="t m0 xae h3b y100a ffd fs18 fc3 sc0 lsb2 ws0">owl.eat(&apos;mouse&apos;)</div><div class="t m0 xae h3b y1364 ffd fs18 fc3 sc0 lsb2 ws0">chameleon<span class="_"> </span>=<span class="_"> </span>Chameleon()</div><div class="t m0 xae h3b y1365 ffd fs18 fc1 sc0 lsb2 ws0">chameleon.eat(&apos;fly&apos;)</div><div class="t m0 x32 h49 y1366 ffb fs17 fc2 sc0 ls141 ws0">TIP</div><div class="t m0 x4 h15 y313 ff4 fsb fc3 sc0 ls34 ws13b">If you’re using an IDE, it can warn <span class="ls71 ws2d4">you if you have the wrong method sig-</span></div><div class="t m0 x32 h15 y1367 ff4 fsb fc3 sc0 ls30 wse3">nature. Python won’t check this at runtim<span class="_ _e"></span>e, but it may still raise an error for</div><div class="t m0 x32 h15 y1368 ff4 fsb fc3 sc0 ls5e ws14a">the usual mistakes, like too many <span class="_ _e"></span>or too few arguments.</div><div class="t m0 x44 h15 y1369 ff4 fsb fc3 sc0 ls38 ws50a">Try creating a new </div><div class="t m5 x1e h24 y136a ffd fsc fc3 sc0 lsa0 ws0">Predator</div><div class="t m0 x8f h15 y1369 ff4 fsb fc3 sc0 ls1fe ws883"> without t<span class="_ _0"></span>he </div><div class="t m5 x40 h24 y136a ffd fsc fc3 sc0 lsa0 ws0">eat</div><div class="t m0 x74 h15 y1369 ff4 fsb fc3 sc0 lsae ws884"> method, and then <span class="_ _0"></span>try creating an</div><div class="t m0 x44 h15 yecf ff4 fsb fc3 sc0 ls34 ws11f">instance of it at the end of<span class="wsb5"> the module. You should see a </span></div><div class="t m5 xe9 h24 y136b ffd fsc fc3 sc0 lsa0 ws0">TypeError</div><div class="t m0 x61 h15 yecf ff4 fsb fc3 sc0 ls38 ws3e6"> mentioning that</div><div class="t m0 x44 h15 yed0 ff4 fsb fc3 sc0 ls38 ws81">the instance couldn’t be created because it<span class="ls31 ws378"> didn’t define an implementation for the</span></div><div class="t m0 x44 h15 yed1 ff4 fsb fc3 sc0 ls31 ws25">abstract method </div><div class="t m5 x17 h24 y136c ffd fsc fc3 sc0 lsa0 ws0">eat()</div><div class="t m0 xb9 h15 y136d ff4 fsb fc3 sc0 ls6 ws0">.</div><div class="t m0 x32 h20 y11ab ffb fs7 fc4 sc0 ls6 ws0">Listing<span class="_"> </span>8.4<span class="_ _55"> </span>Using abstract base classes to enforce an int<span class="_ _0"></span>erface</div><div class="c x43 y136e wa4 h119"><div class="t m0 xfb h14 y136f ff12 fs7 fcb sc0 ls6 ws0">I<span class="ff13">n</span><span class="lsd3">he</span><span class="ff13">r</span><span class="ls100">iti</span><span class="ff13">n</span><span class="lse1">g f</span><span class="ff13">r</span>o<span class="ff13">m</span><span class="ws317"> ABC </span><span class="ff13">m</span><span class="lsfd ws31a">akes this </span></div><div class="t m0 xfb h14 y1370 ff12 fs7 fcb sc0 lsdc ws3df">class a<span class="ff13 ls6 ws0">n</span><span class="ls10e ws4f1"> abst<span class="ff13 ls6 ws0">r</span><span class="lse4 ws45a">act base class.</span></span></div></div><div class="c x67 y1371 w87 h11a"><div class="t m0 xb5 h14 y1372 ff12 fs7 fcb sc0 ls170 ws885">This i<span class="ff13 ls6 ws0">n</span><span class="lsff ws315">dicates that the <span class="ff13 ls6 ws0">m<span class="ff12 lsdc">ethod </span></span></span></div><div class="t m0 xb5 h14 y1373 ff13 fs7 fcb sc0 ls6 ws0">m<span class="ff12 lsde ws3cf">ust be defi</span>n<span class="ff12 lsd9 ws2ce">ed o</span>n<span class="ff12 lsdd"> a</span>n<span class="ff12 lsff ws38b">y subclasses.</span></div></div><div class="c x56 y1374 w9d h11b"><div class="t m0 x12e h14 ye95 ff12 fs7 fcb sc0 ls113 ws0">This <span class="ff13 ls6">m</span><span class="lsff ws38b">ethod sig</span><span class="ff13 ls6">n</span><span class="ls10d">atu<span class="ff13 ls6">r<span class="ff12 ws317">e ca</span>n</span><span class="lsd3 ws3e0"> be </span></span></div><div class="t m0 x12e h14 ye96 ff12 fs7 fcb sc0 lsda ws2aa">checked by IDEs i<span class="ff13 ls6 ws0">n<span class="ff12 lse1"> a</span>n</span><span class="ls10a ws339">y subclasses.</span></div></div><div class="c x7e y1375 wa5 h11c"><div class="t m0 x12e h14 yd7e ff12 fs7 fcb sc0 ls145 ws0">Abst<span class="ff13 ls6">r</span><span class="ls88">act <span class="ff13 ls6">m</span><span class="lsd5 ws2a6">ethods have </span><span class="ff13 ls6">n</span><span class="lsd4 ws4ee">o default i</span><span class="ff13 ls6">m</span><span class="lsde">ple<span class="ff13 ls6">m<span class="ff12">e</span>n</span><span class="lsfd">tatio<span class="ff13 ls6">n<span class="ff12">.</span></span></span></span></span></div></div><div class="c x8f y1376 wa6 h61"><div class="t m0 x42 h14 y1377 ff12 fs7 fcb sc0 ls10a ws470">States you<span class="ff13 ls6 ws0">r<span class="ff12 ls1ff"> i</span>n<span class="ff12 ls146">te</span>n</span><span class="lsec wsec">t to <span class="_ _e"></span>i<span class="ff13 ls6 ws0">m<span class="ff12 lsde">ple</span>m<span class="ff12">e</span>n</span><span class="lsd2 ws886">t the i<span class="ff13 ls6 ws0">n</span><span class="ws0">te<span class="ff13 ls6">r</span><span class="lsee">face<span class="_ _0"></span> </span></span></span></span></div><div class="t m0 x42 h14 y1378 ff12 fs7 fcb sc0 ls88 ws314">by subclassi<span class="ff13 ls6 ws0">n</span><span class="ls124 ws5a5">g the abst<span class="ff13 ls6 ws0">r</span><span class="lsec ws4f0">act base class</span></span></div></div><div class="c x8d y1379 wa7 hff"><div class="t m0 x42 h14 y137a ff12 fs7 fcb sc0 lsf0 ws0">This <span class="ff13 ls6">m</span><span class="ls10c">ethod <span class="ff13 ls6">m</span><span class="ls12f ws64e">ust be defi<span class="_ _0"></span><span class="ff13 ls6 ws0">n<span class="ff12 lse4">ed, </span></span></span></span></div><div class="t m0 x42 h14 y137b ff12 fs7 fcb sc0 ls6 ws0">o<span class="ff13">r</span><span class="lse1"> a</span><span class="ff13">n</span><span class="lsde ws2ad"> exceptio</span><span class="ff13">n</span><span class="lsff ws315"> will be </span><span class="ff13">r</span><span class="lsd4">aised.</span></div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
