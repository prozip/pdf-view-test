<div id="pf82" class="pf w0 h0" data-page-no="82"><div class="pc pc82 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bg82.png"/><div class="t m0 x42 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">106</div><div class="t m0 x66 h2b y1cf ffb fs18 fcb sc0 ls6 ws0">C</div><div class="t m0 x8e h2c y1d0 ffb fs19 fcb sc0 ls185 ws0">HAPTER</div><div class="t m0 xf1 h2b y1cf ffb fs18 fcb sc0 ls8c ws0"> 6</div><div class="t m0 xe4 h2d y80 ffa fs7 fcb sc0 ls6 ws0">Separation of concerns in practice</div><div class="t m0 x44 h1f y13f ffc fs13 fc2 sc0 ls1a6 ws6ce">An initial code st<span class="_ _45"></span>6.<span class="_ _1d"></span>3<span class="_ _a9"> </span><span class="ls1a7 ws6cf">ructur<span class="_ _e"></span>e, by concern</span></div><div class="t m0 x44 h15 y140 ff4 fsb fc3 sc0 ls51 ws2de">I try to start developing app<span class="ls81 ws6d0">lications lik<span class="_ _e"></span>e Bark with a <span class="ls25 ws6d1">concise explanation of how it</span></span></div><div class="t m0 x44 h15 y141 ff4 fsb fc3 sc0 ls4e ws1e3">does what it does. This t<span class="_ _e"></span>ends to lead<span class="ls3e ws4a"> me toward an initial architecture.</span></div><div class="t m0 x32 h15 y142 ff4 fsb fc3 sc0 ls6f ws6d2"> For example, how does B<span class="_ _e"></span>ark work? What is its concise d<span class="_ _e"></span>escription? Perhaps the fol-</div><div class="t m0 x44 h15 y143 ff4 fsb fc3 sc0 ls34 ws2f4">lowing statement comprises the <span class="ls30 ws394">answers to these questions: <span class="ff3 ls36 wsab">Using a command-line inter-</span></span></div><div class="t m0 x44 h1b y144 ff3 fsb fc3 sc0 ls31 ws25">face, a user chooses options for adding, removing, and <span class="ls2f ws23">listing bookmarks stor<span class="ls71 ws83">ed in a database.</span></span></div><div class="t m0 x32 h15 y145 ff4 fsb fc3 sc0 ls5e ws14a"> Now let’s break that dow<span class="_ _e"></span>n a bit:</div><div class="t m0 x86 h29 yd18 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x87 h15 yd19 ff3 fsb fc3 sc0 ls2d ws33c">Command-line interface<span class="_ _f"></span><span class="ff4 ls31 ws412">—This is a way <span class="_ _0"></span>to present options to a user and under-</span></div><div class="t m0 x87 h15 y148 ff4 fsb fc3 sc0 ls38 ws26">stand which options they choose.</div><div class="t m0 x86 h29 yd1a ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x87 h15 yba2 ff3 fsb fc3 sc0 ls1c wsa5">Choosing options<span class="_ _f"></span><span class="ff4 ls34 ws2f4">—Once an option is chosen, some<span class="ls2f ws15f"> action <span class="_ _e"></span>or business logic hap-</span></span></div><div class="t m0 x87 h15 y251 ff4 fsb fc3 sc0 ls31 ws25">pens as a result.</div><div class="t m0 x86 h29 y252 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x87 h15 y253 ff3 fsb fc3 sc0 ls2d ws31">Stored in a database<span class="_ _f"></span><span class="ff4 ls38 ws1f4">—Data needs to be persisted <span class="_ _0"></span>for later use.</span></div><div class="t m0 x44 h15 y48a ff4 fsb fc3 sc0 ls20 ws202">These points represent the high-level layers<span class="ls1e ws8b"> of abstraction for Bark. The CLI is the <span class="_ _0"></span><span class="ff3 ls34 ws0">pre-</span></span></div><div class="t m0 x44 h15 y48b ff3 fsb fc3 sc0 ls2d ws0">sentation<span class="ff4 ls42 ws1d1"> layer of the application. The database is the </span><span class="ls2c">persistenc<span class="_ _0"></span>e<span class="ff4 ls48 ws52f"> layer. The actions and</span></span></div><div class="t m0 x44 h15 y48d ff3 fsb fc3 sc0 ls2e ws6d3">business logic<span class="ff4 lsaa ws0"> a<span class="_ _1c"></span>r<span class="_ _1d"></span>e<span class="_ _0"></span> k<span class="_ _1d"></span>i<span class="_ _1d"></span>n<span class="_ _1d"></span>d<span class="_ _1d"></span> o<span class="_ _1d"></span>f<span class="_ _0"></span> l<span class="_ _1d"></span>i<span class="_ _1d"></span>k<span class="_ _1d"></span>e<span class="_ _1d"></span> t<span class="_ _1d"></span>h<span class="_ _0"></span>e<span class="_ _1d"></span> g<span class="_ _1d"></span>l<span class="_ _1d"></span>u<span class="_ _1d"></span>e<span class="_ _1d"></span> t<span class="_ _0"></span>h<span class="_ _1d"></span>a<span class="_ _1d"></span>t<span class="_ _1d"></span> c<span class="_ _1d"></span>o<span class="_ _1d"></span>n<span class="_ _0"></span>n<span class="_ _1d"></span>e<span class="_ _1d"></span><span class="ls3a ws5a1">cts the presentation and persistence</span></span></div><div class="t m0 x44 h15 y48e ff4 fsb fc3 sc0 lsc9 ws0">l<span class="_ _1d"></span>a<span class="_ _1c"></span>y<span class="_ _1d"></span>e<span class="_ _0"></span>r<span class="_ _1c"></span>s<span class="_ _1d"></span>.<span class="_ _1d"></span> E<span class="_ _1d"></span>a<span class="_ _1d"></span>c<span class="_ _1d"></span>h<span class="_ _1d"></span> i<span class="_ _1d"></span>s<span class="_ _1d"></span> a<span class="_ _1d"></span> f<span class="_ _1d"></span>a<span class="_ _1d"></span>i<span class="_ _1d"></span>r<span class="_ _1d"></span>l<span class="_ _1d"></span>y<span class="_ _1d"></span> s<span class="_ _1d"></span>e<span class="_ _1d"></span>p<span class="_ _1d"></span>a<span class="_ _1d"></span>r<span class="_ _1d"></span>a<span class="_ _1d"></span>t<span class="_ _1d"></span>e<span class="_ _1d"></span> c<span class="_ _1d"></span>o<span class="_ _1d"></span>n<span class="_ _1d"></span>c<span class="_ _1d"></span>e<span class="_ _1d"></span>r<span class="_ _1d"></span>n<span class="_ _1d"></span>,<span class="_ _1d"></span> a<span class="_ _1d"></span>s<span class="_ _1d"></span> s<span class="_ _1d"></span>h<span class="_ _1c"></span>o<span class="_ _1d"></span>w<span class="_ _1d"></span>n<span class="_ _1d"></span> i<span class="_ _1d"></span>n<span class="_ _1d"></span> f<span class="_ _1d"></span>i<span class="_ _1d"></span>g<span class="_ _1d"></span>u<span class="_ _1d"></span>r<span class="_ _1d"></span>e<span class="_ _1d"></span> 6<span class="_ _1d"></span>.<span class="_ _1d"></span>2<span class="_ _1d"></span>.<span class="_ _1d"></span> T<span class="_ _1d"></span>h<span class="_ _1d"></span>i<span class="_ _1d"></span>s<span class="_ _1d"></span> k<span class="_ _1d"></span>i<span class="_ _1d"></span>n<span class="_ _1d"></span>d<span class="_ _1d"></span> o<span class="_ _1d"></span>f<span class="_ _1d"></span> <span class="ff3 ls36">multitier</span></div><div class="t m0 x44 h15 y48f ff3 fsb fc3 sc0 ls2d ws0">architecture<span class="ff4 ls47 ws540">, where each layer (tier) of an applic<span class="_ _e"></span><span class="ls30 ws250">ation has freedom to evolve, is used by</span></span></div><div class="t m0 x44 h15 y490 ff4 fsb fc3 sc0 ls2d ws6d4">many organizations. Teams can assemble arou<span class="ls3d ws56e">nd each tier based on areas of expertise,</span></div><div class="t m0 x44 h15 y491 ff4 fsb fc3 sc0 ls31 ws58">and each layer can potentially be <span class="_ _0"></span>reused<span class="ls36 ws35"> with other applications if desired. </span></div><div class="t m0 x44 h15 y134 ff4 fsb fc3 sc0 ls44 ws51f">You’ll develop each of these layers of Bark<span class="lsbc ws393"> as you work t<span class="_ _e"></span>hrough the chapter. <span class="_ _e"></span>Because</span></div><div class="t m0 x44 h15 y135 ff4 fsb fc3 sc0 ls34 ws3be">each is a separate concern, it makes sense to<span class="ls4e ws6d5"> think of t<span class="_ _e"></span>hem as separate Python modules:</span></div><div class="t m0 x86 h29 yd1b ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x87 h15 y19e ff4 fsb fc3 sc0 ls1e ws16">A database module</div><div class="t m0 x86 h29 yd1c ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x87 h15 yd1d ff4 fsb fc3 sc0 ls1f ws14">A commands module</div><div class="t m0 x86 h29 yd1e ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x87 h15 y26b ff4 fsb fc3 sc0 ls1e ws16">A bark module, which contains<span class="ls34 ws22"> the code that actually <span class="ff3 ls20 ws0">runs</span><span class="ls6b ws6d6"> the Bark application</span></span></div><div class="t m0 x44 h15 yd1f ff4 fsb fc3 sc0 ls30 wsbd">We’ll start from the persistence layer and work our way up.</div><div class="c x44 yd20 w5a hc2"><div class="t m6 x90 h40 yd21 ff12 fs1f fc12 sc0 ls6 ws0">User sees and</div><div class="t m6 x90 h40 yd22 ff12 fs1f fc12 sc0 ls6 ws0">chooses options.</div><div class="t m0 xf4 h36 yd23 ff11 fs1c fc12 sc0 ls6 ws0">Presentation layer</div><div class="t m0 xf3 h36 yd24 ff11 fs1c fc12 sc0 ls6 ws0">Business logic layer</div><div class="t m6 x90 h40 yd25 ff12 fs1f fc12 sc0 ls6 ws4f7">Options trigger</div><div class="t m6 x90 h40 yd26 ff12 fs1f fc12 sc0 ls6 ws0">commands.</div><div class="t m6 x90 h40 yd27 ff12 fs1f fc12 sc0 ls6 ws0">Commands fetch and</div><div class="t m6 x90 h40 yd28 ff12 fs1f fc12 sc0 ls6 ws0">manipulate data.</div><div class="t m0 xf9 h36 yd29 ff11 fs1c fc12 sc0 ls6 ws0">Persistence layer</div></div><div class="c x44 yd2a w2 hc3"><div class="t m0 xe4 h2b yd2b ffb fs18 fcb sc0 ls12e ws493">Figure 6.2<span class="_ _29"> </span>A multitier architecture is </div><div class="t m0 xe4 h2b yd2c ffb fs18 fcb sc0 ls69 ws44f">frequently used in web and desktop </div><div class="t m0 xe4 h2b yd2d ffb fs18 fcb sc0 ls6a ws0">applications.</div></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
