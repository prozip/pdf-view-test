<div id="pfeb" class="pf w0 h0" data-page-no="eb"><div class="pc pceb w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bgf0.png"/><div class="t m0 xa0 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">211<span class="_ _11e"></span><span class="ffa">Where you’ve been</span></div><div class="t m0 x83 h15 y40 ff4 fsb fc3 sc0 ls1c wsf2"> Chapter 2 introduced the foundational pr<span class="ls9e ws9ba">actice of separating<span class="ls36 wscc"> concerns. Most mod-</span></span></div><div class="t m0 x35 h15 y41 ff4 fsb fc3 sc0 ls20 ws363">ern programming languages encourage the us<span class="_ _e"></span><span class="lsc5 ws9bb">e of<span class="_ _0"></span> functions, meth<span class="ls1c ws183">ods, classes, and</span></span></div><div class="t m0 x35 h15 y42 ff4 fsb fc3 sc0 ls66 ws9bc">modules, and for<span class="_ _0"></span> good reason. Bre<span class="_ _0"></span>aking your softwar<span class="_ _0"></span>e down into its c<span class="_ _0"></span>onstituent p<span class="_ _0"></span>arts</div><div class="t m0 x35 h15 y43 ff4 fsb fc3 sc0 ls34 wsbe">helps reduce cognitive load as well as im<span class="ls30 wsef">prove the maintainability of code. Concerns</span></div><div class="t m0 x35 h15 y44 ff4 fsb fc3 sc0 ls7f ws0">c<span class="_ _1c"></span>a<span class="_ _1d"></span>n<span class="_ _1d"></span> b<span class="_ _1d"></span>e<span class="_ _1d"></span> s<span class="_ _1c"></span>e<span class="_ _1d"></span>p<span class="_ _1d"></span>a<span class="_ _1d"></span>r<span class="_ _1c"></span>a<span class="_ _1d"></span>t<span class="_ _1d"></span>e<span class="_ _1d"></span>d<span class="_ _1d"></span> a<span class="_ _1c"></span>t<span class="_ _1d"></span> t<span class="_ _1d"></span>h<span class="_ _1d"></span>e<span class="_ _1c"></span> l<span class="_ _1d"></span>o<span class="_ _1d"></span>w<span class="_ _1d"></span>e<span class="_ _1d"></span>s<span class="_ _1c"></span>t<span class="_ _1d"></span> l<span class="_ _1d"></span>e<span class="_ _1d"></span>v<span class="_ _1c"></span>e<span class="_ _1d"></span>l<span class="_ _1d"></span>s<span class="_ _1d"></span> o<span class="_ _1c"></span>f<span class="_ _1d"></span> c<span class="_ _1d"></span>o<span class="_ _1d"></span><span class="ls30 ws6b8">de, all the way up to the b<span class="_ _e"></span>roader architec-</span></div><div class="t m0 x35 h15 y45 ff4 fsb fc3 sc0 ls4e ws1e3">ture of the software.</div><div class="t m0 x83 h15 y46 ff4 fsb fc3 sc0 ls6b ws776"> Building on Pyth<span class="_ _0"></span>on’s structures for sepa<span class="ls2f ws629">ration of concerns, you learned to use them</span></div><div class="t m0 x35 h15 y47 ff4 fsb fc3 sc0 ls31 ws58">for abstraction and encapsulation in chapte<span class="ls81 ws26f">r 3. Freeing you<span class="_ _e"></span>rself and other developer<span class="_ _e"></span>s</span></div><div class="t m0 x35 h15 y48 ff4 fsb fc3 sc0 ls71 ws15e">from the minutiae of a partic<span class="ls2d ws177">ular task unless they’re inte<span class="ls44 ws5ae">rested in knowing more pro-</span></span></div><div class="t m0 x35 h15 y49 ff4 fsb fc3 sc0 ls36 ws22c">vides welcome relief. Exposing only cri<span class="_ _0"></span>tical<span class="ls38 ws9bd"> details to other areas of software also</span></div><div class="t m0 x35 h15 y4a ff4 fsb fc3 sc0 ls36 ws35">reduces integration points and the likeliho<span class="ls1c ws21">od of breaking code for your consumers.</span></div><div class="t m0 x83 h15 y4b ff4 fsb fc3 sc0 ls44 wsfa"> Moving into more concrete territory, <span class="ls51 wsfb">you learned about designing for perfor-</span></div><div class="t m0 x35 h15 y4c ff4 fsb fc3 sc0 ls3a wsc3">mance in chapter 4. You saw so<span class="ls4e ws197">me of the data structur<span class="_ _e"></span>es Python provides and in what</span></div><div class="t m0 x35 h15 y4d ff4 fsb fc3 sc0 ls20 ws294">situations they’re useful. <span class="_ _e"></span>You also learned about some of the tools for quantitatively</div><div class="t m0 x35 h15 y4e ff4 fsb fc3 sc0 ls30 ws7e2">measuring the performance of your soft<span class="_ _e"></span>wa<span class="ls2f ws7e3">re. Metrics measured trump speculation</span></div><div class="t m0 x35 h15 y4f ff4 fsb fc3 sc0 ls48 ws2be">about what’s fastest.</div><div class="t m0 x83 h15 y50 ff4 fsb fc3 sc0 ls3a ws4b7"> Where chapter 4 showed you how to test <span class="ls30 ws32e">whether programs are efficient, chapter 5</span></div><div class="t m0 x35 h15 y51 ff4 fsb fc3 sc0 ls38 wsb9">focused on testing whether programs are <span class="ff3 ls81 ws0">correct</span><span class="ls30 ws10b">. <span class="_ _e"></span>Functional testing helps you verify</span></div><div class="t m0 x35 h15 y52 ff4 fsb fc3 sc0 ls71 ws40d">that you’re building what you mean to <span class="ls51 ws34a">build. You learned how <span class="lsae ws214">functional tests are</span></span></div><div class="t m0 x35 h15 y53 ff4 fsb fc3 sc0 ls3a wsa7">structured and how to write tests using Pyth<span class="ls1c ws165">on tools. Functional testing patterns are</span></div><div class="t m0 x35 h15 y54 ff4 fsb fc3 sc0 ls42 ws1ec">quite similar across languages <span class="ls34 wsb6">and frameworks, so you can take this information with</span></div><div class="t m0 x35 h15 y55 ff4 fsb fc3 sc0 ls51 ws47">you most anywhere.</div><div class="t m0 x83 h15 y56 ff4 fsb fc3 sc0 ls2d ws3ad"> Armed with some of the underpinnings of<span class="ls3d ws8f"> design, the next part of the book took</span></div><div class="t m0 x35 h15 y57 ff4 fsb fc3 sc0 ls2e ws610">you on a practical journey by buildi<span class="_ _0"></span>ng the Bark application. Thr<span class="_ _0"></span>ough the course of</div><div class="t m0 x35 h15 y58 ff4 fsb fc3 sc0 ls34 ws22">this journey, you reached <span class="ls47 ws54">a num<span class="_ _e"></span>ber of milestones:</span></div><div class="t m0 x8b h29 y18e5 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x48 h15 y4fc ff4 fsb fc3 sc0 ls2f ws799">You built a multitier architecture to <span class="ls71 wsee">support separate presentation, business</span></div><div class="t m0 x48 h15 y41e ff4 fsb fc3 sc0 ls6b ws6d6">logic, and persistence layers<span class="_ _0"></span>.</div><div class="t m0 x8b h29 y1081 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x48 h15 ybf2 ff4 fsb fc3 sc0 ls1dc ws0">Y<span class="_ _3e"></span>o<span class="_ _3e"></span>u<span class="_ _3e"></span> <span class="_ _e"></span>o<span class="_ _20"></span>p<span class="_ _3e"></span>e<span class="_ _25"></span>n<span class="_ _3e"></span>e<span class="_ _3e"></span>d<span class="_ _25"></span> B<span class="_ _3e"></span>a<span class="_ _3e"></span>r<span class="_ _3e"></span>k<span class="_ _25"></span> u<span class="_ _3e"></span>p<span class="_ _3e"></span> t<span class="_ _3e"></span>o<span class="_ _25"></span> e<span class="_ _3e"></span>x<span class="_ _3e"></span>t<span class="_ _3e"></span>e<span class="_ _25"></span>n<span class="_ _3e"></span>s<span class="_ _3e"></span>i<span class="_ _3e"></span>o<span class="_ _25"></span>n<span class="_ _3e"></span> t<span class="_ _3e"></span>o<span class="_ _25"></span> m<span class="_ _3e"></span>o<span class="_ _3e"></span><span class="ls2e ws55f">re easily add new <span class="ls3a ws76e">functionality, and</span></span></div><div class="t m0 x48 h15 ybf3 ff4 fsb fc3 sc0 ls25 ws1a">then added a new feature to import<span class="ls31 ws25"> stars from GitHub as bookmarks.</span></div><div class="t m0 x8b h29 y1082 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x48 h15 y1083 ff4 fsb fc3 sc0 ls2f ws852">You used interfaces and the command <span class="ls48 ws9be">pattern to further reduce the work</span></div><div class="t m0 x48 h15 y18e6 ff4 fsb fc3 sc0 ls1c ws10">needed to add or change features.</div><div class="t m0 x8b h29 y18e7 ffe fs17 fca sc0 ls6 ws0"></div><div class="t m0 x48 h15 y98b ff4 fsb fc3 sc0 ls4e wsae">You loosened the coup<span class="_ _e"></span>ling between diff<span class="ls38 ws472">erent areas of Bark, opening it up to</span></div><div class="t m0 x48 h15 y296 ff4 fsb fc3 sc0 ls38 ws26">new possibilities, like maki<span class="lsc5 ws3ab">ng a mobile or web app.</span></div><div class="t m0 x35 h15 y6d9 ff4 fsb fc3 sc0 ls36 ws137">A bookmarking tool isn’t flashy, but you learne<span class="ls25 ws1cd">d some fl<span class="_ _0"></span>ashy techniques in building it.</span></div><div class="t m0 x35 h15 y6da ff4 fsb fc3 sc0 ls2f ws338">Applying the body of knowledge you’ve gained <span class="ls30 ws250">to your future projects for real tasks is</span></div><div class="t m0 x35 h15 yc74 ff4 fsb fc3 sc0 ls30 ws32c">bound to give you similarly <span class="ls6 ws9bf">effective results.<span class="_ _e"></span> You can get practice w<span class="_ _e"></span>ith any new con-</span></div><div class="t m0 x35 h15 yc76 ff4 fsb fc3 sc0 ls3b ws503">cepts you learn by applying them to B<span class="_ _e"></span>ark as well. You may choose to add features<span class="_ _e"></span>,</div><div class="t m0 x35 h15 y168 ff4 fsb fc3 sc0 ls3d ws2c">improve the existing code, or <span class="_ _e"></span>writ<span class="ls42 ws32">e tests for it. The sky’s the limit!</span></div></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
