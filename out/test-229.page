<div id="pfe5" class="pf w0 h0" data-page-no="e5"><div class="pc pce5 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="bge5.png"/><div class="t m0 xa0 h14 y80 ff7 fs7 fcb sc0 ls6 ws0">205<span class="_ _119"></span><span class="ffa">Design patterns</span></div><div class="t m0 x8a h3d y6e1 ffb fs1e fca sc0 ls6 ws0">3</div><div class="t m0 x48 h15 y40 ff3 fsb fc3 sc0 ls62 ws0">Invoker<span class="_ _f"></span><span class="ff4 ls4e ws1e3">—The entity that <span class="_ _e"></span>triggers the command to alert the re<span class="_ _e"></span>ceiver</span></div><div class="t m0 x8a h3d y6e2 ffb fs1e fca sc0 ls6 ws0">4</div><div class="t m0 x48 h15 y6e4 ff3 fsb fc3 sc0 ls1c ws0">Client<span class="_ _f"></span><span class="ff4 ls38 ws18f">—The entity that assembles the in<span class="ls2d ws492">vokers, commands, and receivers to</span></span></div><div class="t m0 x48 h15 y10b ff4 fsb fc3 sc0 ls2d ws31">achieve a task</div><div class="t m0 x35 h15 y6c9 ff4 fsb fc3 sc0 ls30 ws36">In Bark, these pieces are as follows:</div><div class="t m0 x8a h3d y188e ffb fs1e fca sc0 ls6 ws0">1</div><div class="t m0 x48 h1b ydb6 ff3 fsb fc3 sc0 lsc2 ws0">The </div><div class="t m5 x15 h24 y188f ffd fsc fc3 sc0 lsa0 ws0">PersistenceLa<span class="_ _e"></span>yer</div><div class="t m0 x47 h15 ydb6 ff3 fsb fc3 sc0 ls35 ws997"> classes are t<span class="_ _0"></span>he receivers.<span class="ff4 ls42 ws895"> They receive enough information <span class="_ _0"></span>to</span></div><div class="t m0 x48 h15 yd0c ff4 fsb fc3 sc0 ls5e ws14a">store or retrieve data (from a <span class="_ _e"></span><span class="ls42 ws26e">database, in the case of the </span></div><div class="t m5 x70 h24 ydb7 ffd fsc fc3 sc0 lsa0 ws0">BookmarkDat<span class="_ _e"></span>abase</div><div class="t m0 xa0 h15 yd0c ff4 fsb fc3 sc0 ls79 ws0">).</div><div class="t m0 x8a h3d y1890 ffb fs1e fca sc0 ls6 ws0">2</div><div class="t m0 x48 h1b yad3 ff3 fsb fc3 sc0 lsc2 ws0">The </div><div class="t m5 x21 h24 y1891 ffd fsc fc3 sc0 lsa0 ws0">Command</div><div class="t m0 x67 h15 yad3 ff3 fsb fc3 sc0 ls36 ws20b"> classes are the commands.<span class="ff4 ls3a ws1b4"> They store the information needed to com-</span></div><div class="t m0 x48 h15 y73e ff4 fsb fc3 sc0 ls3a ws83">municate with the persistence layer.</div><div class="t m0 x8a h3d y1892 ffb fs1e fca sc0 ls6 ws0">3</div><div class="t m0 x48 h1b y6ce ff3 fsb fc3 sc0 lsc2 ws0">The </div><div class="t m5 x21 h24 yb75 ffd fsc fc3 sc0 lsa0 ws0">Option</div><div class="t m0 x143 h15 y6ce ff3 fsb fc3 sc0 ls1f ws998"> instances are the invokers.<span class="ff4 ls20 ws134"> They trigger a command to take place when</span></div><div class="t m0 x48 h15 y6cf ff4 fsb fc3 sc0 ls71 wsd4">a user chooses an option in the menu.</div><div class="t m0 x8a h3d y1893 ffb fs1e fca sc0 ls6 ws0">4</div><div class="t m0 x48 h15 y5ab ff3 fsb fc3 sc0 ls6d ws999">The clie<span class="_ _e"></span>nt module is the cli<span class="_ _e"></span>ent.<span class="ff4 ls34 wsb6"> It hooks up options to commands properly so that</span></div><div class="t m0 x48 h15 y14b ff4 fsb fc3 sc0 ls71 ws83">users’ menu choices ultimately <span class="ls1c ws10">result in the desired action.</span></div><div class="t m0 x35 h15 yeb9 ff4 fsb fc3 sc0 ls2e ws0">A <span class="_ _f"></span><span class="ff3 ls47 ws298">unified modeling language</span><span class="ls38 ws126"> (UML) diagram<span class="_ _e"></span> of these classes is shown in figure 11.5.</span></div><div class="t m0 x122 h31 y1894 ff4 fs1a fc3 sc0 ls6 ws0">1</div><div class="t m0 x35 h15 y962 ff4 fsb fc3 sc0 ls1b ws99a">UML diagrams are <span class="_ _e"></span>a common way of depicting <span class="_ _e"></span><span class="ls1c ws82">the relationships between entities in a</span></div><div class="t m0 x35 h15 y3fa ff4 fsb fc3 sc0 ls34 ws128">program. This book has been intentionally<span class="ls2d ws129"> light on UML because it can add to the</span></div><div class="t m0 x35 h15 y150 ff4 fsb fc3 sc0 ls1c ws375">learning curve for the untrained eye. As <span class="ls36 ws871">you learn about design<span class="ls42 ws8c8"> patterns, though,</span></span></div><div class="t m0 x35 h15 y151 ff4 fsb fc3 sc0 ls20 ws2dd">you’ll see UML diagrams come up f<span class="_ _e"></span>requently. Remember that the patt<span class="_ _e"></span>erns themselves</div><div class="t m0 x35 h15 y152 ff4 fsb fc3 sc0 ls3a ws5a1">are what’s important to understand—if UM<span class="ls1f ws144">L diagrams don’t wor<span class="_ _0"></span>k well for you, read</span></div><div class="t m0 x35 h15 y1253 ff4 fsb fc3 sc0 ls3b ws29">about them instead.</div><div class="c x35 y1895 we4 h16b"><div class="t m0 xd8 h5f y1896 ff15 fs1c fc12 sc0 ls6 ws0">Option</div><div class="t m0 x90 h5f y1897 ff15 fs1c fc12 sc0 ls6 ws0">Command</div><div class="t m0 xae h5f y1898 ff15 fs1c fc12 sc0 ls6 ws0">AddBookmarkCommand<span class="_ _11a"> </span>PersistenceLayer</div><div class="t m0 x8f h5f y1899 ff15 fs1c fc12 sc0 ls6 ws0">BookmarkDatabase</div><div class="t m0 xd9 h37 y189a ff12 fs1d fc12 sc0 ls6 ws0">The client composes options (invokers)</div><div class="t m0 xd9 h37 y189b ff12 fs1d fc12 sc0 ls6 ws0">with their corresponding commands. </div><div class="t m0 x14b h37 y189c ff12 fs1d fc12 sc0 ls6 ws0">Commands interact with the persistence </div><div class="t m0 x14b h37 y189d ff12 fs1d fc12 sc0 ls6 ws0">layer (receiver) to manipulate bookmark</div><div class="t m0 x14b h37 y189e ff12 fs1d fc12 sc0 ls6 ws0">data in the database.</div><div class="t m0 x128 h5f y189f ff15 fs1c fc12 sc0 ls6 ws0">Client</div></div><div class="c x35 y18a0 w2 h16c"><div class="t m0 x0 h2b y18a1 ffb fs18 fcb sc0 lsb2 ws255">Figure 11.5<span class="_ _fc"> </span>The comm<span class="_ _e"></span>and pattern as us<span class="_ _0"></span>ed in the Bark application</div></div><div class="t m0 x19 h32 yce5 ff4 fs1b fcd sc0 ls6 ws0">1</div><div class="t m0 x34 h33 y981 ff4 fs17 fcd sc0 ls6 ws0">For <span class="_ _25"></span>more <span class="_ _1c"></span>on <span class="_ _1c"></span>UML, <span class="_ _1c"></span>see <span class="_ _1c"></span>Wikipedia’s <span class="_ _25"></span>“Unified <span class="_ _25"></span>Modeling <span class="_ _25"></span>Language” <span class="_ _1c"></span>article:</div><div class="t m3 x0 h34 y981 ff8 fs17 fcd sc0 ls6 ws0"> </div><div class="t m0 x53 h33 y981 ff4 fs17 fcf sc0 ls6 ws0">https://en<span class="_ _0"></span>.wikipedia.o<span class="_ _0"></span>rg/wiki/Unifi<span class="_ _0"></span>ed</div><div class="t m0 x34 h33 y211 ff4 fs17 fcf sc0 ls6 ws0">_Modeling_La<span class="_ _0"></span>nguage<span class="fcd">.</span></div><a class="l" href="https://en.wikipedia.org/wiki/Unified_Modeling_Language"><div class="d m2" style="border-style:none;position:absolute;left:330.720000px;bottom:71.918000px;width:143.400000px;height:10.380000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="https://en.wikipedia.org/wiki/Unified_Modeling_Language"><div class="d m2" style="border-style:none;position:absolute;left:474.120000px;bottom:71.918000px;width:0.180000px;height:10.380000px;background-color:rgba(255,255,255,0.000001);"></div></a><a class="l" href="https://en.wikipedia.org/wiki/Unified_Modeling_Language"><div class="d m2" style="border-style:none;position:absolute;left:66.120000px;bottom:61.718000px;width:82.980000px;height:10.200000px;background-color:rgba(255,255,255,0.000001);"></div></a></div><div class="pi" data-data='{"ctm":[1.000000,0.000000,0.000000,1.000000,0.000000,0.000000]}'></div></div>
